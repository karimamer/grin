{-
IMPROVEMENT IDEA:

In this program if the GT, LT, EQ nodes are replaced with
integers the llvm backend optimizes it to print a constant 1540.

Possible improvements:
 * Improve llvm to generate lower level code
 * Improve grin->llvm to handle Nodes without parameters differently
 * Implement a GRIN optimisation that turns enum like local node values
   to integers.
-}

grinMain =
  unboxed.CGrInt.4.0 <- idr_Main.fn.unboxed 10
  unboxed.CGrInt.5.0 <- idr_Main.fn.unboxed unboxed.CGrInt.4.0
  _prim_int_print unboxed.CGrInt.5.0
  unboxed.CGrInt.1.0 <- idr_{EVAL_0}.unboxed 10
  unboxed.CGrInt.7.1 <- idr_{EVAL_0}.unboxed unboxed.CGrInt.1.0
  _prim_int_print unboxed.CGrInt.7.1

idr_Main.fn.unboxed idr_Main.fn0 =
  idris_int_eq1_1.0.0 <- pure 0
  idris_int_eq2.0.0 <- _prim_int_eq idr_Main.fn0 idris_int_eq1_1.0.0
  ccp.0.0.0 <- case idris_int_eq2.0.0 of
    #False ->
      pure idris_int_eq1_1.0.0
    #True ->
      pure 1
  idr_Main.fn1_val <- case ccp.0.0.0 of
    0 ->
      idris_int_lt2.0.0 <- _prim_int_lt idr_Main.fn0 idris_int_eq1_1.0.0
      ccp.1.0.0 <- case idris_int_lt2.0.0 of
        #False ->
          pure ccp.0.0.0
        #True ->
          pure 1
      case ccp.1.0.0 of
        0 ->
          pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          pure (Cidr_Prelude.Interfaces.LT)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)
  case idr_Main.fn1_val of
    (Cidr_Prelude.Interfaces.GT) ->
      idris_int_sub1_1.0 <- pure 1
      unboxed.CGrInt.2 <- _prim_int_sub idr_Main.fn0 idris_int_sub1_1.0
      unboxed.CGrInt.3 <- idr_Main.fn.unboxed unboxed.CGrInt.2
      _prim_int_add idr_Main.fn0 unboxed.CGrInt.3
    #default ->
      pure idris_int_eq1_1.0.0

idr_{EVAL_0}.unboxed idr_{EVAL_0}0 =
  idris_int_eq1_1.0.1 <- pure 0
  idris_int_eq2.0.1 <- _prim_int_eq idr_{EVAL_0}0 idris_int_eq1_1.0.1
  ccp.0.0.1 <- case idris_int_eq2.0.1 of
    #False ->
      pure idris_int_eq1_1.0.1
    #True ->
      pure 1
  idr_Main.{lazy_fn_0}1_val.0 <- case ccp.0.0.1 of
    0 ->
      idris_int_lt2.0.1 <- _prim_int_lt idr_{EVAL_0}0 idris_int_eq1_1.0.1
      ccp.1.0.1 <- case idris_int_lt2.0.1 of
        #False ->
          pure ccp.0.0.1
        #True ->
          pure 1
      case ccp.1.0.1 of
        0 ->
          pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          pure (Cidr_Prelude.Interfaces.LT)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)
  case idr_Main.{lazy_fn_0}1_val.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      idris_int_sub1_1.1 <- pure 1
      unboxed.CGrInt.7.0 <- _prim_int_sub idr_{EVAL_0}0 idris_int_sub1_1.1
      unboxed.CGrInt.8 <- idr_{EVAL_0}.unboxed unboxed.CGrInt.7.0
      _prim_int_add idr_{EVAL_0}0 unboxed.CGrInt.8
    #default ->
      pure idris_int_eq1_1.0.1
