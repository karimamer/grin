primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
idris_int_eq idris_int_eq0 idris_int_eq1 =
  (CGrInt idris_int_eq0_1) <- fetch idris_int_eq0
  (CGrInt idris_int_eq1_1) <- fetch idris_int_eq1
  idris_int_eq2 <- _prim_int_eq $ idris_int_eq0_1 idris_int_eq1_1
  case idris_int_eq2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_lt idris_int_lt0 idris_int_lt1 =
  (CGrInt idris_int_lt0_1) <- fetch idris_int_lt0
  (CGrInt idris_int_lt1_1) <- fetch idris_int_lt1
  idris_int_lt2 <- _prim_int_lt $ idris_int_lt0_1 idris_int_lt1_1
  case idris_int_lt2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_le idris_int_le0 idris_int_le1 =
  (CGrInt idris_int_le0_1) <- fetch idris_int_le0
  (CGrInt idris_int_le1_1) <- fetch idris_int_le1
  idris_int_le2 <- _prim_int_le $ idris_int_le0_1 idris_int_le1_1
  case idris_int_le2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_gt idris_int_gt0 idris_int_gt1 =
  (CGrInt idris_int_gt0_1) <- fetch idris_int_gt0
  (CGrInt idris_int_gt1_1) <- fetch idris_int_gt1
  idris_int_gt2 <- _prim_int_gt $ idris_int_gt0_1 idris_int_gt1_1
  case idris_int_gt2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_ge idris_int_ge0 idris_int_ge1 =
  (CGrInt idris_int_ge0_1) <- fetch idris_int_ge0
  (CGrInt idris_int_ge1_1) <- fetch idris_int_ge1
  idris_int_ge2 <- _prim_int_ge $ idris_int_ge0_1 idris_int_ge1_1
  case idris_int_ge2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_print idris_int_print0 =
  (CGrInt idris_int_print0_1) <- fetch idris_int_print0
  _prim_int_print $ idris_int_print0_1
  pure (CUnit)

idris_float_add idris_float_add0 idris_float_add1 =
  (CGrFloat idris_float_add0_1) <- fetch idris_float_add0
  (CGrFloat idris_float_add1_1) <- fetch idris_float_add1
  idris_float_add3 <- _prim_float_add $ idris_float_add0_1 idris_float_add1_1
  pure (CGrFloat idris_float_add3)

idris_float_mul idris_float_mul0 idris_float_mul1 =
  (CGrFloat idris_float_mul0_1) <- fetch idris_float_mul0
  (CGrFloat idris_float_mul1_1) <- fetch idris_float_mul1
  idris_float_mul3 <- _prim_float_mul $ idris_float_mul0_1 idris_float_mul1_1
  pure (CGrFloat idris_float_mul3)

idris_int_add idris_int_add0 idris_int_add1 =
  (CGrInt idris_int_add0_1) <- fetch idris_int_add0
  (CGrInt idris_int_add1_1) <- fetch idris_int_add1
  idris_int_add2 <- _prim_int_add $ idris_int_add0_1 idris_int_add1_1
  pure (CGrInt idris_int_add2)

idris_int_sub idris_int_sub0 idris_int_sub1 =
  (CGrInt idris_int_sub0_1) <- fetch idris_int_sub0
  (CGrInt idris_int_sub1_1) <- fetch idris_int_sub1
  idris_int_sub2 <- _prim_int_sub $ idris_int_sub0_1 idris_int_sub1_1
  pure (CGrInt idris_int_sub2)

idris_int_mul idris_int_mul0 idris_int_mul1 =
  (CGrInt idris_int_mul0_1) <- fetch idris_int_mul0
  (CGrInt idris_int_mul1_1) <- fetch idris_int_mul1
  idris_int_mul2 <- _prim_int_mul $ idris_int_mul0_1 idris_int_mul1_1
  pure (CGrInt idris_int_mul2)

idris_int_div idris_int_div0 idris_int_div1 =
  (CGrInt idris_int_div0_1) <- fetch idris_int_div0
  (CGrInt idris_int_div1_1) <- fetch idris_int_div1
  idris_int_div2 <- _prim_int_div $ idris_int_div0_1 idris_int_div1_1
  pure (CGrInt idris_int_div2)

idris_float_div idris_float_div0 idris_float_div1 =
  (CGrFloat idris_float_div0_1) <- fetch idris_float_div0
  (CGrFloat idris_float_div1_1) <- fetch idris_float_div1
  idris_float_div2 <- _prim_float_div $ idris_float_div0_1 idris_float_div1_1
  pure (CGrFloat idris_float_div2)

idris_write_str idris_write_str1 idris_write_str2 =
  (CGrString idris_write_str2_0) <- fetch idris_write_str2
  _prim_string_print $ idris_write_str2_0
  pure (CUnit)

idris_read_str idris_read_str0 =
  idris_read_str1 <- _prim_read_string $
  pure (CGrString idris_read_str1)

idris_str_concat idris_str_concat1 idris_str_concat2 =
  (CGrString idris_str_concat1_0) <- fetch idris_str_concat1
  (CGrString idris_str_concat2_0) <- fetch idris_str_concat2
  idris_str_concat3 <- _prim_string_concat $ idris_str_concat1_0 idris_str_concat2_0
  pure (CGrString idris_str_concat3)

idris_str_eq idris_str_eq1 idris_str_eq2 =
  (CGrString idris_str_eq1_0) <- fetch idris_str_eq1
  (CGrString idris_str_eq2_0) <- fetch idris_str_eq2
  idris_str_eq3 <- _prim_string_eq $ idris_str_eq1_0 idris_str_eq2_0
  case idris_str_eq3 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_str_len idris_str_len1 =
  (CGrString idris_str_len2) <- fetch idris_str_len1
  idris_str_len3 <- _prim_string_len $ idris_str_len2
  pure (CGrInt idris_str_len3)

idris_str_rev idris_str_rev1 =
  (CGrString idris_str_rev1_0) <- fetch idris_str_rev1
  idris_str_rev2 <- _prim_string_reverse $ idris_str_rev1_0
  pure (CGrString idris_str_rev2)

idris_str_head idris_str_head1 =
  (CGrString idris_str_head1_0) <- fetch idris_str_head1
  idris_str_head2 <- _prim_string_head $ idris_str_head1_0
  pure (CGrInt idris_str_head2)

idris_str_tail idris_str_tail1 =
  (CGrString idris_str_tail1_0) <- fetch idris_str_tail1
  idris_str_tail2 <- _prim_string_tail $ idris_str_tail1_0
  pure (CGrString idris_str_tail2)

idris_str_cons idris_str_cons1 idris_str_cons2 =
  (CGrInt idris_str_cons1_0) <- fetch idris_str_cons1
  (CGrString idris_str_cons2_0) <- fetch idris_str_cons2
  idris_str_cons3 <- _prim_string_cons $ idris_str_cons1_0 idris_str_cons2_0
  pure (CGrString idris_str_cons3)

idris_int_str idris_int_str1 =
  (CGrInt idris_int_str1_0) <- fetch idris_int_str1
  idris_int_str2 <- _prim_int_str $ idris_int_str1_0
  pure (CGrString idris_int_str2)

idris_str_int idris_str_int1 =
  (CGrString idris_str_int1_0) <- fetch idris_str_int1
  idris_str_int2 <- _prim_str_int $ idris_str_int1_0
  pure (CGrInt idris_str_int2)

idris_int_float idris_int_float1 =
  (CGrInt idris_int_float1_0) <- fetch idris_int_float1
  idris_int_float2 <- _prim_int_float $ idris_int_float1_0
  pure (CGrFloat idris_int_float2)

idris_float_str idris_float_str1 =
  (CGrFloat idris_float_str1_0) <- fetch idris_float_str1
  idris_float_str2 <- _prim_float_string $ idris_float_str1_0
  pure (CGrString idris_float_str2)

idris_ffi_file_eof idris_ffi_file_eof1 =
  (CGrInt idris_ffi_file_eof1_0) <- fetch idris_ffi_file_eof1
  idris_ffi_file_eof2 <- _prim_ffi_file_eof $ idris_ffi_file_eof1_0
  pure (CGrInt idris_ffi_file_eof2)

idris_lz_ext idris_lz_ext1 =
  (CGrInt idris_lz_ext2) <- fetch idris_lz_ext1
  idris_lz_ext3 <- _prim_int_add $ idris_lz_ext2 0
  pure (CGrInt idris_lz_ext3)

idris_ls_ext idris_ls_ext1 =
  (CGrInt idris_ls_ext2) <- fetch idris_ls_ext1
  idris_ls_ext3 <- _prim_int_add $ idris_ls_ext2 0
  pure (CGrInt idris_ls_ext3)

idris_ch_int idris_ch_int1 =
  (CGrInt idris_ch_int2) <- fetch idris_ch_int1
  pure (CGrInt idris_ch_int2)

idris_usleep idris_usleep1 =
  (CGrInt idris_usleep1_0) <- fetch idris_usleep1
  _prim_usleep $ idris_usleep1_0
  pure ()

prim__stdin =
  pure (CGrInt 0)

prim__stdout =
  pure (CGrInt 1)

prim__stderr =
  pure (CGrInt 2)

grinMain =
  r <- "idr_{runMain_0}" $
  pure ()

"idr_Prelude.Bool.&&" "idr_Prelude.Bool.&&0" "idr_Prelude.Bool.&&1" =
  "idr_Prelude.Bool.&&0_val" <- fetch "idr_Prelude.Bool.&&0"
  case "idr_Prelude.Bool.&&0_val" of
    (Cidr_Prelude.Bool.False) ->
      fetch "idr_Prelude.Bool.&&0"
    (Cidr_Prelude.Bool.True) ->
      "idr_{EVAL_0}" $ "idr_Prelude.Bool.&&1"

"idr_Prelude.Interfaces.+" "idr_Prelude.Interfaces.+0" "idr_Prelude.Interfaces.+1" =
  fetch "idr_Prelude.Interfaces.+1"

idr_Prelude.Basics.. idr_Prelude.Basics..0 idr_Prelude.Basics..1 idr_Prelude.Basics..2 idr_Prelude.Basics..3 idr_Prelude.Basics..4 idr_Prelude.Basics..5 =
  idr_Prelude.Basics..6_val <- "idr_{APPLY_0}" $ idr_Prelude.Basics..4 idr_Prelude.Basics..5
  idr_Prelude.Basics..6 <- store idr_Prelude.Basics..6_val
  "idr_{APPLY_0}" $ idr_Prelude.Basics..3 idr_Prelude.Basics..6

idr_Force idr_Force0 idr_Force1 idr_Force2 =
  "idr_{EVAL_0}" $ idr_Force2

idr_Main.adder idr_Main.adder0 idr_Main.adder1 idr_Main.adder2 idr_Main.adder3 =
  idr_Main.adder2_val <- fetch idr_Main.adder2
  case idr_Main.adder2_val of
    (CGrInt idr_Main.adder_cpat_LInt64_0) ->
      case idr_Main.adder_cpat_LInt64_0 of
        0 ->
          fetch idr_Main.adder3
        #default ->
          idr_Main.adder4_val_1 <- pure (CGrInt 1)
          idr_Main.adder4 <- store idr_Main.adder4_val_1
          idr_Main.adder4_val <- idris_int_sub $ idr_Main.adder2 idr_Main.adder4
          idr_Main.adder4_2 <- store idr_Main.adder4_val
          pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.adder1 idr_Main.adder4_2 idr_Main.adder3)
    #default ->
      idr_Main.adder4_val_4 <- pure (CGrInt 1)
      idr_Main.adder4_5 <- store idr_Main.adder4_val_4
      idr_Main.adder4_val_3 <- idris_int_sub $ idr_Main.adder2 idr_Main.adder4_5
      idr_Main.adder4_6 <- store idr_Main.adder4_val_3
      pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.adder1 idr_Main.adder4_6 idr_Main.adder3)

idr_assert_unreachable =
  pure (CErased)

idr_call__IO idr_call__IO0 idr_call__IO1 idr_call__IO2 =
  idr_call__IO3_val <- pure (CErased)
  idr_call__IO3 <- store idr_call__IO3_val
  "idr_{APPLY_0}" $ idr_call__IO2 idr_call__IO3

idr_Data.Vect.foldrImpl idr_Data.Vect.foldrImpl0 idr_Data.Vect.foldrImpl1 idr_Data.Vect.foldrImpl2 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl6 =
  idr_Data.Vect.foldrImpl6_val <- fetch idr_Data.Vect.foldrImpl6
  case idr_Data.Vect.foldrImpl6_val of
    (Cidr_Data.Vect.:: idr_Data.Vect.foldrImpl7 idr_Data.Vect.foldrImpl8) ->
      idr_Data.Vect.foldrImpl9_val <- pure (CErased)
      idr_Data.Vect.foldrImpl9 <- store idr_Data.Vect.foldrImpl9_val
      idr_Data.Vect.foldrImpl10_val <- pure (CErased)
      idr_Data.Vect.foldrImpl10 <- store idr_Data.Vect.foldrImpl10_val
      idr_Data.Vect.foldrImpl11_val <- pure (CErased)
      idr_Data.Vect.foldrImpl11 <- store idr_Data.Vect.foldrImpl11_val
      idr_Data.Vect.foldrImpl12_val <- pure (C"idr_{U_Data.Vect.{foldrImpl_1}_1}" idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl7)
      idr_Data.Vect.foldrImpl12 <- store idr_Data.Vect.foldrImpl12_val
      idr_Data.Vect.foldrImpl $ idr_Data.Vect.foldrImpl9 idr_Data.Vect.foldrImpl10 idr_Data.Vect.foldrImpl11 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl12 idr_Data.Vect.foldrImpl8
    (Cidr_Data.Vect.Nil) ->
      "idr_{APPLY_0}" $ idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl4

idr_Prelude.Basics.id idr_Prelude.Basics.id0 idr_Prelude.Basics.id1 =
  fetch idr_Prelude.Basics.id1

idr_idris_crash =
  pure (CErased)

idr_Prelude.Bool.ifThenElse idr_Prelude.Bool.ifThenElse0 idr_Prelude.Bool.ifThenElse1 idr_Prelude.Bool.ifThenElse2 idr_Prelude.Bool.ifThenElse3 =
  idr_Prelude.Bool.ifThenElse1_val <- fetch idr_Prelude.Bool.ifThenElse1
  case idr_Prelude.Bool.ifThenElse1_val of
    (Cidr_Prelude.Bool.False) ->
      "idr_{EVAL_0}" $ idr_Prelude.Bool.ifThenElse3
    (Cidr_Prelude.Bool.True) ->
      "idr_{EVAL_0}" $ idr_Prelude.Bool.ifThenElse2

idr_Prelude.Interfaces.intToBool idr_Prelude.Interfaces.intToBool0 =
  idr_Prelude.Interfaces.intToBool0_val <- fetch idr_Prelude.Interfaces.intToBool0
  case idr_Prelude.Interfaces.intToBool0_val of
    (CGrInt idr_Prelude.Interfaces.intToBool_cpat_LInt64_0) ->
      case idr_Prelude.Interfaces.intToBool_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.True)

idr_io_bind idr_io_bind0 idr_io_bind1 idr_io_bind2 idr_io_bind3 idr_io_bind4 idr_io_bind5 =
  idr_io_bind6_val_7 <- "idr_{APPLY_0}" $ idr_io_bind3 idr_io_bind5
  idr_io_bind6 <- store idr_io_bind6_val_7
  idr_io_bind6_val <- "idr_{APPLY_0}" $ idr_io_bind4 idr_io_bind6
  idr_io_bind6_8 <- store idr_io_bind6_val
  "idr_{APPLY_0}" $ idr_io_bind6_8 idr_io_bind5

idr_io_pure idr_io_pure0 idr_io_pure1 idr_io_pure2 idr_io_pure3 =
  fetch idr_io_pure2

idr_Prelude.Chars.isDigit idr_Prelude.Chars.isDigit0 =
  idr_Prelude.Chars.isDigit1_val_10 <- pure (CGrInt 48)
  idr_Prelude.Chars.isDigit1 <- store idr_Prelude.Chars.isDigit1_val_10
  idr_Prelude.Chars.isDigit1_val_9 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" $ idr_Prelude.Chars.isDigit0 idr_Prelude.Chars.isDigit1
  idr_Prelude.Chars.isDigit1_11 <- store idr_Prelude.Chars.isDigit1_val_9
  idr_Prelude.Chars.isDigit1_val_12 <- fetch idr_Prelude.Chars.isDigit1_11
  idr_Prelude.Chars.isDigit1_val <- case idr_Prelude.Chars.isDigit1_val_12 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      idr_Prelude.Chars.isDigit2_val_13 <- pure (CGrInt 48)
      idr_Prelude.Chars.isDigit2 <- store idr_Prelude.Chars.isDigit2_val_13
      idr_Prelude.Chars.isDigit2_val <- idris_int_eq $ idr_Prelude.Chars.isDigit0 idr_Prelude.Chars.isDigit2
      idr_Prelude.Chars.isDigit2_14 <- store idr_Prelude.Chars.isDigit2_val
      idr_Prelude.Chars.isDigit2_val_15 <- fetch idr_Prelude.Chars.isDigit2_14
      case idr_Prelude.Chars.isDigit2_val_15 of
        (CGrInt idr_Prelude.Chars.isDigit_cpat_LInt64_0) ->
          case idr_Prelude.Chars.isDigit_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Chars.isDigit1_16 <- store idr_Prelude.Chars.isDigit1_val
  idr_Prelude.Chars.isDigit1_val_17 <- fetch idr_Prelude.Chars.isDigit1_16
  case idr_Prelude.Chars.isDigit1_val_17 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Chars.isDigit2_val_19 <- pure (CGrInt 57)
      idr_Prelude.Chars.isDigit2_20 <- store idr_Prelude.Chars.isDigit2_val_19
      idr_Prelude.Chars.isDigit2_val_18 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" $ idr_Prelude.Chars.isDigit0 idr_Prelude.Chars.isDigit2_20
      idr_Prelude.Chars.isDigit2_21 <- store idr_Prelude.Chars.isDigit2_val_18
      idr_Prelude.Chars.isDigit2_val_22 <- fetch idr_Prelude.Chars.isDigit2_21
      case idr_Prelude.Chars.isDigit2_val_22 of
        (Cidr_Prelude.Interfaces.LT) ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          idr_Prelude.Chars.isDigit3_val_23 <- pure (CGrInt 57)
          idr_Prelude.Chars.isDigit3 <- store idr_Prelude.Chars.isDigit3_val_23
          idr_Prelude.Chars.isDigit3_val <- idris_int_eq $ idr_Prelude.Chars.isDigit0 idr_Prelude.Chars.isDigit3
          idr_Prelude.Chars.isDigit3_24 <- store idr_Prelude.Chars.isDigit3_val
          idr_Prelude.Chars.isDigit3_val_25 <- fetch idr_Prelude.Chars.isDigit3_24
          case idr_Prelude.Chars.isDigit3_val_25 of
            (CGrInt idr_Prelude.Chars.isDigit_cpat_LInt64_0_26) ->
              case idr_Prelude.Chars.isDigit_cpat_LInt64_0_26 of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.True)

idr_Prelude.Chars.isSpace idr_Prelude.Chars.isSpace0 =
  idr_Prelude.Chars.isSpace1_val_27 <- pure (CGrInt 32)
  idr_Prelude.Chars.isSpace1 <- store idr_Prelude.Chars.isSpace1_val_27
  idr_Prelude.Chars.isSpace1_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace1
  idr_Prelude.Chars.isSpace1_28 <- store idr_Prelude.Chars.isSpace1_val
  idr_Prelude.Chars.isSpace1_val_29 <- fetch idr_Prelude.Chars.isSpace1_28
  case idr_Prelude.Chars.isSpace1_val_29 of
    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0) ->
      case idr_Prelude.Chars.isSpace_cpat_LInt64_0 of
        0 ->
          idr_Prelude.Chars.isSpace2_val_30 <- pure (CGrInt 9)
          idr_Prelude.Chars.isSpace2 <- store idr_Prelude.Chars.isSpace2_val_30
          idr_Prelude.Chars.isSpace2_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace2
          idr_Prelude.Chars.isSpace2_31 <- store idr_Prelude.Chars.isSpace2_val
          idr_Prelude.Chars.isSpace2_val_32 <- fetch idr_Prelude.Chars.isSpace2_31
          case idr_Prelude.Chars.isSpace2_val_32 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_33) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_33 of
                0 ->
                  idr_Prelude.Chars.isSpace3_val_34 <- pure (CGrInt 13)
                  idr_Prelude.Chars.isSpace3 <- store idr_Prelude.Chars.isSpace3_val_34
                  idr_Prelude.Chars.isSpace3_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace3
                  idr_Prelude.Chars.isSpace3_35 <- store idr_Prelude.Chars.isSpace3_val
                  idr_Prelude.Chars.isSpace3_val_36 <- fetch idr_Prelude.Chars.isSpace3_35
                  case idr_Prelude.Chars.isSpace3_val_36 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_37) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_37 of
                        0 ->
                          idr_Prelude.Chars.isSpace4_val_38 <- pure (CGrInt 10)
                          idr_Prelude.Chars.isSpace4 <- store idr_Prelude.Chars.isSpace4_val_38
                          idr_Prelude.Chars.isSpace4_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace4
                          idr_Prelude.Chars.isSpace4_39 <- store idr_Prelude.Chars.isSpace4_val
                          idr_Prelude.Chars.isSpace4_val_40 <- fetch idr_Prelude.Chars.isSpace4_39
                          case idr_Prelude.Chars.isSpace4_val_40 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_41) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_41 of
                                0 ->
                                  idr_Prelude.Chars.isSpace5_val_42 <- pure (CGrInt 12)
                                  idr_Prelude.Chars.isSpace5 <- store idr_Prelude.Chars.isSpace5_val_42
                                  idr_Prelude.Chars.isSpace5_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace5
                                  idr_Prelude.Chars.isSpace5_43 <- store idr_Prelude.Chars.isSpace5_val
                                  idr_Prelude.Chars.isSpace5_val_44 <- fetch idr_Prelude.Chars.isSpace5_43
                                  case idr_Prelude.Chars.isSpace5_val_44 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_45) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_45 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6_val_46 <- pure (CGrInt 11)
                                          idr_Prelude.Chars.isSpace6 <- store idr_Prelude.Chars.isSpace6_val_46
                                          idr_Prelude.Chars.isSpace6_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace6
                                          idr_Prelude.Chars.isSpace6_47 <- store idr_Prelude.Chars.isSpace6_val
                                          idr_Prelude.Chars.isSpace6_val_48 <- fetch idr_Prelude.Chars.isSpace6_47
                                          case idr_Prelude.Chars.isSpace6_val_48 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_49) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_49 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace7_val_50 <- pure (CGrInt 160)
                                                  idr_Prelude.Chars.isSpace7 <- store idr_Prelude.Chars.isSpace7_val_50
                                                  idr_Prelude.Chars.isSpace7_val <- idris_int_eq $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace7
                                                  idr_Prelude.Chars.isSpace7_51 <- store idr_Prelude.Chars.isSpace7_val
                                                  idr_Prelude.Chars.isSpace7_val_52 <- fetch idr_Prelude.Chars.isSpace7_51
                                                  case idr_Prelude.Chars.isSpace7_val_52 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_53) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_53 of
                                                        0 ->
                                                          pure (Cidr_Prelude.Bool.False)
                                                        #default ->
                                                          pure (Cidr_Prelude.Bool.True)
                                                    #default ->
                                                      pure (Cidr_Prelude.Bool.True)
                                                #default ->
                                                  pure (Cidr_Prelude.Bool.True)
                                            #default ->
                                              pure (Cidr_Prelude.Bool.True)
                                        #default ->
                                          pure (Cidr_Prelude.Bool.True)
                                    #default ->
                                      pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.True)
                            #default ->
                              pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.True)

idr_Prelude.Strings.ltrim idr_Prelude.Strings.ltrim0 =
  idr_Prelude.Strings.ltrim1_val_56 <- pure (CGrString #"")
  idr_Prelude.Strings.ltrim1 <- store idr_Prelude.Strings.ltrim1_val_56
  idr_Prelude.Strings.ltrim1_val_55 <- idris_str_eq $ idr_Prelude.Strings.ltrim0 idr_Prelude.Strings.ltrim1
  idr_Prelude.Strings.ltrim1_57 <- store idr_Prelude.Strings.ltrim1_val_55
  idr_Prelude.Strings.ltrim1_val_58 <- fetch idr_Prelude.Strings.ltrim1_57
  idr_Prelude.Strings.ltrim1_val_54 <- case idr_Prelude.Strings.ltrim1_val_58 of
    (CGrInt idr_Prelude.Strings.ltrim_cpat_LInt64_0) ->
      case idr_Prelude.Strings.ltrim_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Strings.ltrim1_59 <- store idr_Prelude.Strings.ltrim1_val_54
  idr_Prelude.Strings.ltrim2_val <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.ltrim2 <- store idr_Prelude.Strings.ltrim2_val
  idr_Prelude.Strings.ltrim1_val <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.ltrim1_59 idr_Prelude.Strings.ltrim2
  idr_Prelude.Strings.ltrim1_60 <- store idr_Prelude.Strings.ltrim1_val
  idr_Prelude.Strings.ltrim1_val_61 <- fetch idr_Prelude.Strings.ltrim1_60
  case idr_Prelude.Strings.ltrim1_val_61 of
    (Cidr_Prelude.Basics.No) ->
      pure (CGrString #"")
    (Cidr_Prelude.Basics.Yes) ->
      idr_Prelude.Strings.ltrim2_val_63 <- idris_str_head $ idr_Prelude.Strings.ltrim0
      idr_Prelude.Strings.ltrim2_64 <- store idr_Prelude.Strings.ltrim2_val_63
      idr_Prelude.Strings.ltrim2_val_62 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.ltrim2_64
      idr_Prelude.Strings.ltrim2_65 <- store idr_Prelude.Strings.ltrim2_val_62
      idr_Prelude.Strings.ltrim2_val_66 <- fetch idr_Prelude.Strings.ltrim2_65
      case idr_Prelude.Strings.ltrim2_val_66 of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.Strings.ltrim3_val <- idris_str_head $ idr_Prelude.Strings.ltrim0
          idr_Prelude.Strings.ltrim3 <- store idr_Prelude.Strings.ltrim3_val
          idr_Prelude.Strings.ltrim4_val <- idris_str_tail $ idr_Prelude.Strings.ltrim0
          idr_Prelude.Strings.ltrim4 <- store idr_Prelude.Strings.ltrim4_val
          idris_str_cons $ idr_Prelude.Strings.ltrim3 idr_Prelude.Strings.ltrim4
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Strings.ltrim3_val_67 <- idris_str_tail $ idr_Prelude.Strings.ltrim0
          idr_Prelude.Strings.ltrim3_68 <- store idr_Prelude.Strings.ltrim3_val_67
          idr_Prelude.Strings.ltrim $ idr_Prelude.Strings.ltrim3_68

idr_Main.main idr_Main.main0 =
  idr_Main.main1_val_69 <- pure (CErased)
  idr_Main.main1 <- store idr_Main.main1_val_69
  idr_Main.main2_val <- pure (CErased)
  idr_Main.main2 <- store idr_Main.main2_val
  idr_Main.main3_val <- pure (C"idr_{U_Main.{main_3}_1}")
  idr_Main.main3 <- store idr_Main.main3_val
  idr_Main.main4_val <- idr_Main.tri $
  idr_Main.main4 <- store idr_Main.main4_val
  idr_Main.main1_val <- idr_Prelude.Interactive.printLn' $ idr_Main.main1 idr_Main.main2 idr_Main.main3 idr_Main.main4 idr_Main.main0
  idr_Main.main1_70 <- store idr_Main.main1_val
  idr_Main.main2_val_72 <- pure (CErased)
  idr_Main.main2_73 <- store idr_Main.main2_val_72
  idr_Main.main3_val_74 <- pure (CErased)
  idr_Main.main3_75 <- store idr_Main.main3_val_74
  idr_Main.main4_val_76 <- pure (C"idr_{U_Main.{main_5}_1}")
  idr_Main.main4_77 <- store idr_Main.main4_val_76
  idr_Main.main5_val <- idr_Main.tri2 $
  idr_Main.main5 <- store idr_Main.main5_val
  idr_Main.main2_val_71 <- idr_Prelude.Interactive.printLn' $ idr_Main.main2_73 idr_Main.main3_75 idr_Main.main4_77 idr_Main.main5 idr_Main.main0
  idr_Main.main2_78 <- store idr_Main.main2_val_71
  idr_Main.main3_val_80 <- pure (CErased)
  idr_Main.main3_81 <- store idr_Main.main3_val_80
  idr_Main.main4_val_82 <- pure (CErased)
  idr_Main.main4_83 <- store idr_Main.main4_val_82
  idr_Main.main5_val_84 <- pure (C"idr_{U_Main.{main_6}_1}")
  idr_Main.main5_85 <- store idr_Main.main5_val_84
  idr_Main.main6_val_86 <- pure (CGrString #"  string  ")
  idr_Main.main6 <- store idr_Main.main6_val_86
  idr_Main.main6_val <- idr_Prelude.Strings.trim $ idr_Main.main6
  idr_Main.main6_87 <- store idr_Main.main6_val
  idr_Main.main3_val_79 <- idr_Prelude.Interactive.printLn' $ idr_Main.main3_81 idr_Main.main4_83 idr_Main.main5_85 idr_Main.main6_87 idr_Main.main0
  idr_Main.main3_88 <- store idr_Main.main3_val_79
  idr_Main.main4_val_90 <- pure (CErased)
  idr_Main.main4_91 <- store idr_Main.main4_val_90
  idr_Main.main5_val_92 <- pure (CErased)
  idr_Main.main5_93 <- store idr_Main.main5_val_92
  idr_Main.main6_val_94 <- pure (C"idr_{U_Main.{main_6}_1}")
  idr_Main.main6_95 <- store idr_Main.main6_val_94
  idr_Main.main7_val <- pure (CGrString #"42")
  idr_Main.main7 <- store idr_Main.main7_val
  idr_Main.main4_val_89 <- idr_Prelude.Interactive.printLn' $ idr_Main.main4_91 idr_Main.main5_93 idr_Main.main6_95 idr_Main.main7 idr_Main.main0
  idr_Main.main4_96 <- store idr_Main.main4_val_89
  idr_Main.main5_val_98 <- pure (CErased)
  idr_Main.main5_99 <- store idr_Main.main5_val_98
  idr_Main.main6_val_100 <- pure (CErased)
  idr_Main.main6_101 <- store idr_Main.main6_val_100
  idr_Main.main7_val_102 <- pure (C"idr_{U_Main.{main_8}_1}")
  idr_Main.main7_103 <- store idr_Main.main7_val_102
  idr_Main.main8_val_104 <- pure (CErased)
  idr_Main.main8 <- store idr_Main.main8_val_104
  idr_Main.main9_val <- pure (C"idr_{U_Main.{main_9}_2}")
  idr_Main.main9 <- store idr_Main.main9_val
  idr_Main.main10_val <- pure (CGrInt 0)
  idr_Main.main10 <- store idr_Main.main10_val
  idr_Main.main11_val <- pure (CGrInt 10)
  idr_Main.main11 <- store idr_Main.main11_val
  idr_Main.main8_val <- idr_Main.adder $ idr_Main.main8 idr_Main.main9 idr_Main.main10 idr_Main.main11
  idr_Main.main8_105 <- store idr_Main.main8_val
  idr_Main.main5_val_97 <- idr_Prelude.Interactive.printLn' $ idr_Main.main5_99 idr_Main.main6_101 idr_Main.main7_103 idr_Main.main8_105 idr_Main.main0
  idr_Main.main5_106 <- store idr_Main.main5_val_97
  idr_Main.main6_val_108 <- pure (CErased)
  idr_Main.main6_109 <- store idr_Main.main6_val_108
  idr_Main.main7_val_110 <- pure (CErased)
  idr_Main.main7_111 <- store idr_Main.main7_val_110
  idr_Main.main8_val_112 <- pure (C"idr_{U_Main.{main_8}_1}")
  idr_Main.main8_113 <- store idr_Main.main8_val_112
  idr_Main.main9_val_116 <- pure (CErased)
  idr_Main.main9_117 <- store idr_Main.main9_val_116
  idr_Main.main10_val_118 <- pure (C"idr_{U_Main.{main_9}_2}")
  idr_Main.main10_119 <- store idr_Main.main10_val_118
  idr_Main.main11_val_120 <- pure (CGrInt 1)
  idr_Main.main11_121 <- store idr_Main.main11_val_120
  idr_Main.main12_val <- pure (CGrInt 10)
  idr_Main.main12 <- store idr_Main.main12_val
  idr_Main.main9_val_115 <- idr_Main.adder $ idr_Main.main9_117 idr_Main.main10_119 idr_Main.main11_121 idr_Main.main12
  idr_Main.main9_122 <- store idr_Main.main9_val_115
  idr_Main.main10_val_123 <- pure (CGrInt 15)
  idr_Main.main10_124 <- store idr_Main.main10_val_123
  idr_Main.main9_val_114 <- "idr_{APPLY_0}" $ idr_Main.main9_122 idr_Main.main10_124
  idr_Main.main9_125 <- store idr_Main.main9_val_114
  idr_Main.main6_val_107 <- idr_Prelude.Interactive.printLn' $ idr_Main.main6_109 idr_Main.main7_111 idr_Main.main8_113 idr_Main.main9_125 idr_Main.main0
  idr_Main.main6_126 <- store idr_Main.main6_val_107
  idr_Main.main7_val_128 <- pure (CErased)
  idr_Main.main7_129 <- store idr_Main.main7_val_128
  idr_Main.main8_val_130 <- pure (CErased)
  idr_Main.main8_131 <- store idr_Main.main8_val_130
  idr_Main.main9_val_132 <- pure (C"idr_{U_Main.{main_8}_1}")
  idr_Main.main9_133 <- store idr_Main.main9_val_132
  idr_Main.main10_val_137 <- pure (CErased)
  idr_Main.main10_138 <- store idr_Main.main10_val_137
  idr_Main.main11_val_139 <- pure (C"idr_{U_Main.{main_9}_2}")
  idr_Main.main11_140 <- store idr_Main.main11_val_139
  idr_Main.main12_val_141 <- pure (CGrInt 2)
  idr_Main.main12_142 <- store idr_Main.main12_val_141
  idr_Main.main13_val <- pure (CGrInt 1)
  idr_Main.main13 <- store idr_Main.main13_val
  idr_Main.main10_val_136 <- idr_Main.adder $ idr_Main.main10_138 idr_Main.main11_140 idr_Main.main12_142 idr_Main.main13
  idr_Main.main10_143 <- store idr_Main.main10_val_136
  idr_Main.main11_val_144 <- pure (CGrInt 4)
  idr_Main.main11_145 <- store idr_Main.main11_val_144
  idr_Main.main10_val_135 <- "idr_{APPLY_0}" $ idr_Main.main10_143 idr_Main.main11_145
  idr_Main.main10_146 <- store idr_Main.main10_val_135
  idr_Main.main11_val_147 <- pure (CGrInt 7)
  idr_Main.main11_148 <- store idr_Main.main11_val_147
  idr_Main.main10_val_134 <- "idr_{APPLY_0}" $ idr_Main.main10_146 idr_Main.main11_148
  idr_Main.main10_149 <- store idr_Main.main10_val_134
  idr_Main.main7_val_127 <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_129 idr_Main.main8_131 idr_Main.main9_133 idr_Main.main10_149 idr_Main.main0
  idr_Main.main7_150 <- store idr_Main.main7_val_127
  idr_Main.main8_val_158 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main8_159 <- store idr_Main.main8_val_158
  idr_Main.main9_val_160 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main9_161 <- store idr_Main.main9_val_160
  idr_Main.main8_val_157 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main8_159 idr_Main.main9_161
  idr_Main.main8_162 <- store idr_Main.main8_val_157
  idr_Main.main8_val_163 <- fetch idr_Main.main8_162
  idr_Main.main8_val_156 <- case idr_Main.main8_val_163 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      idr_Main.main9_val_165 <- pure (CGrString #"Hello!")
      idr_Main.main9_166 <- store idr_Main.main9_val_165
      idr_Main.main9_val_164 <- idris_str_head $ idr_Main.main9_166
      idr_Main.main9_167 <- store idr_Main.main9_val_164
      idr_Main.main10_val_169 <- pure (CErased)
      idr_Main.main10_170 <- store idr_Main.main10_val_169
      idr_Main.main11_val_176 <- pure (CGrString #"Hello!")
      idr_Main.main11_177 <- store idr_Main.main11_val_176
      idr_Main.main11_val_175 <- idris_str_tail $ idr_Main.main11_177
      idr_Main.main11_178 <- store idr_Main.main11_val_175
      idr_Main.main12_val_179 <- pure (CGrString #"")
      idr_Main.main12_180 <- store idr_Main.main12_val_179
      idr_Main.main11_val_174 <- idris_str_eq $ idr_Main.main11_178 idr_Main.main12_180
      idr_Main.main11_181 <- store idr_Main.main11_val_174
      idr_Main.main11_val_182 <- fetch idr_Main.main11_181
      idr_Main.main11_val_173 <- case idr_Main.main11_val_182 of
        (CGrInt idr_Main.main_cpat_LInt64_0) ->
          case idr_Main.main_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr_Main.main11_183 <- store idr_Main.main11_val_173
      idr_Main.main12_val_184 <- pure (Cidr_Prelude.Bool.True)
      idr_Main.main12_185 <- store idr_Main.main12_val_184
      idr_Main.main11_val_172 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main11_183 idr_Main.main12_185
      idr_Main.main11_186 <- store idr_Main.main11_val_172
      idr_Main.main11_val_187 <- fetch idr_Main.main11_186
      idr_Main.main11_val_171 <- case idr_Main.main11_val_187 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          idr_Main.main12_val_190 <- pure (CGrString #"Hello!")
          idr_Main.main12_191 <- store idr_Main.main12_val_190
          idr_Main.main12_val_189 <- idris_str_tail $ idr_Main.main12_191
          idr_Main.main12_192 <- store idr_Main.main12_val_189
          idr_Main.main12_val_188 <- idris_str_head $ idr_Main.main12_192
          idr_Main.main12_193 <- store idr_Main.main12_val_188
          idr_Main.main13_val_196 <- pure (CGrString #"Hello!")
          idr_Main.main13_197 <- store idr_Main.main13_val_196
          idr_Main.main13_val_195 <- idris_str_tail $ idr_Main.main13_197
          idr_Main.main13_198 <- store idr_Main.main13_val_195
          idr_Main.main13_val_194 <- idris_str_tail $ idr_Main.main13_198
          idr_Main.main13_199 <- store idr_Main.main13_val_194
          pure (Cidr_Prelude.Strings.StrCons idr_Main.main12_193 idr_Main.main13_199)
      idr_Main.main11_200 <- store idr_Main.main11_val_171
      idr_Main.main10_val_168 <- idr__Prelude.Strings.unpack_with_36 $ idr_Main.main10_170 idr_Main.main11_200
      idr_Main.main10_201 <- store idr_Main.main10_val_168
      pure (Cidr_Prelude.List.:: idr_Main.main9_167 idr_Main.main10_201)
  idr_Main.main8_202 <- store idr_Main.main8_val_156
  idr_Main.main8_val_155 <- idr_Main.toFormat $ idr_Main.main8_202
  idr_Main.main8_203 <- store idr_Main.main8_val_155
  idr_Main.main9_val_204 <- pure (CGrString #"")
  idr_Main.main9_205 <- store idr_Main.main9_val_204
  idr_Main.main8_val_154 <- idr_Main.printFmt $ idr_Main.main8_203 idr_Main.main9_205
  idr_Main.main8_206 <- store idr_Main.main8_val_154
  idr_Main.main9_val_207 <- pure (CGrString #"\n")
  idr_Main.main9_208 <- store idr_Main.main9_val_207
  idr_Main.main8_val_153 <- idris_str_concat $ idr_Main.main8_206 idr_Main.main9_208
  idr_Main.main8_209 <- store idr_Main.main8_val_153
  idr_Main.main8_val_152 <- idris_write_str $ idr_Main.main0 idr_Main.main8_209
  idr_Main.main8_210 <- store idr_Main.main8_val_152
  idr_Main.main8_val_151 <- pure (Cidr_MkUnit)
  idr_Main.main8_211 <- store idr_Main.main8_val_151
  idr_Main.main9_val_220 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main9_221 <- store idr_Main.main9_val_220
  idr_Main.main10_val_222 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main10_223 <- store idr_Main.main10_val_222
  idr_Main.main9_val_219 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main9_221 idr_Main.main10_223
  idr_Main.main9_224 <- store idr_Main.main9_val_219
  idr_Main.main9_val_225 <- fetch idr_Main.main9_224
  idr_Main.main9_val_218 <- case idr_Main.main9_val_225 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      idr_Main.main10_val_227 <- pure (CGrString #"Answer : %d")
      idr_Main.main10_228 <- store idr_Main.main10_val_227
      idr_Main.main10_val_226 <- idris_str_head $ idr_Main.main10_228
      idr_Main.main10_229 <- store idr_Main.main10_val_226
      idr_Main.main11_val_231 <- pure (CErased)
      idr_Main.main11_232 <- store idr_Main.main11_val_231
      idr_Main.main12_val_238 <- pure (CGrString #"Answer : %d")
      idr_Main.main12_239 <- store idr_Main.main12_val_238
      idr_Main.main12_val_237 <- idris_str_tail $ idr_Main.main12_239
      idr_Main.main12_240 <- store idr_Main.main12_val_237
      idr_Main.main13_val_241 <- pure (CGrString #"")
      idr_Main.main13_242 <- store idr_Main.main13_val_241
      idr_Main.main12_val_236 <- idris_str_eq $ idr_Main.main12_240 idr_Main.main13_242
      idr_Main.main12_243 <- store idr_Main.main12_val_236
      idr_Main.main12_val_244 <- fetch idr_Main.main12_243
      idr_Main.main12_val_235 <- case idr_Main.main12_val_244 of
        (CGrInt idr_Main.main_cpat_LInt64_0_245) ->
          case idr_Main.main_cpat_LInt64_0_245 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr_Main.main12_246 <- store idr_Main.main12_val_235
      idr_Main.main13_val_247 <- pure (Cidr_Prelude.Bool.True)
      idr_Main.main13_248 <- store idr_Main.main13_val_247
      idr_Main.main12_val_234 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main12_246 idr_Main.main13_248
      idr_Main.main12_249 <- store idr_Main.main12_val_234
      idr_Main.main12_val_250 <- fetch idr_Main.main12_249
      idr_Main.main12_val_233 <- case idr_Main.main12_val_250 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          idr_Main.main13_val_253 <- pure (CGrString #"Answer : %d")
          idr_Main.main13_254 <- store idr_Main.main13_val_253
          idr_Main.main13_val_252 <- idris_str_tail $ idr_Main.main13_254
          idr_Main.main13_255 <- store idr_Main.main13_val_252
          idr_Main.main13_val_251 <- idris_str_head $ idr_Main.main13_255
          idr_Main.main13_256 <- store idr_Main.main13_val_251
          idr_Main.main14_val_258 <- pure (CGrString #"Answer : %d")
          idr_Main.main14 <- store idr_Main.main14_val_258
          idr_Main.main14_val_257 <- idris_str_tail $ idr_Main.main14
          idr_Main.main14_259 <- store idr_Main.main14_val_257
          idr_Main.main14_val <- idris_str_tail $ idr_Main.main14_259
          idr_Main.main14_260 <- store idr_Main.main14_val
          pure (Cidr_Prelude.Strings.StrCons idr_Main.main13_256 idr_Main.main14_260)
      idr_Main.main12_261 <- store idr_Main.main12_val_233
      idr_Main.main11_val_230 <- idr__Prelude.Strings.unpack_with_36 $ idr_Main.main11_232 idr_Main.main12_261
      idr_Main.main11_262 <- store idr_Main.main11_val_230
      pure (Cidr_Prelude.List.:: idr_Main.main10_229 idr_Main.main11_262)
  idr_Main.main9_263 <- store idr_Main.main9_val_218
  idr_Main.main9_val_217 <- idr_Main.toFormat $ idr_Main.main9_263
  idr_Main.main9_264 <- store idr_Main.main9_val_217
  idr_Main.main10_val_265 <- pure (CGrString #"")
  idr_Main.main10_266 <- store idr_Main.main10_val_265
  idr_Main.main9_val_216 <- idr_Main.printFmt $ idr_Main.main9_264 idr_Main.main10_266
  idr_Main.main9_267 <- store idr_Main.main9_val_216
  idr_Main.main10_val_268 <- pure (CGrInt 42)
  idr_Main.main10_269 <- store idr_Main.main10_val_268
  idr_Main.main9_val_215 <- "idr_{APPLY_0}" $ idr_Main.main9_267 idr_Main.main10_269
  idr_Main.main9_270 <- store idr_Main.main9_val_215
  idr_Main.main10_val_271 <- pure (CGrString #"\n")
  idr_Main.main10_272 <- store idr_Main.main10_val_271
  idr_Main.main9_val_214 <- idris_str_concat $ idr_Main.main9_270 idr_Main.main10_272
  idr_Main.main9_273 <- store idr_Main.main9_val_214
  idr_Main.main9_val_213 <- idris_write_str $ idr_Main.main0 idr_Main.main9_273
  idr_Main.main9_274 <- store idr_Main.main9_val_213
  idr_Main.main9_val_212 <- pure (Cidr_MkUnit)
  idr_Main.main9_275 <- store idr_Main.main9_val_212
  idr_Main.main10_val_284 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main10_285 <- store idr_Main.main10_val_284
  idr_Main.main11_val_286 <- pure (Cidr_Prelude.Bool.True)
  idr_Main.main11_287 <- store idr_Main.main11_val_286
  idr_Main.main10_val_283 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main10_285 idr_Main.main11_287
  idr_Main.main10_288 <- store idr_Main.main10_val_283
  idr_Main.main10_val_289 <- fetch idr_Main.main10_288
  idr_Main.main10_val_282 <- case idr_Main.main10_val_289 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      idr_Main.main11_val_291 <- pure (CGrString #"%s numner %d")
      idr_Main.main11_292 <- store idr_Main.main11_val_291
      idr_Main.main11_val_290 <- idris_str_head $ idr_Main.main11_292
      idr_Main.main11_293 <- store idr_Main.main11_val_290
      idr_Main.main12_val_295 <- pure (CErased)
      idr_Main.main12_296 <- store idr_Main.main12_val_295
      idr_Main.main13_val_302 <- pure (CGrString #"%s numner %d")
      idr_Main.main13_303 <- store idr_Main.main13_val_302
      idr_Main.main13_val_301 <- idris_str_tail $ idr_Main.main13_303
      idr_Main.main13_304 <- store idr_Main.main13_val_301
      idr_Main.main14_val_305 <- pure (CGrString #"")
      idr_Main.main14_306 <- store idr_Main.main14_val_305
      idr_Main.main13_val_300 <- idris_str_eq $ idr_Main.main13_304 idr_Main.main14_306
      idr_Main.main13_307 <- store idr_Main.main13_val_300
      idr_Main.main13_val_308 <- fetch idr_Main.main13_307
      idr_Main.main13_val_299 <- case idr_Main.main13_val_308 of
        (CGrInt idr_Main.main_cpat_LInt64_0_309) ->
          case idr_Main.main_cpat_LInt64_0_309 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr_Main.main13_310 <- store idr_Main.main13_val_299
      idr_Main.main14_val_311 <- pure (Cidr_Prelude.Bool.True)
      idr_Main.main14_312 <- store idr_Main.main14_val_311
      idr_Main.main13_val_298 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Main.main13_310 idr_Main.main14_312
      idr_Main.main13_313 <- store idr_Main.main13_val_298
      idr_Main.main13_val_314 <- fetch idr_Main.main13_313
      idr_Main.main13_val_297 <- case idr_Main.main13_val_314 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          idr_Main.main14_val_317 <- pure (CGrString #"%s numner %d")
          idr_Main.main14_318 <- store idr_Main.main14_val_317
          idr_Main.main14_val_316 <- idris_str_tail $ idr_Main.main14_318
          idr_Main.main14_319 <- store idr_Main.main14_val_316
          idr_Main.main14_val_315 <- idris_str_head $ idr_Main.main14_319
          idr_Main.main14_320 <- store idr_Main.main14_val_315
          idr_Main.main15_val_322 <- pure (CGrString #"%s numner %d")
          idr_Main.main15 <- store idr_Main.main15_val_322
          idr_Main.main15_val_321 <- idris_str_tail $ idr_Main.main15
          idr_Main.main15_323 <- store idr_Main.main15_val_321
          idr_Main.main15_val <- idris_str_tail $ idr_Main.main15_323
          idr_Main.main15_324 <- store idr_Main.main15_val
          pure (Cidr_Prelude.Strings.StrCons idr_Main.main14_320 idr_Main.main15_324)
      idr_Main.main13_325 <- store idr_Main.main13_val_297
      idr_Main.main12_val_294 <- idr__Prelude.Strings.unpack_with_36 $ idr_Main.main12_296 idr_Main.main13_325
      idr_Main.main12_326 <- store idr_Main.main12_val_294
      pure (Cidr_Prelude.List.:: idr_Main.main11_293 idr_Main.main12_326)
  idr_Main.main10_327 <- store idr_Main.main10_val_282
  idr_Main.main10_val_281 <- idr_Main.toFormat $ idr_Main.main10_327
  idr_Main.main10_328 <- store idr_Main.main10_val_281
  idr_Main.main11_val_329 <- pure (CGrString #"")
  idr_Main.main11_330 <- store idr_Main.main11_val_329
  idr_Main.main10_val_280 <- idr_Main.printFmt $ idr_Main.main10_328 idr_Main.main11_330
  idr_Main.main10_331 <- store idr_Main.main10_val_280
  idr_Main.main11_val_332 <- pure (CGrString #"Page")
  idr_Main.main11_333 <- store idr_Main.main11_val_332
  idr_Main.main10_val_279 <- "idr_{APPLY_0}" $ idr_Main.main10_331 idr_Main.main11_333
  idr_Main.main10_334 <- store idr_Main.main10_val_279
  idr_Main.main11_val_335 <- pure (CGrInt 97)
  idr_Main.main11_336 <- store idr_Main.main11_val_335
  idr_Main.main10_val_278 <- "idr_{APPLY_0}" $ idr_Main.main10_334 idr_Main.main11_336
  idr_Main.main10_337 <- store idr_Main.main10_val_278
  idr_Main.main11_val_338 <- pure (CGrString #"\n")
  idr_Main.main11_339 <- store idr_Main.main11_val_338
  idr_Main.main10_val_277 <- idris_str_concat $ idr_Main.main10_337 idr_Main.main11_339
  idr_Main.main10_340 <- store idr_Main.main10_val_277
  idr_Main.main10_val_276 <- idris_write_str $ idr_Main.main0 idr_Main.main10_340
  idr_Main.main10_341 <- store idr_Main.main10_val_276
  pure (Cidr_MkUnit)

idr_mkForeignPrim =
  pure (CErased)

idr_Prelude.Bool.not idr_Prelude.Bool.not0 =
  idr_Prelude.Bool.not0_val <- fetch idr_Prelude.Bool.not0
  case idr_Prelude.Bool.not0_val of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.True)
    (Cidr_Prelude.Bool.True) ->
      pure (Cidr_Prelude.Bool.False)

idr_Prelude.Show.precCon idr_Prelude.Show.precCon0 =
  idr_Prelude.Show.precCon0_val <- fetch idr_Prelude.Show.precCon0
  case idr_Prelude.Show.precCon0_val of
    (Cidr_Prelude.Show.App) ->
      pure (CGrInt 6)
    (Cidr_Prelude.Show.Backtick) ->
      pure (CGrInt 3)
    (Cidr_Prelude.Show.Dollar) ->
      pure (CGrInt 2)
    (Cidr_Prelude.Show.Eq) ->
      pure (CGrInt 1)
    (Cidr_Prelude.Show.Open) ->
      pure (CGrInt 0)
    (Cidr_Prelude.Show.PrefixMinus) ->
      pure (CGrInt 5)
    (Cidr_Prelude.Show.User) ->
      pure (CGrInt 4)

idr_Prelude.Show.primNumShow idr_Prelude.Show.primNumShow0 idr_Prelude.Show.primNumShow1 idr_Prelude.Show.primNumShow2 idr_Prelude.Show.primNumShow3 =
  idr_Prelude.Show.primNumShow4_val <- "idr_{APPLY_0}" $ idr_Prelude.Show.primNumShow1 idr_Prelude.Show.primNumShow3
  idr_Prelude.Show.primNumShow4 <- store idr_Prelude.Show.primNumShow4_val
  idr_Prelude.Show.primNumShow2_val <- fetch idr_Prelude.Show.primNumShow2
  idr_Prelude.Show.primNumShow5_val_344 <- case idr_Prelude.Show.primNumShow2_val of
    (Cidr_Prelude.Show.App) ->
      pure (CGrInt 6)
    (Cidr_Prelude.Show.Backtick) ->
      pure (CGrInt 3)
    (Cidr_Prelude.Show.Dollar) ->
      pure (CGrInt 2)
    (Cidr_Prelude.Show.Eq) ->
      pure (CGrInt 1)
    (Cidr_Prelude.Show.Open) ->
      pure (CGrInt 0)
    (Cidr_Prelude.Show.PrefixMinus) ->
      pure (CGrInt 5)
    (Cidr_Prelude.Show.User) ->
      pure (CGrInt 4)
  idr_Prelude.Show.primNumShow5 <- store idr_Prelude.Show.primNumShow5_val_344
  idr_Prelude.Show.primNumShow6_val <- pure (CGrInt 5)
  idr_Prelude.Show.primNumShow6 <- store idr_Prelude.Show.primNumShow6_val
  idr_Prelude.Show.primNumShow5_val_343 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" $ idr_Prelude.Show.primNumShow5 idr_Prelude.Show.primNumShow6
  idr_Prelude.Show.primNumShow5_345 <- store idr_Prelude.Show.primNumShow5_val_343
  idr_Prelude.Show.primNumShow5_val_346 <- fetch idr_Prelude.Show.primNumShow5_345
  idr_Prelude.Show.primNumShow5_val_342 <- case idr_Prelude.Show.primNumShow5_val_346 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      idr_Prelude.Show.primNumShow2_val_349 <- fetch idr_Prelude.Show.primNumShow2
      idr_Prelude.Show.primNumShow6_val_348 <- case idr_Prelude.Show.primNumShow2_val_349 of
        (Cidr_Prelude.Show.App) ->
          pure (CGrInt 6)
        (Cidr_Prelude.Show.Backtick) ->
          pure (CGrInt 3)
        (Cidr_Prelude.Show.Dollar) ->
          pure (CGrInt 2)
        (Cidr_Prelude.Show.Eq) ->
          pure (CGrInt 1)
        (Cidr_Prelude.Show.Open) ->
          pure (CGrInt 0)
        (Cidr_Prelude.Show.PrefixMinus) ->
          pure (CGrInt 5)
        (Cidr_Prelude.Show.User) ->
          pure (CGrInt 4)
      idr_Prelude.Show.primNumShow6_350 <- store idr_Prelude.Show.primNumShow6_val_348
      idr_Prelude.Show.primNumShow7_val <- pure (CGrInt 5)
      idr_Prelude.Show.primNumShow7 <- store idr_Prelude.Show.primNumShow7_val
      idr_Prelude.Show.primNumShow6_val_347 <- idris_int_eq $ idr_Prelude.Show.primNumShow6_350 idr_Prelude.Show.primNumShow7
      idr_Prelude.Show.primNumShow6_351 <- store idr_Prelude.Show.primNumShow6_val_347
      idr_Prelude.Show.primNumShow6_val_352 <- fetch idr_Prelude.Show.primNumShow6_351
      case idr_Prelude.Show.primNumShow6_val_352 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_353 <- store idr_Prelude.Show.primNumShow5_val_342
  idr_Prelude.Show.primNumShow5_val_354 <- fetch idr_Prelude.Show.primNumShow5_353
  idr_Prelude.Show.primNumShow5_val <- case idr_Prelude.Show.primNumShow5_val_354 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_358 <- pure (CGrString #"")
      idr_Prelude.Show.primNumShow6_359 <- store idr_Prelude.Show.primNumShow6_val_358
      idr_Prelude.Show.primNumShow6_val_357 <- idris_str_eq $ idr_Prelude.Show.primNumShow4 idr_Prelude.Show.primNumShow6_359
      idr_Prelude.Show.primNumShow6_360 <- store idr_Prelude.Show.primNumShow6_val_357
      idr_Prelude.Show.primNumShow6_val_361 <- fetch idr_Prelude.Show.primNumShow6_360
      idr_Prelude.Show.primNumShow6_val_356 <- case idr_Prelude.Show.primNumShow6_val_361 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_362) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_362 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Show.primNumShow6_363 <- store idr_Prelude.Show.primNumShow6_val_356
      idr_Prelude.Show.primNumShow7_val_364 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Show.primNumShow7_365 <- store idr_Prelude.Show.primNumShow7_val_364
      idr_Prelude.Show.primNumShow6_val_355 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Show.primNumShow6_363 idr_Prelude.Show.primNumShow7_365
      idr_Prelude.Show.primNumShow6_366 <- store idr_Prelude.Show.primNumShow6_val_355
      idr_Prelude.Show.primNumShow6_val_367 <- fetch idr_Prelude.Show.primNumShow6_366
      case idr_Prelude.Show.primNumShow6_val_367 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Basics.Yes) ->
          idr_Prelude.Show.primNumShow7_val_369 <- idris_str_head $ idr_Prelude.Show.primNumShow4
          idr_Prelude.Show.primNumShow7_370 <- store idr_Prelude.Show.primNumShow7_val_369
          idr_Prelude.Show.primNumShow8_val <- pure (CGrInt 45)
          idr_Prelude.Show.primNumShow8 <- store idr_Prelude.Show.primNumShow8_val
          idr_Prelude.Show.primNumShow7_val_368 <- idris_int_eq $ idr_Prelude.Show.primNumShow7_370 idr_Prelude.Show.primNumShow8
          idr_Prelude.Show.primNumShow7_371 <- store idr_Prelude.Show.primNumShow7_val_368
          idr_Prelude.Show.primNumShow7_val_372 <- fetch idr_Prelude.Show.primNumShow7_371
          case idr_Prelude.Show.primNumShow7_val_372 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_373) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_373 of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_374 <- store idr_Prelude.Show.primNumShow5_val
  idr_Prelude.Show.primNumShow5_val_375 <- fetch idr_Prelude.Show.primNumShow5_374
  case idr_Prelude.Show.primNumShow5_val_375 of
    (Cidr_Prelude.Bool.False) ->
      fetch idr_Prelude.Show.primNumShow4
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_376 <- pure (CGrString #"(")
      idr_Prelude.Show.primNumShow6_377 <- store idr_Prelude.Show.primNumShow6_val_376
      idr_Prelude.Show.primNumShow7_val_379 <- pure (CGrString #")")
      idr_Prelude.Show.primNumShow7_380 <- store idr_Prelude.Show.primNumShow7_val_379
      idr_Prelude.Show.primNumShow7_val_378 <- idris_str_concat $ idr_Prelude.Show.primNumShow4 idr_Prelude.Show.primNumShow7_380
      idr_Prelude.Show.primNumShow7_381 <- store idr_Prelude.Show.primNumShow7_val_378
      idris_str_concat $ idr_Prelude.Show.primNumShow6_377 idr_Prelude.Show.primNumShow7_381

idr_prim__addInt idr_prim__addInt0 idr_prim__addInt1 =
  idris_int_add $ idr_prim__addInt0 idr_prim__addInt1

idr_prim__asPtr idr_prim__asPtr0 =
  prim__asPtr $ idr_prim__asPtr0

idr_prim__charToInt idr_prim__charToInt0 =
  idris_ch_int $ idr_prim__charToInt0

idr_prim__concat idr_prim__concat0 idr_prim__concat1 =
  idris_str_concat $ idr_prim__concat0 idr_prim__concat1

idr_prim__eqBigInt idr_prim__eqBigInt0 idr_prim__eqBigInt1 =
  idris_int_eq $ idr_prim__eqBigInt0 idr_prim__eqBigInt1

idr_prim__eqChar idr_prim__eqChar0 idr_prim__eqChar1 =
  idris_int_eq $ idr_prim__eqChar0 idr_prim__eqChar1

idr_prim__eqManagedPtr idr_prim__eqManagedPtr0 idr_prim__eqManagedPtr1 =
  prim__eqManagedPtr $ idr_prim__eqManagedPtr0 idr_prim__eqManagedPtr1

idr_prim__eqPtr idr_prim__eqPtr0 idr_prim__eqPtr1 =
  prim__eqPtr $ idr_prim__eqPtr0 idr_prim__eqPtr1

idr_prim__eqString idr_prim__eqString0 idr_prim__eqString1 =
  idris_str_eq $ idr_prim__eqString0 idr_prim__eqString1

idr_prim__floatToStr idr_prim__floatToStr0 =
  idris_float_str $ idr_prim__floatToStr0

idr_prim__managedNull =
  prim__managedNull $

idr_prim__null =
  prim__null $

idr_prim__peek16 idr_prim__peek160 idr_prim__peek161 idr_prim__peek162 =
  prim__peek16 $ idr_prim__peek160 idr_prim__peek161 idr_prim__peek162

idr_prim__peek32 idr_prim__peek320 idr_prim__peek321 idr_prim__peek322 =
  prim__peek32 $ idr_prim__peek320 idr_prim__peek321 idr_prim__peek322

idr_prim__peek64 idr_prim__peek640 idr_prim__peek641 idr_prim__peek642 =
  prim__peek64 $ idr_prim__peek640 idr_prim__peek641 idr_prim__peek642

idr_prim__peek8 idr_prim__peek80 idr_prim__peek81 idr_prim__peek82 =
  prim__peek8 $ idr_prim__peek80 idr_prim__peek81 idr_prim__peek82

idr_prim__peekDouble idr_prim__peekDouble0 idr_prim__peekDouble1 idr_prim__peekDouble2 =
  prim__peekDouble $ idr_prim__peekDouble0 idr_prim__peekDouble1 idr_prim__peekDouble2

idr_prim__peekPtr idr_prim__peekPtr0 idr_prim__peekPtr1 idr_prim__peekPtr2 =
  prim__peekPtr $ idr_prim__peekPtr0 idr_prim__peekPtr1 idr_prim__peekPtr2

idr_prim__peekSingle idr_prim__peekSingle0 idr_prim__peekSingle1 idr_prim__peekSingle2 =
  prim__peekSingle $ idr_prim__peekSingle0 idr_prim__peekSingle1 idr_prim__peekSingle2

idr_prim__poke16 idr_prim__poke160 idr_prim__poke161 idr_prim__poke162 idr_prim__poke163 =
  prim__poke16 $ idr_prim__poke160 idr_prim__poke161 idr_prim__poke162 idr_prim__poke163

idr_prim__poke32 idr_prim__poke320 idr_prim__poke321 idr_prim__poke322 idr_prim__poke323 =
  prim__poke32 $ idr_prim__poke320 idr_prim__poke321 idr_prim__poke322 idr_prim__poke323

idr_prim__poke64 idr_prim__poke640 idr_prim__poke641 idr_prim__poke642 idr_prim__poke643 =
  prim__poke64 $ idr_prim__poke640 idr_prim__poke641 idr_prim__poke642 idr_prim__poke643

idr_prim__poke8 idr_prim__poke80 idr_prim__poke81 idr_prim__poke82 idr_prim__poke83 =
  prim__poke8 $ idr_prim__poke80 idr_prim__poke81 idr_prim__poke82 idr_prim__poke83

idr_prim__pokeDouble idr_prim__pokeDouble0 idr_prim__pokeDouble1 idr_prim__pokeDouble2 idr_prim__pokeDouble3 =
  prim__pokeDouble $ idr_prim__pokeDouble0 idr_prim__pokeDouble1 idr_prim__pokeDouble2 idr_prim__pokeDouble3

idr_prim__pokePtr idr_prim__pokePtr0 idr_prim__pokePtr1 idr_prim__pokePtr2 idr_prim__pokePtr3 =
  prim__pokePtr $ idr_prim__pokePtr0 idr_prim__pokePtr1 idr_prim__pokePtr2 idr_prim__pokePtr3

idr_prim__pokeSingle idr_prim__pokeSingle0 idr_prim__pokeSingle1 idr_prim__pokeSingle2 idr_prim__pokeSingle3 =
  prim__pokeSingle $ idr_prim__pokeSingle0 idr_prim__pokeSingle1 idr_prim__pokeSingle2 idr_prim__pokeSingle3

idr_prim__ptrOffset idr_prim__ptrOffset0 idr_prim__ptrOffset1 =
  prim__ptrOffset $ idr_prim__ptrOffset0 idr_prim__ptrOffset1

idr_prim__readChars idr_prim__readChars0 idr_prim__readChars1 idr_prim__readChars2 =
  prim__readChars $ idr_prim__readChars0 idr_prim__readChars1 idr_prim__readChars2

idr_prim__readFile idr_prim__readFile0 idr_prim__readFile1 =
  prim__readFile $ idr_prim__readFile0 idr_prim__readFile1

idr_prim__registerPtr idr_prim__registerPtr0 idr_prim__registerPtr1 =
  prim__registerPtr $ idr_prim__registerPtr0 idr_prim__registerPtr1

idr_prim__sextInt_BigInt idr_prim__sextInt_BigInt0 =
  idris_ls_ext $ idr_prim__sextInt_BigInt0

idr_prim__sizeofPtr =
  prim__sizeofPtr $

idr_prim__sltBigInt idr_prim__sltBigInt0 idr_prim__sltBigInt1 =
  idris_int_lt $ idr_prim__sltBigInt0 idr_prim__sltBigInt1

idr_prim__sltChar idr_prim__sltChar0 idr_prim__sltChar1 =
  idris_int_lt $ idr_prim__sltChar0 idr_prim__sltChar1

idr_prim__stderr =
  prim__stderr $

idr_prim__stdin =
  prim__stdin $

idr_prim__stdout =
  prim__stdout $

idr_prim__strCons idr_prim__strCons0 idr_prim__strCons1 =
  idris_str_cons $ idr_prim__strCons0 idr_prim__strCons1

idr_prim__strHead idr_prim__strHead0 =
  idris_str_head $ idr_prim__strHead0

idr_prim__strRev idr_prim__strRev0 =
  idris_str_rev $ idr_prim__strRev0

idr_prim__strTail idr_prim__strTail0 =
  idris_str_tail $ idr_prim__strTail0

idr_prim__toStrInt idr_prim__toStrInt0 =
  idris_int_str $ idr_prim__toStrInt0

idr_prim__vm idr_prim__vm0 =
  prim__vm $ idr_prim__vm0

idr_prim__writeFile idr_prim__writeFile0 idr_prim__writeFile1 idr_prim__writeFile2 =
  prim__writeFile $ idr_prim__writeFile0 idr_prim__writeFile1 idr_prim__writeFile2

idr_prim__writeString idr_prim__writeString0 idr_prim__writeString1 =
  idris_write_str $ idr_prim__writeString0 idr_prim__writeString1

idr_prim_io_bind idr_prim_io_bind0 idr_prim_io_bind1 idr_prim_io_bind2 idr_prim_io_bind3 =
  "idr_{APPLY_0}" $ idr_prim_io_bind3 idr_prim_io_bind2

idr_Main.printFmt idr_Main.printFmt0 idr_Main.printFmt1 =
  idr_Main.printFmt0_val <- fetch idr_Main.printFmt0
  case idr_Main.printFmt0_val of
    (Cidr_Main.End) ->
      fetch idr_Main.printFmt1
    (Cidr_Main.Lit idr_Main.printFmt2 idr_Main.printFmt3) ->
      idr_Main.printFmt4_val <- idris_str_concat $ idr_Main.printFmt1 idr_Main.printFmt2
      idr_Main.printFmt4 <- store idr_Main.printFmt4_val
      idr_Main.printFmt $ idr_Main.printFmt3 idr_Main.printFmt4
    (Cidr_Main.Number idr_Main.printFmt2_382) ->
      pure (C"idr_{U_Main.{printFmt_14}_1}" idr_Main.printFmt2_382 idr_Main.printFmt1)
    (Cidr_Main.Str idr_Main.printFmt2_383) ->
      pure (C"idr_{U_Main.{printFmt_15}_1}" idr_Main.printFmt2_383 idr_Main.printFmt1)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'0 idr_Prelude.Interactive.printLn'1 idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 idr_Prelude.Interactive.printLn'4 =
  idr_Prelude.Interactive.printLn'5_val_385 <- "idr_{APPLY_0}" $ idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3
  idr_Prelude.Interactive.printLn'5 <- store idr_Prelude.Interactive.printLn'5_val_385
  idr_Prelude.Interactive.printLn'6_val <- pure (CGrString #"\n")
  idr_Prelude.Interactive.printLn'6 <- store idr_Prelude.Interactive.printLn'6_val
  idr_Prelude.Interactive.printLn'5_val_384 <- idris_str_concat $ idr_Prelude.Interactive.printLn'5 idr_Prelude.Interactive.printLn'6
  idr_Prelude.Interactive.printLn'5_386 <- store idr_Prelude.Interactive.printLn'5_val_384
  idr_Prelude.Interactive.printLn'5_val <- idris_write_str $ idr_Prelude.Interactive.printLn'4 idr_Prelude.Interactive.printLn'5_386
  idr_Prelude.Interactive.printLn'5_387 <- store idr_Prelude.Interactive.printLn'5_val
  pure (Cidr_MkUnit)

idr_Prelude.Show.protectEsc idr_Prelude.Show.protectEsc0 idr_Prelude.Show.protectEsc1 idr_Prelude.Show.protectEsc2 =
  idr_Prelude.Show.protectEsc3_val_393 <- pure (CGrString #"")
  idr_Prelude.Show.protectEsc3 <- store idr_Prelude.Show.protectEsc3_val_393
  idr_Prelude.Show.protectEsc3_val_392 <- idris_str_eq $ idr_Prelude.Show.protectEsc2 idr_Prelude.Show.protectEsc3
  idr_Prelude.Show.protectEsc3_394 <- store idr_Prelude.Show.protectEsc3_val_392
  idr_Prelude.Show.protectEsc3_val_395 <- fetch idr_Prelude.Show.protectEsc3_394
  idr_Prelude.Show.protectEsc3_val_391 <- case idr_Prelude.Show.protectEsc3_val_395 of
    (CGrInt idr_Prelude.Show.protectEsc_cpat_LInt64_0) ->
      case idr_Prelude.Show.protectEsc_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Show.protectEsc3_396 <- store idr_Prelude.Show.protectEsc3_val_391
  idr_Prelude.Show.protectEsc4_val <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.protectEsc4 <- store idr_Prelude.Show.protectEsc4_val
  idr_Prelude.Show.protectEsc3_val_390 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Show.protectEsc3_396 idr_Prelude.Show.protectEsc4
  idr_Prelude.Show.protectEsc3_397 <- store idr_Prelude.Show.protectEsc3_val_390
  idr_Prelude.Show.protectEsc3_val_398 <- fetch idr_Prelude.Show.protectEsc3_397
  idr_Prelude.Show.protectEsc3_val_389 <- case idr_Prelude.Show.protectEsc3_val_398 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Basics.Yes) ->
      idr_Prelude.Show.protectEsc4_val_399 <- idris_str_head $ idr_Prelude.Show.protectEsc2
      idr_Prelude.Show.protectEsc4_400 <- store idr_Prelude.Show.protectEsc4_val_399
      "idr_{APPLY_0}" $ idr_Prelude.Show.protectEsc0 idr_Prelude.Show.protectEsc4_400
  idr_Prelude.Show.protectEsc3_401 <- store idr_Prelude.Show.protectEsc3_val_389
  idr_Prelude.Show.protectEsc3_val_402 <- fetch idr_Prelude.Show.protectEsc3_401
  idr_Prelude.Show.protectEsc3_val_388 <- case idr_Prelude.Show.protectEsc3_val_402 of
    (Cidr_Prelude.Bool.False) ->
      pure (CGrString #"")
    (Cidr_Prelude.Bool.True) ->
      pure (CGrString #"\\&")
  idr_Prelude.Show.protectEsc3_403 <- store idr_Prelude.Show.protectEsc3_val_388
  idr_Prelude.Show.protectEsc3_val <- idris_str_concat $ idr_Prelude.Show.protectEsc3_403 idr_Prelude.Show.protectEsc2
  idr_Prelude.Show.protectEsc3_404 <- store idr_Prelude.Show.protectEsc3_val
  idris_str_concat $ idr_Prelude.Show.protectEsc1 idr_Prelude.Show.protectEsc3_404

idr_run__IO idr_run__IO0 idr_run__IO1 =
  idr_run__IO2_val <- pure (CErased)
  idr_run__IO2 <- store idr_run__IO2_val
  "idr_{APPLY_0}" $ idr_run__IO1 idr_run__IO2

idr_Prelude.Show.show idr_Prelude.Show.show0 idr_Prelude.Show.show1 =
  fetch idr_Prelude.Show.show1

idr_Prelude.Show.showLitChar idr_Prelude.Show.showLitChar0 =
  idr_Prelude.Show.showLitChar0_val <- fetch idr_Prelude.Show.showLitChar0
  case idr_Prelude.Show.showLitChar0_val of
    (CGrInt idr_Prelude.Show.showLitChar_cpat_LInt64_7) ->
      case idr_Prelude.Show.showLitChar_cpat_LInt64_7 of
        7 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_16}_1}")
        8 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_17}_1}")
        9 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_18}_1}")
        10 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_19}_1}")
        11 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_20}_1}")
        12 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_21}_1}")
        13 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_22}_1}")
        14 ->
          idr_Prelude.Show.showLitChar1_val <- pure (C"idr_{U_Prelude.Show.{showLitChar_23}_1}")
          idr_Prelude.Show.showLitChar1 <- store idr_Prelude.Show.showLitChar1_val
          idr_Prelude.Show.showLitChar2_val <- pure (CGrString #"\\SO")
          idr_Prelude.Show.showLitChar2 <- store idr_Prelude.Show.showLitChar2_val
          pure (C"idr_{U_Prelude.Show.protectEsc_1}" idr_Prelude.Show.showLitChar1 idr_Prelude.Show.showLitChar2)
        92 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_24}_1}")
        127 ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_25}_1}")
        #default ->
          idr_Prelude.Show.showLitChar1_val_406 <- pure (CErased)
          idr_Prelude.Show.showLitChar1_407 <- store idr_Prelude.Show.showLitChar1_val_406
          idr_Prelude.Show.showLitChar2_val_409 <- idris_ch_int $ idr_Prelude.Show.showLitChar0
          idr_Prelude.Show.showLitChar2_410 <- store idr_Prelude.Show.showLitChar2_val_409
          idr_Prelude.Show.showLitChar2_val_408 <- idris_ls_ext $ idr_Prelude.Show.showLitChar2_410
          idr_Prelude.Show.showLitChar2_411 <- store idr_Prelude.Show.showLitChar2_val_408
          idr_Prelude.Show.showLitChar3_val_412 <- pure (CErased)
          idr_Prelude.Show.showLitChar3 <- store idr_Prelude.Show.showLitChar3_val_412
          idr_Prelude.Show.showLitChar3_val <- idr_Prelude.Show.showLitChar:asciiTab:10 $ idr_Prelude.Show.showLitChar3
          idr_Prelude.Show.showLitChar3_413 <- store idr_Prelude.Show.showLitChar3_val
          idr_Prelude.Show.showLitChar1_val_405 <- idr_Prelude.Show.showLitChar:getAt:10 $ idr_Prelude.Show.showLitChar1_407 idr_Prelude.Show.showLitChar2_411 idr_Prelude.Show.showLitChar3_413
          idr_Prelude.Show.showLitChar1_414 <- store idr_Prelude.Show.showLitChar1_val_405
          idr_Prelude.Show.showLitChar1_val_415 <- fetch idr_Prelude.Show.showLitChar1_414
          case idr_Prelude.Show.showLitChar1_val_415 of
            (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar2_416) ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" idr_Prelude.Show.showLitChar2_416)
            (Cidr_Prelude.Maybe.Nothing) ->
              idr_Prelude.Show.showLitChar2_val_418 <- pure (CGrInt 127)
              idr_Prelude.Show.showLitChar2_419 <- store idr_Prelude.Show.showLitChar2_val_418
              idr_Prelude.Show.showLitChar2_val_417 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" $ idr_Prelude.Show.showLitChar0 idr_Prelude.Show.showLitChar2_419
              idr_Prelude.Show.showLitChar2_420 <- store idr_Prelude.Show.showLitChar2_val_417
              idr_Prelude.Show.showLitChar2_val_421 <- fetch idr_Prelude.Show.showLitChar2_420
              case idr_Prelude.Show.showLitChar2_val_421 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" idr_Prelude.Show.showLitChar0)
                #default ->
                  pure (C"idr_{U_prim__strCons_1}" idr_Prelude.Show.showLitChar0)
    #default ->
      idr_Prelude.Show.showLitChar1_val_423 <- pure (CErased)
      idr_Prelude.Show.showLitChar1_424 <- store idr_Prelude.Show.showLitChar1_val_423
      idr_Prelude.Show.showLitChar2_val_426 <- idris_ch_int $ idr_Prelude.Show.showLitChar0
      idr_Prelude.Show.showLitChar2_427 <- store idr_Prelude.Show.showLitChar2_val_426
      idr_Prelude.Show.showLitChar2_val_425 <- idris_ls_ext $ idr_Prelude.Show.showLitChar2_427
      idr_Prelude.Show.showLitChar2_428 <- store idr_Prelude.Show.showLitChar2_val_425
      idr_Prelude.Show.showLitChar3_val_430 <- pure (CErased)
      idr_Prelude.Show.showLitChar3_431 <- store idr_Prelude.Show.showLitChar3_val_430
      idr_Prelude.Show.showLitChar3_val_429 <- idr_Prelude.Show.showLitChar:asciiTab:10 $ idr_Prelude.Show.showLitChar3_431
      idr_Prelude.Show.showLitChar3_432 <- store idr_Prelude.Show.showLitChar3_val_429
      idr_Prelude.Show.showLitChar1_val_422 <- idr_Prelude.Show.showLitChar:getAt:10 $ idr_Prelude.Show.showLitChar1_424 idr_Prelude.Show.showLitChar2_428 idr_Prelude.Show.showLitChar3_432
      idr_Prelude.Show.showLitChar1_433 <- store idr_Prelude.Show.showLitChar1_val_422
      idr_Prelude.Show.showLitChar1_val_434 <- fetch idr_Prelude.Show.showLitChar1_433
      case idr_Prelude.Show.showLitChar1_val_434 of
        (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar2_435) ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" idr_Prelude.Show.showLitChar2_435)
        (Cidr_Prelude.Maybe.Nothing) ->
          idr_Prelude.Show.showLitChar2_val_437 <- pure (CGrInt 127)
          idr_Prelude.Show.showLitChar2_438 <- store idr_Prelude.Show.showLitChar2_val_437
          idr_Prelude.Show.showLitChar2_val_436 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" $ idr_Prelude.Show.showLitChar0 idr_Prelude.Show.showLitChar2_438
          idr_Prelude.Show.showLitChar2_439 <- store idr_Prelude.Show.showLitChar2_val_436
          idr_Prelude.Show.showLitChar2_val_440 <- fetch idr_Prelude.Show.showLitChar2_439
          case idr_Prelude.Show.showLitChar2_val_440 of
            (Cidr_Prelude.Interfaces.GT) ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" idr_Prelude.Show.showLitChar0)
            #default ->
              pure (C"idr_{U_prim__strCons_1}" idr_Prelude.Show.showLitChar0)

idr_Prelude.Show.showLitString idr_Prelude.Show.showLitString0 idr_Prelude.Show.showLitString1 =
  idr_Prelude.Show.showLitString0_val <- fetch idr_Prelude.Show.showLitString0
  case idr_Prelude.Show.showLitString0_val of
    (Cidr_Prelude.List.:: idr_Prelude.Show.showLitString2 idr_Prelude.Show.showLitString3) ->
      idr_Prelude.Show.showLitString2_val <- fetch idr_Prelude.Show.showLitString2
      case idr_Prelude.Show.showLitString2_val of
        (CGrInt idr_Prelude.Show.showLitString_cpat_LInt64_34) ->
          case idr_Prelude.Show.showLitString_cpat_LInt64_34 of
            34 ->
              idr_Prelude.Show.showLitString4_val <- pure (CGrString #"\\\"")
              idr_Prelude.Show.showLitString4 <- store idr_Prelude.Show.showLitString4_val
              idr_Prelude.Show.showLitString5_val <- idr_Prelude.Show.showLitString $ idr_Prelude.Show.showLitString3 idr_Prelude.Show.showLitString1
              idr_Prelude.Show.showLitString5 <- store idr_Prelude.Show.showLitString5_val
              idris_str_concat $ idr_Prelude.Show.showLitString4 idr_Prelude.Show.showLitString5
            #default ->
              idr_Prelude.Show.showLitString4_val_441 <- idr_Prelude.Show.showLitChar $ idr_Prelude.Show.showLitString2
              idr_Prelude.Show.showLitString4_442 <- store idr_Prelude.Show.showLitString4_val_441
              idr_Prelude.Show.showLitString5_val_443 <- idr_Prelude.Show.showLitString $ idr_Prelude.Show.showLitString3 idr_Prelude.Show.showLitString1
              idr_Prelude.Show.showLitString5_444 <- store idr_Prelude.Show.showLitString5_val_443
              "idr_{APPLY_0}" $ idr_Prelude.Show.showLitString4_442 idr_Prelude.Show.showLitString5_444
        #default ->
          idr_Prelude.Show.showLitString4_val_445 <- idr_Prelude.Show.showLitChar $ idr_Prelude.Show.showLitString2
          idr_Prelude.Show.showLitString4_446 <- store idr_Prelude.Show.showLitString4_val_445
          idr_Prelude.Show.showLitString5_val_447 <- idr_Prelude.Show.showLitString $ idr_Prelude.Show.showLitString3 idr_Prelude.Show.showLitString1
          idr_Prelude.Show.showLitString5_448 <- store idr_Prelude.Show.showLitString5_val_447
          "idr_{APPLY_0}" $ idr_Prelude.Show.showLitString4_446 idr_Prelude.Show.showLitString5_448
    (Cidr_Prelude.List.Nil) ->
      fetch idr_Prelude.Show.showLitString1

idr_Prelude.Show.showParens idr_Prelude.Show.showParens0 idr_Prelude.Show.showParens1 =
  idr_Prelude.Show.showParens0_val <- fetch idr_Prelude.Show.showParens0
  case idr_Prelude.Show.showParens0_val of
    (Cidr_Prelude.Bool.False) ->
      fetch idr_Prelude.Show.showParens1
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.showParens2_val <- pure (CGrString #"(")
      idr_Prelude.Show.showParens2 <- store idr_Prelude.Show.showParens2_val
      idr_Prelude.Show.showParens3_val_449 <- pure (CGrString #")")
      idr_Prelude.Show.showParens3 <- store idr_Prelude.Show.showParens3_val_449
      idr_Prelude.Show.showParens3_val <- idris_str_concat $ idr_Prelude.Show.showParens1 idr_Prelude.Show.showParens3
      idr_Prelude.Show.showParens3_450 <- store idr_Prelude.Show.showParens3_val
      idris_str_concat $ idr_Prelude.Show.showParens2 idr_Prelude.Show.showParens3_450

idr_Main.toFormat idr_Main.toFormat0 =
  idr_Main.toFormat0_val <- fetch idr_Main.toFormat0
  case idr_Main.toFormat0_val of
    (Cidr_Prelude.List.:: idr_Main.toFormat1 idr_Main.toFormat2) ->
      idr_Main.toFormat1_val <- fetch idr_Main.toFormat1
      case idr_Main.toFormat1_val of
        (CGrInt idr_Main.toFormat_cpat_LInt64_37) ->
          case idr_Main.toFormat_cpat_LInt64_37 of
            37 ->
              idr_Main.toFormat2_val <- fetch idr_Main.toFormat2
              case idr_Main.toFormat2_val of
                (Cidr_Prelude.List.:: idr_Main.toFormat3 idr_Main.toFormat4) ->
                  idr_Main.toFormat3_val <- fetch idr_Main.toFormat3
                  case idr_Main.toFormat3_val of
                    (CGrInt idr_Main.toFormat_cpat_LInt64_100) ->
                      case idr_Main.toFormat_cpat_LInt64_100 of
                        100 ->
                          idr_Main.toFormat5_val <- idr_Main.toFormat $ idr_Main.toFormat4
                          idr_Main.toFormat5 <- store idr_Main.toFormat5_val
                          pure (Cidr_Main.Number idr_Main.toFormat5)
                        115 ->
                          idr_Main.toFormat5_val_451 <- idr_Main.toFormat $ idr_Main.toFormat4
                          idr_Main.toFormat5_452 <- store idr_Main.toFormat5_val_451
                          pure (Cidr_Main.Str idr_Main.toFormat5_452)
                        #default ->
                          idr_Main.toFormat5_val_453 <- pure (CGrString #"%")
                          idr_Main.toFormat5_454 <- store idr_Main.toFormat5_val_453
                          idr_Main.toFormat6_val <- idr_Main.toFormat $ idr_Main.toFormat2
                          idr_Main.toFormat6 <- store idr_Main.toFormat6_val
                          pure (Cidr_Main.Lit idr_Main.toFormat5_454 idr_Main.toFormat6)
                    #default ->
                      idr_Main.toFormat5_val_455 <- pure (CGrString #"%")
                      idr_Main.toFormat5_456 <- store idr_Main.toFormat5_val_455
                      idr_Main.toFormat6_val_457 <- idr_Main.toFormat $ idr_Main.toFormat2
                      idr_Main.toFormat6_458 <- store idr_Main.toFormat6_val_457
                      pure (Cidr_Main.Lit idr_Main.toFormat5_456 idr_Main.toFormat6_458)
                #default ->
                  idr_Main.toFormat3_val_459 <- pure (CGrString #"%")
                  idr_Main.toFormat3_460 <- store idr_Main.toFormat3_val_459
                  idr_Main.toFormat4_val <- idr_Main.toFormat $ idr_Main.toFormat2
                  idr_Main.toFormat4_461 <- store idr_Main.toFormat4_val
                  pure (Cidr_Main.Lit idr_Main.toFormat3_460 idr_Main.toFormat4_461)
            #default ->
              idr_Main.toFormat3_val_462 <- idr_Main.toFormat $ idr_Main.toFormat2
              idr_Main.toFormat3_463 <- store idr_Main.toFormat3_val_462
              idr_Main.toFormat3_val_464 <- fetch idr_Main.toFormat3_463
              case idr_Main.toFormat3_val_464 of
                (Cidr_Main.Lit idr_Main.toFormat4_465 idr_Main.toFormat5_466) ->
                  idr_Main.toFormat6_val_467 <- idris_str_cons $ idr_Main.toFormat1 idr_Main.toFormat4_465
                  idr_Main.toFormat6_468 <- store idr_Main.toFormat6_val_467
                  pure (Cidr_Main.Lit idr_Main.toFormat6_468 idr_Main.toFormat5_466)
                #default ->
                  idr_Main.toFormat4_val_470 <- pure (CGrString #"")
                  idr_Main.toFormat4_471 <- store idr_Main.toFormat4_val_470
                  idr_Main.toFormat4_val_469 <- idris_str_cons $ idr_Main.toFormat1 idr_Main.toFormat4_471
                  idr_Main.toFormat4_472 <- store idr_Main.toFormat4_val_469
                  idr_Main.toFormat5_val_473 <- idr_Main.toFormat $ idr_Main.toFormat2
                  idr_Main.toFormat5_474 <- store idr_Main.toFormat5_val_473
                  pure (Cidr_Main.Lit idr_Main.toFormat4_472 idr_Main.toFormat5_474)
        #default ->
          idr_Main.toFormat3_val_475 <- idr_Main.toFormat $ idr_Main.toFormat2
          idr_Main.toFormat3_476 <- store idr_Main.toFormat3_val_475
          idr_Main.toFormat3_val_477 <- fetch idr_Main.toFormat3_476
          case idr_Main.toFormat3_val_477 of
            (Cidr_Main.Lit idr_Main.toFormat4_478 idr_Main.toFormat5_479) ->
              idr_Main.toFormat6_val_480 <- idris_str_cons $ idr_Main.toFormat1 idr_Main.toFormat4_478
              idr_Main.toFormat6_481 <- store idr_Main.toFormat6_val_480
              pure (Cidr_Main.Lit idr_Main.toFormat6_481 idr_Main.toFormat5_479)
            #default ->
              idr_Main.toFormat4_val_483 <- pure (CGrString #"")
              idr_Main.toFormat4_484 <- store idr_Main.toFormat4_val_483
              idr_Main.toFormat4_val_482 <- idris_str_cons $ idr_Main.toFormat1 idr_Main.toFormat4_484
              idr_Main.toFormat4_485 <- store idr_Main.toFormat4_val_482
              idr_Main.toFormat5_val_486 <- idr_Main.toFormat $ idr_Main.toFormat2
              idr_Main.toFormat5_487 <- store idr_Main.toFormat5_val_486
              pure (Cidr_Main.Lit idr_Main.toFormat4_485 idr_Main.toFormat5_487)
    (Cidr_Prelude.List.Nil) ->
      pure (Cidr_Main.End)

idr_Main.tri =
  idr_Main.tri0_val_488 <- pure (CGrFloat 0.0)
  idr_Main.tri0 <- store idr_Main.tri0_val_488
  idr_Main.tri1_val <- pure (CGrFloat 0.0)
  idr_Main.tri1 <- store idr_Main.tri1_val
  idr_Main.tri0_val <- pure (Cidr_Builtins.MkPair idr_Main.tri0 idr_Main.tri1)
  idr_Main.tri0_489 <- store idr_Main.tri0_val
  idr_Main.tri1_val_492 <- pure (CGrFloat 3.0)
  idr_Main.tri1_493 <- store idr_Main.tri1_val_492
  idr_Main.tri2_val <- pure (CGrFloat 0.0)
  idr_Main.tri2_494 <- store idr_Main.tri2_val
  idr_Main.tri1_val_491 <- pure (Cidr_Builtins.MkPair idr_Main.tri1_493 idr_Main.tri2_494)
  idr_Main.tri1_495 <- store idr_Main.tri1_val_491
  idr_Main.tri2_val_498 <- pure (CGrFloat 0.0)
  idr_Main.tri2_499 <- store idr_Main.tri2_val_498
  idr_Main.tri3_val <- pure (CGrFloat 4.0)
  idr_Main.tri3 <- store idr_Main.tri3_val
  idr_Main.tri2_val_497 <- pure (Cidr_Builtins.MkPair idr_Main.tri2_499 idr_Main.tri3)
  idr_Main.tri2_500 <- store idr_Main.tri2_val_497
  idr_Main.tri3_val_501 <- pure (Cidr_Data.Vect.Nil)
  idr_Main.tri3_502 <- store idr_Main.tri3_val_501
  idr_Main.tri2_val_496 <- pure (Cidr_Data.Vect.:: idr_Main.tri2_500 idr_Main.tri3_502)
  idr_Main.tri2_503 <- store idr_Main.tri2_val_496
  idr_Main.tri1_val_490 <- pure (Cidr_Data.Vect.:: idr_Main.tri1_495 idr_Main.tri2_503)
  idr_Main.tri1_504 <- store idr_Main.tri1_val_490
  pure (Cidr_Data.Vect.:: idr_Main.tri0_489 idr_Main.tri1_504)

idr_Main.tri2 =
  idr_Main.tri20_val_505 <- pure (CGrFloat 0.0)
  idr_Main.tri20 <- store idr_Main.tri20_val_505
  idr_Main.tri21_val <- pure (CGrFloat 0.0)
  idr_Main.tri21 <- store idr_Main.tri21_val
  idr_Main.tri20_val <- pure (Cidr_Builtins.MkPair idr_Main.tri20 idr_Main.tri21)
  idr_Main.tri20_506 <- store idr_Main.tri20_val
  idr_Main.tri21_val_509 <- pure (CGrFloat 0.0)
  idr_Main.tri21_510 <- store idr_Main.tri21_val_509
  idr_Main.tri22_val <- pure (CGrFloat 0.0)
  idr_Main.tri22 <- store idr_Main.tri22_val
  idr_Main.tri21_val_508 <- pure (Cidr_Builtins.MkPair idr_Main.tri21_510 idr_Main.tri22)
  idr_Main.tri21_511 <- store idr_Main.tri21_val_508
  idr_Main.tri22_val_514 <- pure (CGrFloat 0.0)
  idr_Main.tri22_515 <- store idr_Main.tri22_val_514
  idr_Main.tri23_val <- pure (CGrFloat 0.0)
  idr_Main.tri23 <- store idr_Main.tri23_val
  idr_Main.tri22_val_513 <- pure (Cidr_Builtins.MkPair idr_Main.tri22_515 idr_Main.tri23)
  idr_Main.tri22_516 <- store idr_Main.tri22_val_513
  idr_Main.tri23_val_517 <- pure (Cidr_Data.Vect.Nil)
  idr_Main.tri23_518 <- store idr_Main.tri23_val_517
  idr_Main.tri22_val_512 <- pure (Cidr_Data.Vect.:: idr_Main.tri22_516 idr_Main.tri23_518)
  idr_Main.tri22_519 <- store idr_Main.tri22_val_512
  idr_Main.tri21_val_507 <- pure (Cidr_Data.Vect.:: idr_Main.tri21_511 idr_Main.tri22_519)
  idr_Main.tri21_520 <- store idr_Main.tri21_val_507
  pure (Cidr_Data.Vect.:: idr_Main.tri20_506 idr_Main.tri21_520)

idr_Prelude.Strings.trim idr_Prelude.Strings.trim0 =
  idr_Prelude.Strings.trim1_val_528 <- idris_str_rev $ idr_Prelude.Strings.trim0
  idr_Prelude.Strings.trim1 <- store idr_Prelude.Strings.trim1_val_528
  idr_Prelude.Strings.trim2_val <- pure (CGrString #"")
  idr_Prelude.Strings.trim2 <- store idr_Prelude.Strings.trim2_val
  idr_Prelude.Strings.trim1_val_527 <- idris_str_eq $ idr_Prelude.Strings.trim1 idr_Prelude.Strings.trim2
  idr_Prelude.Strings.trim1_529 <- store idr_Prelude.Strings.trim1_val_527
  idr_Prelude.Strings.trim1_val_530 <- fetch idr_Prelude.Strings.trim1_529
  idr_Prelude.Strings.trim1_val_526 <- case idr_Prelude.Strings.trim1_val_530 of
    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0) ->
      case idr_Prelude.Strings.trim_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Strings.trim1_531 <- store idr_Prelude.Strings.trim1_val_526
  idr_Prelude.Strings.trim2_val_532 <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.trim2_533 <- store idr_Prelude.Strings.trim2_val_532
  idr_Prelude.Strings.trim1_val_525 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim1_531 idr_Prelude.Strings.trim2_533
  idr_Prelude.Strings.trim1_534 <- store idr_Prelude.Strings.trim1_val_525
  idr_Prelude.Strings.trim1_val_535 <- fetch idr_Prelude.Strings.trim1_534
  idr_Prelude.Strings.trim1_val_524 <- case idr_Prelude.Strings.trim1_val_535 of
    (Cidr_Prelude.Basics.No) ->
      pure (CGrString #"")
    (Cidr_Prelude.Basics.Yes) ->
      idr_Prelude.Strings.trim2_val_538 <- idris_str_rev $ idr_Prelude.Strings.trim0
      idr_Prelude.Strings.trim2_539 <- store idr_Prelude.Strings.trim2_val_538
      idr_Prelude.Strings.trim2_val_537 <- idris_str_head $ idr_Prelude.Strings.trim2_539
      idr_Prelude.Strings.trim2_540 <- store idr_Prelude.Strings.trim2_val_537
      idr_Prelude.Strings.trim2_val_536 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim2_540
      idr_Prelude.Strings.trim2_541 <- store idr_Prelude.Strings.trim2_val_536
      idr_Prelude.Strings.trim2_val_542 <- fetch idr_Prelude.Strings.trim2_541
      case idr_Prelude.Strings.trim2_val_542 of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.Strings.trim3_val_543 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim3 <- store idr_Prelude.Strings.trim3_val_543
          idr_Prelude.Strings.trim3_val <- idris_str_head $ idr_Prelude.Strings.trim3
          idr_Prelude.Strings.trim3_544 <- store idr_Prelude.Strings.trim3_val
          idr_Prelude.Strings.trim4_val_545 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim4 <- store idr_Prelude.Strings.trim4_val_545
          idr_Prelude.Strings.trim4_val <- idris_str_tail $ idr_Prelude.Strings.trim4
          idr_Prelude.Strings.trim4_546 <- store idr_Prelude.Strings.trim4_val
          idris_str_cons $ idr_Prelude.Strings.trim3_544 idr_Prelude.Strings.trim4_546
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Strings.trim3_val_551 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim3_552 <- store idr_Prelude.Strings.trim3_val_551
          idr_Prelude.Strings.trim3_val_550 <- idris_str_tail $ idr_Prelude.Strings.trim3_552
          idr_Prelude.Strings.trim3_553 <- store idr_Prelude.Strings.trim3_val_550
          idr_Prelude.Strings.trim4_val_554 <- pure (CGrString #"")
          idr_Prelude.Strings.trim4_555 <- store idr_Prelude.Strings.trim4_val_554
          idr_Prelude.Strings.trim3_val_549 <- idris_str_eq $ idr_Prelude.Strings.trim3_553 idr_Prelude.Strings.trim4_555
          idr_Prelude.Strings.trim3_556 <- store idr_Prelude.Strings.trim3_val_549
          idr_Prelude.Strings.trim3_val_557 <- fetch idr_Prelude.Strings.trim3_556
          idr_Prelude.Strings.trim3_val_548 <- case idr_Prelude.Strings.trim3_val_557 of
            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_558) ->
              case idr_Prelude.Strings.trim_cpat_LInt64_0_558 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr_Prelude.Strings.trim3_559 <- store idr_Prelude.Strings.trim3_val_548
          idr_Prelude.Strings.trim4_val_560 <- pure (Cidr_Prelude.Bool.True)
          idr_Prelude.Strings.trim4_561 <- store idr_Prelude.Strings.trim4_val_560
          idr_Prelude.Strings.trim3_val_547 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim3_559 idr_Prelude.Strings.trim4_561
          idr_Prelude.Strings.trim3_562 <- store idr_Prelude.Strings.trim3_val_547
          idr_Prelude.Strings.trim3_val_563 <- fetch idr_Prelude.Strings.trim3_562
          case idr_Prelude.Strings.trim3_val_563 of
            (Cidr_Prelude.Basics.No) ->
              pure (CGrString #"")
            (Cidr_Prelude.Basics.Yes) ->
              idr_Prelude.Strings.trim4_val_567 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim4_568 <- store idr_Prelude.Strings.trim4_val_567
              idr_Prelude.Strings.trim4_val_566 <- idris_str_tail $ idr_Prelude.Strings.trim4_568
              idr_Prelude.Strings.trim4_569 <- store idr_Prelude.Strings.trim4_val_566
              idr_Prelude.Strings.trim4_val_565 <- idris_str_head $ idr_Prelude.Strings.trim4_569
              idr_Prelude.Strings.trim4_570 <- store idr_Prelude.Strings.trim4_val_565
              idr_Prelude.Strings.trim4_val_564 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim4_570
              idr_Prelude.Strings.trim4_571 <- store idr_Prelude.Strings.trim4_val_564
              idr_Prelude.Strings.trim4_val_572 <- fetch idr_Prelude.Strings.trim4_571
              case idr_Prelude.Strings.trim4_val_572 of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Strings.trim5_val_574 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim5 <- store idr_Prelude.Strings.trim5_val_574
                  idr_Prelude.Strings.trim5_val_573 <- idris_str_tail $ idr_Prelude.Strings.trim5
                  idr_Prelude.Strings.trim5_575 <- store idr_Prelude.Strings.trim5_val_573
                  idr_Prelude.Strings.trim5_val <- idris_str_head $ idr_Prelude.Strings.trim5_575
                  idr_Prelude.Strings.trim5_576 <- store idr_Prelude.Strings.trim5_val
                  idr_Prelude.Strings.trim6_val_578 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6 <- store idr_Prelude.Strings.trim6_val_578
                  idr_Prelude.Strings.trim6_val_577 <- idris_str_tail $ idr_Prelude.Strings.trim6
                  idr_Prelude.Strings.trim6_579 <- store idr_Prelude.Strings.trim6_val_577
                  idr_Prelude.Strings.trim6_val <- idris_str_tail $ idr_Prelude.Strings.trim6_579
                  idr_Prelude.Strings.trim6_580 <- store idr_Prelude.Strings.trim6_val
                  idris_str_cons $ idr_Prelude.Strings.trim5_576 idr_Prelude.Strings.trim6_580
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Strings.trim5_val_586 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim5_587 <- store idr_Prelude.Strings.trim5_val_586
                  idr_Prelude.Strings.trim5_val_585 <- idris_str_tail $ idr_Prelude.Strings.trim5_587
                  idr_Prelude.Strings.trim5_588 <- store idr_Prelude.Strings.trim5_val_585
                  idr_Prelude.Strings.trim5_val_584 <- idris_str_tail $ idr_Prelude.Strings.trim5_588
                  idr_Prelude.Strings.trim5_589 <- store idr_Prelude.Strings.trim5_val_584
                  idr_Prelude.Strings.trim6_val_590 <- pure (CGrString #"")
                  idr_Prelude.Strings.trim6_591 <- store idr_Prelude.Strings.trim6_val_590
                  idr_Prelude.Strings.trim5_val_583 <- idris_str_eq $ idr_Prelude.Strings.trim5_589 idr_Prelude.Strings.trim6_591
                  idr_Prelude.Strings.trim5_592 <- store idr_Prelude.Strings.trim5_val_583
                  idr_Prelude.Strings.trim5_val_593 <- fetch idr_Prelude.Strings.trim5_592
                  idr_Prelude.Strings.trim5_val_582 <- case idr_Prelude.Strings.trim5_val_593 of
                    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_594) ->
                      case idr_Prelude.Strings.trim_cpat_LInt64_0_594 of
                        0 ->
                          pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                  idr_Prelude.Strings.trim5_595 <- store idr_Prelude.Strings.trim5_val_582
                  idr_Prelude.Strings.trim6_val_596 <- pure (Cidr_Prelude.Bool.True)
                  idr_Prelude.Strings.trim6_597 <- store idr_Prelude.Strings.trim6_val_596
                  idr_Prelude.Strings.trim5_val_581 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim5_595 idr_Prelude.Strings.trim6_597
                  idr_Prelude.Strings.trim5_598 <- store idr_Prelude.Strings.trim5_val_581
                  idr_Prelude.Strings.trim5_val_599 <- fetch idr_Prelude.Strings.trim5_598
                  case idr_Prelude.Strings.trim5_val_599 of
                    (Cidr_Prelude.Basics.No) ->
                      pure (CGrString #"")
                    (Cidr_Prelude.Basics.Yes) ->
                      idr_Prelude.Strings.trim6_val_604 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim6_605 <- store idr_Prelude.Strings.trim6_val_604
                      idr_Prelude.Strings.trim6_val_603 <- idris_str_tail $ idr_Prelude.Strings.trim6_605
                      idr_Prelude.Strings.trim6_606 <- store idr_Prelude.Strings.trim6_val_603
                      idr_Prelude.Strings.trim6_val_602 <- idris_str_tail $ idr_Prelude.Strings.trim6_606
                      idr_Prelude.Strings.trim6_607 <- store idr_Prelude.Strings.trim6_val_602
                      idr_Prelude.Strings.trim6_val_601 <- idris_str_head $ idr_Prelude.Strings.trim6_607
                      idr_Prelude.Strings.trim6_608 <- store idr_Prelude.Strings.trim6_val_601
                      idr_Prelude.Strings.trim6_val_600 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim6_608
                      idr_Prelude.Strings.trim6_609 <- store idr_Prelude.Strings.trim6_val_600
                      idr_Prelude.Strings.trim6_val_610 <- fetch idr_Prelude.Strings.trim6_609
                      case idr_Prelude.Strings.trim6_val_610 of
                        (Cidr_Prelude.Bool.False) ->
                          idr_Prelude.Strings.trim7_val_613 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim7 <- store idr_Prelude.Strings.trim7_val_613
                          idr_Prelude.Strings.trim7_val_612 <- idris_str_tail $ idr_Prelude.Strings.trim7
                          idr_Prelude.Strings.trim7_614 <- store idr_Prelude.Strings.trim7_val_612
                          idr_Prelude.Strings.trim7_val_611 <- idris_str_tail $ idr_Prelude.Strings.trim7_614
                          idr_Prelude.Strings.trim7_615 <- store idr_Prelude.Strings.trim7_val_611
                          idr_Prelude.Strings.trim7_val <- idris_str_head $ idr_Prelude.Strings.trim7_615
                          idr_Prelude.Strings.trim7_616 <- store idr_Prelude.Strings.trim7_val
                          idr_Prelude.Strings.trim8_val_619 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8 <- store idr_Prelude.Strings.trim8_val_619
                          idr_Prelude.Strings.trim8_val_618 <- idris_str_tail $ idr_Prelude.Strings.trim8
                          idr_Prelude.Strings.trim8_620 <- store idr_Prelude.Strings.trim8_val_618
                          idr_Prelude.Strings.trim8_val_617 <- idris_str_tail $ idr_Prelude.Strings.trim8_620
                          idr_Prelude.Strings.trim8_621 <- store idr_Prelude.Strings.trim8_val_617
                          idr_Prelude.Strings.trim8_val <- idris_str_tail $ idr_Prelude.Strings.trim8_621
                          idr_Prelude.Strings.trim8_622 <- store idr_Prelude.Strings.trim8_val
                          idris_str_cons $ idr_Prelude.Strings.trim7_616 idr_Prelude.Strings.trim8_622
                        (Cidr_Prelude.Bool.True) ->
                          idr_Prelude.Strings.trim7_val_629 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim7_630 <- store idr_Prelude.Strings.trim7_val_629
                          idr_Prelude.Strings.trim7_val_628 <- idris_str_tail $ idr_Prelude.Strings.trim7_630
                          idr_Prelude.Strings.trim7_631 <- store idr_Prelude.Strings.trim7_val_628
                          idr_Prelude.Strings.trim7_val_627 <- idris_str_tail $ idr_Prelude.Strings.trim7_631
                          idr_Prelude.Strings.trim7_632 <- store idr_Prelude.Strings.trim7_val_627
                          idr_Prelude.Strings.trim7_val_626 <- idris_str_tail $ idr_Prelude.Strings.trim7_632
                          idr_Prelude.Strings.trim7_633 <- store idr_Prelude.Strings.trim7_val_626
                          idr_Prelude.Strings.trim8_val_634 <- pure (CGrString #"")
                          idr_Prelude.Strings.trim8_635 <- store idr_Prelude.Strings.trim8_val_634
                          idr_Prelude.Strings.trim7_val_625 <- idris_str_eq $ idr_Prelude.Strings.trim7_633 idr_Prelude.Strings.trim8_635
                          idr_Prelude.Strings.trim7_636 <- store idr_Prelude.Strings.trim7_val_625
                          idr_Prelude.Strings.trim7_val_637 <- fetch idr_Prelude.Strings.trim7_636
                          idr_Prelude.Strings.trim7_val_624 <- case idr_Prelude.Strings.trim7_val_637 of
                            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_638) ->
                              case idr_Prelude.Strings.trim_cpat_LInt64_0_638 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                          idr_Prelude.Strings.trim7_639 <- store idr_Prelude.Strings.trim7_val_624
                          idr_Prelude.Strings.trim8_val_640 <- pure (Cidr_Prelude.Bool.True)
                          idr_Prelude.Strings.trim8_641 <- store idr_Prelude.Strings.trim8_val_640
                          idr_Prelude.Strings.trim7_val_623 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim7_639 idr_Prelude.Strings.trim8_641
                          idr_Prelude.Strings.trim7_642 <- store idr_Prelude.Strings.trim7_val_623
                          idr_Prelude.Strings.trim7_val_643 <- fetch idr_Prelude.Strings.trim7_642
                          case idr_Prelude.Strings.trim7_val_643 of
                            (Cidr_Prelude.Basics.No) ->
                              pure (CGrString #"")
                            (Cidr_Prelude.Basics.Yes) ->
                              idr_Prelude.Strings.trim8_val_649 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim8_650 <- store idr_Prelude.Strings.trim8_val_649
                              idr_Prelude.Strings.trim8_val_648 <- idris_str_tail $ idr_Prelude.Strings.trim8_650
                              idr_Prelude.Strings.trim8_651 <- store idr_Prelude.Strings.trim8_val_648
                              idr_Prelude.Strings.trim8_val_647 <- idris_str_tail $ idr_Prelude.Strings.trim8_651
                              idr_Prelude.Strings.trim8_652 <- store idr_Prelude.Strings.trim8_val_647
                              idr_Prelude.Strings.trim8_val_646 <- idris_str_tail $ idr_Prelude.Strings.trim8_652
                              idr_Prelude.Strings.trim8_653 <- store idr_Prelude.Strings.trim8_val_646
                              idr_Prelude.Strings.trim8_val_645 <- idris_str_head $ idr_Prelude.Strings.trim8_653
                              idr_Prelude.Strings.trim8_654 <- store idr_Prelude.Strings.trim8_val_645
                              idr_Prelude.Strings.trim8_val_644 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim8_654
                              idr_Prelude.Strings.trim8_655 <- store idr_Prelude.Strings.trim8_val_644
                              idr_Prelude.Strings.trim8_val_656 <- fetch idr_Prelude.Strings.trim8_655
                              case idr_Prelude.Strings.trim8_val_656 of
                                (Cidr_Prelude.Bool.False) ->
                                  idr_Prelude.Strings.trim9_val_660 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim9 <- store idr_Prelude.Strings.trim9_val_660
                                  idr_Prelude.Strings.trim9_val_659 <- idris_str_tail $ idr_Prelude.Strings.trim9
                                  idr_Prelude.Strings.trim9_661 <- store idr_Prelude.Strings.trim9_val_659
                                  idr_Prelude.Strings.trim9_val_658 <- idris_str_tail $ idr_Prelude.Strings.trim9_661
                                  idr_Prelude.Strings.trim9_662 <- store idr_Prelude.Strings.trim9_val_658
                                  idr_Prelude.Strings.trim9_val_657 <- idris_str_tail $ idr_Prelude.Strings.trim9_662
                                  idr_Prelude.Strings.trim9_663 <- store idr_Prelude.Strings.trim9_val_657
                                  idr_Prelude.Strings.trim9_val <- idris_str_head $ idr_Prelude.Strings.trim9_663
                                  idr_Prelude.Strings.trim9_664 <- store idr_Prelude.Strings.trim9_val
                                  idr_Prelude.Strings.trim10_val_668 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim10 <- store idr_Prelude.Strings.trim10_val_668
                                  idr_Prelude.Strings.trim10_val_667 <- idris_str_tail $ idr_Prelude.Strings.trim10
                                  idr_Prelude.Strings.trim10_669 <- store idr_Prelude.Strings.trim10_val_667
                                  idr_Prelude.Strings.trim10_val_666 <- idris_str_tail $ idr_Prelude.Strings.trim10_669
                                  idr_Prelude.Strings.trim10_670 <- store idr_Prelude.Strings.trim10_val_666
                                  idr_Prelude.Strings.trim10_val_665 <- idris_str_tail $ idr_Prelude.Strings.trim10_670
                                  idr_Prelude.Strings.trim10_671 <- store idr_Prelude.Strings.trim10_val_665
                                  idr_Prelude.Strings.trim10_val <- idris_str_tail $ idr_Prelude.Strings.trim10_671
                                  idr_Prelude.Strings.trim10_672 <- store idr_Prelude.Strings.trim10_val
                                  idris_str_cons $ idr_Prelude.Strings.trim9_664 idr_Prelude.Strings.trim10_672
                                (Cidr_Prelude.Bool.True) ->
                                  idr_Prelude.Strings.trim9_val_673 <- pure (CErased)
                                  idr_Prelude.Strings.trim9_674 <- store idr_Prelude.Strings.trim9_val_673
                                  idr_Prelude.Strings.trim10_val_683 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim10_684 <- store idr_Prelude.Strings.trim10_val_683
                                  idr_Prelude.Strings.trim10_val_682 <- idris_str_tail $ idr_Prelude.Strings.trim10_684
                                  idr_Prelude.Strings.trim10_685 <- store idr_Prelude.Strings.trim10_val_682
                                  idr_Prelude.Strings.trim10_val_681 <- idris_str_tail $ idr_Prelude.Strings.trim10_685
                                  idr_Prelude.Strings.trim10_686 <- store idr_Prelude.Strings.trim10_val_681
                                  idr_Prelude.Strings.trim10_val_680 <- idris_str_tail $ idr_Prelude.Strings.trim10_686
                                  idr_Prelude.Strings.trim10_687 <- store idr_Prelude.Strings.trim10_val_680
                                  idr_Prelude.Strings.trim10_val_679 <- idris_str_tail $ idr_Prelude.Strings.trim10_687
                                  idr_Prelude.Strings.trim10_688 <- store idr_Prelude.Strings.trim10_val_679
                                  idr_Prelude.Strings.trim11_val <- pure (CGrString #"")
                                  idr_Prelude.Strings.trim11 <- store idr_Prelude.Strings.trim11_val
                                  idr_Prelude.Strings.trim10_val_678 <- idris_str_eq $ idr_Prelude.Strings.trim10_688 idr_Prelude.Strings.trim11
                                  idr_Prelude.Strings.trim10_689 <- store idr_Prelude.Strings.trim10_val_678
                                  idr_Prelude.Strings.trim10_val_690 <- fetch idr_Prelude.Strings.trim10_689
                                  idr_Prelude.Strings.trim10_val_677 <- case idr_Prelude.Strings.trim10_val_690 of
                                    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_691) ->
                                      case idr_Prelude.Strings.trim_cpat_LInt64_0_691 of
                                        0 ->
                                          pure (Cidr_Prelude.Bool.True)
                                        #default ->
                                          pure (Cidr_Prelude.Bool.False)
                                    #default ->
                                      pure (Cidr_Prelude.Bool.False)
                                  idr_Prelude.Strings.trim10_692 <- store idr_Prelude.Strings.trim10_val_677
                                  idr_Prelude.Strings.trim11_val_693 <- pure (Cidr_Prelude.Bool.True)
                                  idr_Prelude.Strings.trim11_694 <- store idr_Prelude.Strings.trim11_val_693
                                  idr_Prelude.Strings.trim10_val_676 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim10_692 idr_Prelude.Strings.trim11_694
                                  idr_Prelude.Strings.trim10_695 <- store idr_Prelude.Strings.trim10_val_676
                                  idr_Prelude.Strings.trim10_val_696 <- fetch idr_Prelude.Strings.trim10_695
                                  idr_Prelude.Strings.trim10_val_675 <- case idr_Prelude.Strings.trim10_val_696 of
                                    (Cidr_Prelude.Basics.No) ->
                                      pure (Cidr_Prelude.Strings.StrNil)
                                    (Cidr_Prelude.Basics.Yes) ->
                                      idr_Prelude.Strings.trim11_val_702 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                      idr_Prelude.Strings.trim11_703 <- store idr_Prelude.Strings.trim11_val_702
                                      idr_Prelude.Strings.trim11_val_701 <- idris_str_tail $ idr_Prelude.Strings.trim11_703
                                      idr_Prelude.Strings.trim11_704 <- store idr_Prelude.Strings.trim11_val_701
                                      idr_Prelude.Strings.trim11_val_700 <- idris_str_tail $ idr_Prelude.Strings.trim11_704
                                      idr_Prelude.Strings.trim11_705 <- store idr_Prelude.Strings.trim11_val_700
                                      idr_Prelude.Strings.trim11_val_699 <- idris_str_tail $ idr_Prelude.Strings.trim11_705
                                      idr_Prelude.Strings.trim11_706 <- store idr_Prelude.Strings.trim11_val_699
                                      idr_Prelude.Strings.trim11_val_698 <- idris_str_tail $ idr_Prelude.Strings.trim11_706
                                      idr_Prelude.Strings.trim11_707 <- store idr_Prelude.Strings.trim11_val_698
                                      idr_Prelude.Strings.trim11_val_697 <- idris_str_head $ idr_Prelude.Strings.trim11_707
                                      idr_Prelude.Strings.trim11_708 <- store idr_Prelude.Strings.trim11_val_697
                                      idr_Prelude.Strings.trim12_val_713 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                      idr_Prelude.Strings.trim12 <- store idr_Prelude.Strings.trim12_val_713
                                      idr_Prelude.Strings.trim12_val_712 <- idris_str_tail $ idr_Prelude.Strings.trim12
                                      idr_Prelude.Strings.trim12_714 <- store idr_Prelude.Strings.trim12_val_712
                                      idr_Prelude.Strings.trim12_val_711 <- idris_str_tail $ idr_Prelude.Strings.trim12_714
                                      idr_Prelude.Strings.trim12_715 <- store idr_Prelude.Strings.trim12_val_711
                                      idr_Prelude.Strings.trim12_val_710 <- idris_str_tail $ idr_Prelude.Strings.trim12_715
                                      idr_Prelude.Strings.trim12_716 <- store idr_Prelude.Strings.trim12_val_710
                                      idr_Prelude.Strings.trim12_val_709 <- idris_str_tail $ idr_Prelude.Strings.trim12_716
                                      idr_Prelude.Strings.trim12_717 <- store idr_Prelude.Strings.trim12_val_709
                                      idr_Prelude.Strings.trim12_val <- idris_str_tail $ idr_Prelude.Strings.trim12_717
                                      idr_Prelude.Strings.trim12_718 <- store idr_Prelude.Strings.trim12_val
                                      pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_708 idr_Prelude.Strings.trim12_718)
                                  idr_Prelude.Strings.trim10_719 <- store idr_Prelude.Strings.trim10_val_675
                                  idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim9_674 idr_Prelude.Strings.trim10_719
  idr_Prelude.Strings.trim1_720 <- store idr_Prelude.Strings.trim1_val_524
  idr_Prelude.Strings.trim1_val_523 <- idris_str_rev $ idr_Prelude.Strings.trim1_720
  idr_Prelude.Strings.trim1_721 <- store idr_Prelude.Strings.trim1_val_523
  idr_Prelude.Strings.trim2_val_722 <- pure (CGrString #"")
  idr_Prelude.Strings.trim2_723 <- store idr_Prelude.Strings.trim2_val_722
  idr_Prelude.Strings.trim1_val_522 <- idris_str_eq $ idr_Prelude.Strings.trim1_721 idr_Prelude.Strings.trim2_723
  idr_Prelude.Strings.trim1_724 <- store idr_Prelude.Strings.trim1_val_522
  idr_Prelude.Strings.trim1_val_725 <- fetch idr_Prelude.Strings.trim1_724
  idr_Prelude.Strings.trim1_val_521 <- case idr_Prelude.Strings.trim1_val_725 of
    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_726) ->
      case idr_Prelude.Strings.trim_cpat_LInt64_0_726 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Strings.trim1_727 <- store idr_Prelude.Strings.trim1_val_521
  idr_Prelude.Strings.trim2_val_728 <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.trim2_729 <- store idr_Prelude.Strings.trim2_val_728
  idr_Prelude.Strings.trim1_val <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim1_727 idr_Prelude.Strings.trim2_729
  idr_Prelude.Strings.trim1_730 <- store idr_Prelude.Strings.trim1_val
  idr_Prelude.Strings.trim1_val_731 <- fetch idr_Prelude.Strings.trim1_730
  case idr_Prelude.Strings.trim1_val_731 of
    (Cidr_Prelude.Basics.No) ->
      pure (CGrString #"")
    (Cidr_Prelude.Basics.Yes) ->
      idr_Prelude.Strings.trim2_val_739 <- idris_str_rev $ idr_Prelude.Strings.trim0
      idr_Prelude.Strings.trim2_740 <- store idr_Prelude.Strings.trim2_val_739
      idr_Prelude.Strings.trim3_val_741 <- pure (CGrString #"")
      idr_Prelude.Strings.trim3_742 <- store idr_Prelude.Strings.trim3_val_741
      idr_Prelude.Strings.trim2_val_738 <- idris_str_eq $ idr_Prelude.Strings.trim2_740 idr_Prelude.Strings.trim3_742
      idr_Prelude.Strings.trim2_743 <- store idr_Prelude.Strings.trim2_val_738
      idr_Prelude.Strings.trim2_val_744 <- fetch idr_Prelude.Strings.trim2_743
      idr_Prelude.Strings.trim2_val_737 <- case idr_Prelude.Strings.trim2_val_744 of
        (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_745) ->
          case idr_Prelude.Strings.trim_cpat_LInt64_0_745 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Strings.trim2_746 <- store idr_Prelude.Strings.trim2_val_737
      idr_Prelude.Strings.trim3_val_747 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Strings.trim3_748 <- store idr_Prelude.Strings.trim3_val_747
      idr_Prelude.Strings.trim2_val_736 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim2_746 idr_Prelude.Strings.trim3_748
      idr_Prelude.Strings.trim2_749 <- store idr_Prelude.Strings.trim2_val_736
      idr_Prelude.Strings.trim2_val_750 <- fetch idr_Prelude.Strings.trim2_749
      idr_Prelude.Strings.trim2_val_735 <- case idr_Prelude.Strings.trim2_val_750 of
        (Cidr_Prelude.Basics.No) ->
          pure (CGrString #"")
        (Cidr_Prelude.Basics.Yes) ->
          idr_Prelude.Strings.trim3_val_753 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim3_754 <- store idr_Prelude.Strings.trim3_val_753
          idr_Prelude.Strings.trim3_val_752 <- idris_str_head $ idr_Prelude.Strings.trim3_754
          idr_Prelude.Strings.trim3_755 <- store idr_Prelude.Strings.trim3_val_752
          idr_Prelude.Strings.trim3_val_751 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim3_755
          idr_Prelude.Strings.trim3_756 <- store idr_Prelude.Strings.trim3_val_751
          idr_Prelude.Strings.trim3_val_757 <- fetch idr_Prelude.Strings.trim3_756
          case idr_Prelude.Strings.trim3_val_757 of
            (Cidr_Prelude.Bool.False) ->
              idr_Prelude.Strings.trim4_val_759 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim4_760 <- store idr_Prelude.Strings.trim4_val_759
              idr_Prelude.Strings.trim4_val_758 <- idris_str_head $ idr_Prelude.Strings.trim4_760
              idr_Prelude.Strings.trim4_761 <- store idr_Prelude.Strings.trim4_val_758
              idr_Prelude.Strings.trim5_val_763 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim5_764 <- store idr_Prelude.Strings.trim5_val_763
              idr_Prelude.Strings.trim5_val_762 <- idris_str_tail $ idr_Prelude.Strings.trim5_764
              idr_Prelude.Strings.trim5_765 <- store idr_Prelude.Strings.trim5_val_762
              idris_str_cons $ idr_Prelude.Strings.trim4_761 idr_Prelude.Strings.trim5_765
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Strings.trim4_val_770 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim4_771 <- store idr_Prelude.Strings.trim4_val_770
              idr_Prelude.Strings.trim4_val_769 <- idris_str_tail $ idr_Prelude.Strings.trim4_771
              idr_Prelude.Strings.trim4_772 <- store idr_Prelude.Strings.trim4_val_769
              idr_Prelude.Strings.trim5_val_773 <- pure (CGrString #"")
              idr_Prelude.Strings.trim5_774 <- store idr_Prelude.Strings.trim5_val_773
              idr_Prelude.Strings.trim4_val_768 <- idris_str_eq $ idr_Prelude.Strings.trim4_772 idr_Prelude.Strings.trim5_774
              idr_Prelude.Strings.trim4_775 <- store idr_Prelude.Strings.trim4_val_768
              idr_Prelude.Strings.trim4_val_776 <- fetch idr_Prelude.Strings.trim4_775
              idr_Prelude.Strings.trim4_val_767 <- case idr_Prelude.Strings.trim4_val_776 of
                (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_777) ->
                  case idr_Prelude.Strings.trim_cpat_LInt64_0_777 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
              idr_Prelude.Strings.trim4_778 <- store idr_Prelude.Strings.trim4_val_767
              idr_Prelude.Strings.trim5_val_779 <- pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Strings.trim5_780 <- store idr_Prelude.Strings.trim5_val_779
              idr_Prelude.Strings.trim4_val_766 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim4_778 idr_Prelude.Strings.trim5_780
              idr_Prelude.Strings.trim4_781 <- store idr_Prelude.Strings.trim4_val_766
              idr_Prelude.Strings.trim4_val_782 <- fetch idr_Prelude.Strings.trim4_781
              case idr_Prelude.Strings.trim4_val_782 of
                (Cidr_Prelude.Basics.No) ->
                  pure (CGrString #"")
                (Cidr_Prelude.Basics.Yes) ->
                  idr_Prelude.Strings.trim5_val_786 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim5_787 <- store idr_Prelude.Strings.trim5_val_786
                  idr_Prelude.Strings.trim5_val_785 <- idris_str_tail $ idr_Prelude.Strings.trim5_787
                  idr_Prelude.Strings.trim5_788 <- store idr_Prelude.Strings.trim5_val_785
                  idr_Prelude.Strings.trim5_val_784 <- idris_str_head $ idr_Prelude.Strings.trim5_788
                  idr_Prelude.Strings.trim5_789 <- store idr_Prelude.Strings.trim5_val_784
                  idr_Prelude.Strings.trim5_val_783 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim5_789
                  idr_Prelude.Strings.trim5_790 <- store idr_Prelude.Strings.trim5_val_783
                  idr_Prelude.Strings.trim5_val_791 <- fetch idr_Prelude.Strings.trim5_790
                  case idr_Prelude.Strings.trim5_val_791 of
                    (Cidr_Prelude.Bool.False) ->
                      idr_Prelude.Strings.trim6_val_794 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim6_795 <- store idr_Prelude.Strings.trim6_val_794
                      idr_Prelude.Strings.trim6_val_793 <- idris_str_tail $ idr_Prelude.Strings.trim6_795
                      idr_Prelude.Strings.trim6_796 <- store idr_Prelude.Strings.trim6_val_793
                      idr_Prelude.Strings.trim6_val_792 <- idris_str_head $ idr_Prelude.Strings.trim6_796
                      idr_Prelude.Strings.trim6_797 <- store idr_Prelude.Strings.trim6_val_792
                      idr_Prelude.Strings.trim7_val_800 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_801 <- store idr_Prelude.Strings.trim7_val_800
                      idr_Prelude.Strings.trim7_val_799 <- idris_str_tail $ idr_Prelude.Strings.trim7_801
                      idr_Prelude.Strings.trim7_802 <- store idr_Prelude.Strings.trim7_val_799
                      idr_Prelude.Strings.trim7_val_798 <- idris_str_tail $ idr_Prelude.Strings.trim7_802
                      idr_Prelude.Strings.trim7_803 <- store idr_Prelude.Strings.trim7_val_798
                      idris_str_cons $ idr_Prelude.Strings.trim6_797 idr_Prelude.Strings.trim7_803
                    (Cidr_Prelude.Bool.True) ->
                      idr_Prelude.Strings.trim6_val_804 <- pure (CErased)
                      idr_Prelude.Strings.trim6_805 <- store idr_Prelude.Strings.trim6_val_804
                      idr_Prelude.Strings.trim7_val_812 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_813 <- store idr_Prelude.Strings.trim7_val_812
                      idr_Prelude.Strings.trim7_val_811 <- idris_str_tail $ idr_Prelude.Strings.trim7_813
                      idr_Prelude.Strings.trim7_814 <- store idr_Prelude.Strings.trim7_val_811
                      idr_Prelude.Strings.trim7_val_810 <- idris_str_tail $ idr_Prelude.Strings.trim7_814
                      idr_Prelude.Strings.trim7_815 <- store idr_Prelude.Strings.trim7_val_810
                      idr_Prelude.Strings.trim8_val_816 <- pure (CGrString #"")
                      idr_Prelude.Strings.trim8_817 <- store idr_Prelude.Strings.trim8_val_816
                      idr_Prelude.Strings.trim7_val_809 <- idris_str_eq $ idr_Prelude.Strings.trim7_815 idr_Prelude.Strings.trim8_817
                      idr_Prelude.Strings.trim7_818 <- store idr_Prelude.Strings.trim7_val_809
                      idr_Prelude.Strings.trim7_val_819 <- fetch idr_Prelude.Strings.trim7_818
                      idr_Prelude.Strings.trim7_val_808 <- case idr_Prelude.Strings.trim7_val_819 of
                        (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_820) ->
                          case idr_Prelude.Strings.trim_cpat_LInt64_0_820 of
                            0 ->
                              pure (Cidr_Prelude.Bool.True)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                      idr_Prelude.Strings.trim7_821 <- store idr_Prelude.Strings.trim7_val_808
                      idr_Prelude.Strings.trim8_val_822 <- pure (Cidr_Prelude.Bool.True)
                      idr_Prelude.Strings.trim8_823 <- store idr_Prelude.Strings.trim8_val_822
                      idr_Prelude.Strings.trim7_val_807 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim7_821 idr_Prelude.Strings.trim8_823
                      idr_Prelude.Strings.trim7_824 <- store idr_Prelude.Strings.trim7_val_807
                      idr_Prelude.Strings.trim7_val_825 <- fetch idr_Prelude.Strings.trim7_824
                      idr_Prelude.Strings.trim7_val_806 <- case idr_Prelude.Strings.trim7_val_825 of
                        (Cidr_Prelude.Basics.No) ->
                          pure (Cidr_Prelude.Strings.StrNil)
                        (Cidr_Prelude.Basics.Yes) ->
                          idr_Prelude.Strings.trim8_val_829 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_830 <- store idr_Prelude.Strings.trim8_val_829
                          idr_Prelude.Strings.trim8_val_828 <- idris_str_tail $ idr_Prelude.Strings.trim8_830
                          idr_Prelude.Strings.trim8_831 <- store idr_Prelude.Strings.trim8_val_828
                          idr_Prelude.Strings.trim8_val_827 <- idris_str_tail $ idr_Prelude.Strings.trim8_831
                          idr_Prelude.Strings.trim8_832 <- store idr_Prelude.Strings.trim8_val_827
                          idr_Prelude.Strings.trim8_val_826 <- idris_str_head $ idr_Prelude.Strings.trim8_832
                          idr_Prelude.Strings.trim8_833 <- store idr_Prelude.Strings.trim8_val_826
                          idr_Prelude.Strings.trim9_val_837 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_838 <- store idr_Prelude.Strings.trim9_val_837
                          idr_Prelude.Strings.trim9_val_836 <- idris_str_tail $ idr_Prelude.Strings.trim9_838
                          idr_Prelude.Strings.trim9_839 <- store idr_Prelude.Strings.trim9_val_836
                          idr_Prelude.Strings.trim9_val_835 <- idris_str_tail $ idr_Prelude.Strings.trim9_839
                          idr_Prelude.Strings.trim9_840 <- store idr_Prelude.Strings.trim9_val_835
                          idr_Prelude.Strings.trim9_val_834 <- idris_str_tail $ idr_Prelude.Strings.trim9_840
                          idr_Prelude.Strings.trim9_841 <- store idr_Prelude.Strings.trim9_val_834
                          pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim8_833 idr_Prelude.Strings.trim9_841)
                      idr_Prelude.Strings.trim7_842 <- store idr_Prelude.Strings.trim7_val_806
                      idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim6_805 idr_Prelude.Strings.trim7_842
      idr_Prelude.Strings.trim2_843 <- store idr_Prelude.Strings.trim2_val_735
      idr_Prelude.Strings.trim2_val_734 <- idris_str_rev $ idr_Prelude.Strings.trim2_843
      idr_Prelude.Strings.trim2_844 <- store idr_Prelude.Strings.trim2_val_734
      idr_Prelude.Strings.trim2_val_733 <- idris_str_head $ idr_Prelude.Strings.trim2_844
      idr_Prelude.Strings.trim2_845 <- store idr_Prelude.Strings.trim2_val_733
      idr_Prelude.Strings.trim2_val_732 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim2_845
      idr_Prelude.Strings.trim2_846 <- store idr_Prelude.Strings.trim2_val_732
      idr_Prelude.Strings.trim2_val_847 <- fetch idr_Prelude.Strings.trim2_846
      case idr_Prelude.Strings.trim2_val_847 of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.Strings.trim3_val_854 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim3_855 <- store idr_Prelude.Strings.trim3_val_854
          idr_Prelude.Strings.trim4_val_856 <- pure (CGrString #"")
          idr_Prelude.Strings.trim4_857 <- store idr_Prelude.Strings.trim4_val_856
          idr_Prelude.Strings.trim3_val_853 <- idris_str_eq $ idr_Prelude.Strings.trim3_855 idr_Prelude.Strings.trim4_857
          idr_Prelude.Strings.trim3_858 <- store idr_Prelude.Strings.trim3_val_853
          idr_Prelude.Strings.trim3_val_859 <- fetch idr_Prelude.Strings.trim3_858
          idr_Prelude.Strings.trim3_val_852 <- case idr_Prelude.Strings.trim3_val_859 of
            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_860) ->
              case idr_Prelude.Strings.trim_cpat_LInt64_0_860 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr_Prelude.Strings.trim3_861 <- store idr_Prelude.Strings.trim3_val_852
          idr_Prelude.Strings.trim4_val_862 <- pure (Cidr_Prelude.Bool.True)
          idr_Prelude.Strings.trim4_863 <- store idr_Prelude.Strings.trim4_val_862
          idr_Prelude.Strings.trim3_val_851 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim3_861 idr_Prelude.Strings.trim4_863
          idr_Prelude.Strings.trim3_864 <- store idr_Prelude.Strings.trim3_val_851
          idr_Prelude.Strings.trim3_val_865 <- fetch idr_Prelude.Strings.trim3_864
          idr_Prelude.Strings.trim3_val_850 <- case idr_Prelude.Strings.trim3_val_865 of
            (Cidr_Prelude.Basics.No) ->
              pure (CGrString #"")
            (Cidr_Prelude.Basics.Yes) ->
              idr_Prelude.Strings.trim4_val_868 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim4_869 <- store idr_Prelude.Strings.trim4_val_868
              idr_Prelude.Strings.trim4_val_867 <- idris_str_head $ idr_Prelude.Strings.trim4_869
              idr_Prelude.Strings.trim4_870 <- store idr_Prelude.Strings.trim4_val_867
              idr_Prelude.Strings.trim4_val_866 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim4_870
              idr_Prelude.Strings.trim4_871 <- store idr_Prelude.Strings.trim4_val_866
              idr_Prelude.Strings.trim4_val_872 <- fetch idr_Prelude.Strings.trim4_871
              case idr_Prelude.Strings.trim4_val_872 of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Strings.trim5_val_874 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim5_875 <- store idr_Prelude.Strings.trim5_val_874
                  idr_Prelude.Strings.trim5_val_873 <- idris_str_head $ idr_Prelude.Strings.trim5_875
                  idr_Prelude.Strings.trim5_876 <- store idr_Prelude.Strings.trim5_val_873
                  idr_Prelude.Strings.trim6_val_878 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_879 <- store idr_Prelude.Strings.trim6_val_878
                  idr_Prelude.Strings.trim6_val_877 <- idris_str_tail $ idr_Prelude.Strings.trim6_879
                  idr_Prelude.Strings.trim6_880 <- store idr_Prelude.Strings.trim6_val_877
                  idris_str_cons $ idr_Prelude.Strings.trim5_876 idr_Prelude.Strings.trim6_880
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Strings.trim5_val_885 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim5_886 <- store idr_Prelude.Strings.trim5_val_885
                  idr_Prelude.Strings.trim5_val_884 <- idris_str_tail $ idr_Prelude.Strings.trim5_886
                  idr_Prelude.Strings.trim5_887 <- store idr_Prelude.Strings.trim5_val_884
                  idr_Prelude.Strings.trim6_val_888 <- pure (CGrString #"")
                  idr_Prelude.Strings.trim6_889 <- store idr_Prelude.Strings.trim6_val_888
                  idr_Prelude.Strings.trim5_val_883 <- idris_str_eq $ idr_Prelude.Strings.trim5_887 idr_Prelude.Strings.trim6_889
                  idr_Prelude.Strings.trim5_890 <- store idr_Prelude.Strings.trim5_val_883
                  idr_Prelude.Strings.trim5_val_891 <- fetch idr_Prelude.Strings.trim5_890
                  idr_Prelude.Strings.trim5_val_882 <- case idr_Prelude.Strings.trim5_val_891 of
                    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_892) ->
                      case idr_Prelude.Strings.trim_cpat_LInt64_0_892 of
                        0 ->
                          pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                  idr_Prelude.Strings.trim5_893 <- store idr_Prelude.Strings.trim5_val_882
                  idr_Prelude.Strings.trim6_val_894 <- pure (Cidr_Prelude.Bool.True)
                  idr_Prelude.Strings.trim6_895 <- store idr_Prelude.Strings.trim6_val_894
                  idr_Prelude.Strings.trim5_val_881 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim5_893 idr_Prelude.Strings.trim6_895
                  idr_Prelude.Strings.trim5_896 <- store idr_Prelude.Strings.trim5_val_881
                  idr_Prelude.Strings.trim5_val_897 <- fetch idr_Prelude.Strings.trim5_896
                  case idr_Prelude.Strings.trim5_val_897 of
                    (Cidr_Prelude.Basics.No) ->
                      pure (CGrString #"")
                    (Cidr_Prelude.Basics.Yes) ->
                      idr_Prelude.Strings.trim6_val_901 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim6_902 <- store idr_Prelude.Strings.trim6_val_901
                      idr_Prelude.Strings.trim6_val_900 <- idris_str_tail $ idr_Prelude.Strings.trim6_902
                      idr_Prelude.Strings.trim6_903 <- store idr_Prelude.Strings.trim6_val_900
                      idr_Prelude.Strings.trim6_val_899 <- idris_str_head $ idr_Prelude.Strings.trim6_903
                      idr_Prelude.Strings.trim6_904 <- store idr_Prelude.Strings.trim6_val_899
                      idr_Prelude.Strings.trim6_val_898 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim6_904
                      idr_Prelude.Strings.trim6_905 <- store idr_Prelude.Strings.trim6_val_898
                      idr_Prelude.Strings.trim6_val_906 <- fetch idr_Prelude.Strings.trim6_905
                      case idr_Prelude.Strings.trim6_val_906 of
                        (Cidr_Prelude.Bool.False) ->
                          idr_Prelude.Strings.trim7_val_909 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim7_910 <- store idr_Prelude.Strings.trim7_val_909
                          idr_Prelude.Strings.trim7_val_908 <- idris_str_tail $ idr_Prelude.Strings.trim7_910
                          idr_Prelude.Strings.trim7_911 <- store idr_Prelude.Strings.trim7_val_908
                          idr_Prelude.Strings.trim7_val_907 <- idris_str_head $ idr_Prelude.Strings.trim7_911
                          idr_Prelude.Strings.trim7_912 <- store idr_Prelude.Strings.trim7_val_907
                          idr_Prelude.Strings.trim8_val_915 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_916 <- store idr_Prelude.Strings.trim8_val_915
                          idr_Prelude.Strings.trim8_val_914 <- idris_str_tail $ idr_Prelude.Strings.trim8_916
                          idr_Prelude.Strings.trim8_917 <- store idr_Prelude.Strings.trim8_val_914
                          idr_Prelude.Strings.trim8_val_913 <- idris_str_tail $ idr_Prelude.Strings.trim8_917
                          idr_Prelude.Strings.trim8_918 <- store idr_Prelude.Strings.trim8_val_913
                          idris_str_cons $ idr_Prelude.Strings.trim7_912 idr_Prelude.Strings.trim8_918
                        (Cidr_Prelude.Bool.True) ->
                          idr_Prelude.Strings.trim7_val_919 <- pure (CErased)
                          idr_Prelude.Strings.trim7_920 <- store idr_Prelude.Strings.trim7_val_919
                          idr_Prelude.Strings.trim8_val_927 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_928 <- store idr_Prelude.Strings.trim8_val_927
                          idr_Prelude.Strings.trim8_val_926 <- idris_str_tail $ idr_Prelude.Strings.trim8_928
                          idr_Prelude.Strings.trim8_929 <- store idr_Prelude.Strings.trim8_val_926
                          idr_Prelude.Strings.trim8_val_925 <- idris_str_tail $ idr_Prelude.Strings.trim8_929
                          idr_Prelude.Strings.trim8_930 <- store idr_Prelude.Strings.trim8_val_925
                          idr_Prelude.Strings.trim9_val_931 <- pure (CGrString #"")
                          idr_Prelude.Strings.trim9_932 <- store idr_Prelude.Strings.trim9_val_931
                          idr_Prelude.Strings.trim8_val_924 <- idris_str_eq $ idr_Prelude.Strings.trim8_930 idr_Prelude.Strings.trim9_932
                          idr_Prelude.Strings.trim8_933 <- store idr_Prelude.Strings.trim8_val_924
                          idr_Prelude.Strings.trim8_val_934 <- fetch idr_Prelude.Strings.trim8_933
                          idr_Prelude.Strings.trim8_val_923 <- case idr_Prelude.Strings.trim8_val_934 of
                            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_935) ->
                              case idr_Prelude.Strings.trim_cpat_LInt64_0_935 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                          idr_Prelude.Strings.trim8_936 <- store idr_Prelude.Strings.trim8_val_923
                          idr_Prelude.Strings.trim9_val_937 <- pure (Cidr_Prelude.Bool.True)
                          idr_Prelude.Strings.trim9_938 <- store idr_Prelude.Strings.trim9_val_937
                          idr_Prelude.Strings.trim8_val_922 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim8_936 idr_Prelude.Strings.trim9_938
                          idr_Prelude.Strings.trim8_939 <- store idr_Prelude.Strings.trim8_val_922
                          idr_Prelude.Strings.trim8_val_940 <- fetch idr_Prelude.Strings.trim8_939
                          idr_Prelude.Strings.trim8_val_921 <- case idr_Prelude.Strings.trim8_val_940 of
                            (Cidr_Prelude.Basics.No) ->
                              pure (Cidr_Prelude.Strings.StrNil)
                            (Cidr_Prelude.Basics.Yes) ->
                              idr_Prelude.Strings.trim9_val_944 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim9_945 <- store idr_Prelude.Strings.trim9_val_944
                              idr_Prelude.Strings.trim9_val_943 <- idris_str_tail $ idr_Prelude.Strings.trim9_945
                              idr_Prelude.Strings.trim9_946 <- store idr_Prelude.Strings.trim9_val_943
                              idr_Prelude.Strings.trim9_val_942 <- idris_str_tail $ idr_Prelude.Strings.trim9_946
                              idr_Prelude.Strings.trim9_947 <- store idr_Prelude.Strings.trim9_val_942
                              idr_Prelude.Strings.trim9_val_941 <- idris_str_head $ idr_Prelude.Strings.trim9_947
                              idr_Prelude.Strings.trim9_948 <- store idr_Prelude.Strings.trim9_val_941
                              idr_Prelude.Strings.trim10_val_952 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_953 <- store idr_Prelude.Strings.trim10_val_952
                              idr_Prelude.Strings.trim10_val_951 <- idris_str_tail $ idr_Prelude.Strings.trim10_953
                              idr_Prelude.Strings.trim10_954 <- store idr_Prelude.Strings.trim10_val_951
                              idr_Prelude.Strings.trim10_val_950 <- idris_str_tail $ idr_Prelude.Strings.trim10_954
                              idr_Prelude.Strings.trim10_955 <- store idr_Prelude.Strings.trim10_val_950
                              idr_Prelude.Strings.trim10_val_949 <- idris_str_tail $ idr_Prelude.Strings.trim10_955
                              idr_Prelude.Strings.trim10_956 <- store idr_Prelude.Strings.trim10_val_949
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim9_948 idr_Prelude.Strings.trim10_956)
                          idr_Prelude.Strings.trim8_957 <- store idr_Prelude.Strings.trim8_val_921
                          idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim7_920 idr_Prelude.Strings.trim8_957
          idr_Prelude.Strings.trim3_958 <- store idr_Prelude.Strings.trim3_val_850
          idr_Prelude.Strings.trim3_val_849 <- idris_str_rev $ idr_Prelude.Strings.trim3_958
          idr_Prelude.Strings.trim3_959 <- store idr_Prelude.Strings.trim3_val_849
          idr_Prelude.Strings.trim3_val_848 <- idris_str_head $ idr_Prelude.Strings.trim3_959
          idr_Prelude.Strings.trim3_960 <- store idr_Prelude.Strings.trim3_val_848
          idr_Prelude.Strings.trim4_val_967 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim4_968 <- store idr_Prelude.Strings.trim4_val_967
          idr_Prelude.Strings.trim5_val_969 <- pure (CGrString #"")
          idr_Prelude.Strings.trim5_970 <- store idr_Prelude.Strings.trim5_val_969
          idr_Prelude.Strings.trim4_val_966 <- idris_str_eq $ idr_Prelude.Strings.trim4_968 idr_Prelude.Strings.trim5_970
          idr_Prelude.Strings.trim4_971 <- store idr_Prelude.Strings.trim4_val_966
          idr_Prelude.Strings.trim4_val_972 <- fetch idr_Prelude.Strings.trim4_971
          idr_Prelude.Strings.trim4_val_965 <- case idr_Prelude.Strings.trim4_val_972 of
            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_973) ->
              case idr_Prelude.Strings.trim_cpat_LInt64_0_973 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr_Prelude.Strings.trim4_974 <- store idr_Prelude.Strings.trim4_val_965
          idr_Prelude.Strings.trim5_val_975 <- pure (Cidr_Prelude.Bool.True)
          idr_Prelude.Strings.trim5_976 <- store idr_Prelude.Strings.trim5_val_975
          idr_Prelude.Strings.trim4_val_964 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim4_974 idr_Prelude.Strings.trim5_976
          idr_Prelude.Strings.trim4_977 <- store idr_Prelude.Strings.trim4_val_964
          idr_Prelude.Strings.trim4_val_978 <- fetch idr_Prelude.Strings.trim4_977
          idr_Prelude.Strings.trim4_val_963 <- case idr_Prelude.Strings.trim4_val_978 of
            (Cidr_Prelude.Basics.No) ->
              pure (CGrString #"")
            (Cidr_Prelude.Basics.Yes) ->
              idr_Prelude.Strings.trim5_val_981 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim5_982 <- store idr_Prelude.Strings.trim5_val_981
              idr_Prelude.Strings.trim5_val_980 <- idris_str_head $ idr_Prelude.Strings.trim5_982
              idr_Prelude.Strings.trim5_983 <- store idr_Prelude.Strings.trim5_val_980
              idr_Prelude.Strings.trim5_val_979 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim5_983
              idr_Prelude.Strings.trim5_984 <- store idr_Prelude.Strings.trim5_val_979
              idr_Prelude.Strings.trim5_val_985 <- fetch idr_Prelude.Strings.trim5_984
              case idr_Prelude.Strings.trim5_val_985 of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Strings.trim6_val_987 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_988 <- store idr_Prelude.Strings.trim6_val_987
                  idr_Prelude.Strings.trim6_val_986 <- idris_str_head $ idr_Prelude.Strings.trim6_988
                  idr_Prelude.Strings.trim6_989 <- store idr_Prelude.Strings.trim6_val_986
                  idr_Prelude.Strings.trim7_val_991 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim7_992 <- store idr_Prelude.Strings.trim7_val_991
                  idr_Prelude.Strings.trim7_val_990 <- idris_str_tail $ idr_Prelude.Strings.trim7_992
                  idr_Prelude.Strings.trim7_993 <- store idr_Prelude.Strings.trim7_val_990
                  idris_str_cons $ idr_Prelude.Strings.trim6_989 idr_Prelude.Strings.trim7_993
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Strings.trim6_val_998 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_999 <- store idr_Prelude.Strings.trim6_val_998
                  idr_Prelude.Strings.trim6_val_997 <- idris_str_tail $ idr_Prelude.Strings.trim6_999
                  idr_Prelude.Strings.trim6_1000 <- store idr_Prelude.Strings.trim6_val_997
                  idr_Prelude.Strings.trim7_val_1001 <- pure (CGrString #"")
                  idr_Prelude.Strings.trim7_1002 <- store idr_Prelude.Strings.trim7_val_1001
                  idr_Prelude.Strings.trim6_val_996 <- idris_str_eq $ idr_Prelude.Strings.trim6_1000 idr_Prelude.Strings.trim7_1002
                  idr_Prelude.Strings.trim6_1003 <- store idr_Prelude.Strings.trim6_val_996
                  idr_Prelude.Strings.trim6_val_1004 <- fetch idr_Prelude.Strings.trim6_1003
                  idr_Prelude.Strings.trim6_val_995 <- case idr_Prelude.Strings.trim6_val_1004 of
                    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1005) ->
                      case idr_Prelude.Strings.trim_cpat_LInt64_0_1005 of
                        0 ->
                          pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                  idr_Prelude.Strings.trim6_1006 <- store idr_Prelude.Strings.trim6_val_995
                  idr_Prelude.Strings.trim7_val_1007 <- pure (Cidr_Prelude.Bool.True)
                  idr_Prelude.Strings.trim7_1008 <- store idr_Prelude.Strings.trim7_val_1007
                  idr_Prelude.Strings.trim6_val_994 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim6_1006 idr_Prelude.Strings.trim7_1008
                  idr_Prelude.Strings.trim6_1009 <- store idr_Prelude.Strings.trim6_val_994
                  idr_Prelude.Strings.trim6_val_1010 <- fetch idr_Prelude.Strings.trim6_1009
                  case idr_Prelude.Strings.trim6_val_1010 of
                    (Cidr_Prelude.Basics.No) ->
                      pure (CGrString #"")
                    (Cidr_Prelude.Basics.Yes) ->
                      idr_Prelude.Strings.trim7_val_1014 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_1015 <- store idr_Prelude.Strings.trim7_val_1014
                      idr_Prelude.Strings.trim7_val_1013 <- idris_str_tail $ idr_Prelude.Strings.trim7_1015
                      idr_Prelude.Strings.trim7_1016 <- store idr_Prelude.Strings.trim7_val_1013
                      idr_Prelude.Strings.trim7_val_1012 <- idris_str_head $ idr_Prelude.Strings.trim7_1016
                      idr_Prelude.Strings.trim7_1017 <- store idr_Prelude.Strings.trim7_val_1012
                      idr_Prelude.Strings.trim7_val_1011 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim7_1017
                      idr_Prelude.Strings.trim7_1018 <- store idr_Prelude.Strings.trim7_val_1011
                      idr_Prelude.Strings.trim7_val_1019 <- fetch idr_Prelude.Strings.trim7_1018
                      case idr_Prelude.Strings.trim7_val_1019 of
                        (Cidr_Prelude.Bool.False) ->
                          idr_Prelude.Strings.trim8_val_1022 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_1023 <- store idr_Prelude.Strings.trim8_val_1022
                          idr_Prelude.Strings.trim8_val_1021 <- idris_str_tail $ idr_Prelude.Strings.trim8_1023
                          idr_Prelude.Strings.trim8_1024 <- store idr_Prelude.Strings.trim8_val_1021
                          idr_Prelude.Strings.trim8_val_1020 <- idris_str_head $ idr_Prelude.Strings.trim8_1024
                          idr_Prelude.Strings.trim8_1025 <- store idr_Prelude.Strings.trim8_val_1020
                          idr_Prelude.Strings.trim9_val_1028 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_1029 <- store idr_Prelude.Strings.trim9_val_1028
                          idr_Prelude.Strings.trim9_val_1027 <- idris_str_tail $ idr_Prelude.Strings.trim9_1029
                          idr_Prelude.Strings.trim9_1030 <- store idr_Prelude.Strings.trim9_val_1027
                          idr_Prelude.Strings.trim9_val_1026 <- idris_str_tail $ idr_Prelude.Strings.trim9_1030
                          idr_Prelude.Strings.trim9_1031 <- store idr_Prelude.Strings.trim9_val_1026
                          idris_str_cons $ idr_Prelude.Strings.trim8_1025 idr_Prelude.Strings.trim9_1031
                        (Cidr_Prelude.Bool.True) ->
                          idr_Prelude.Strings.trim8_val_1032 <- pure (CErased)
                          idr_Prelude.Strings.trim8_1033 <- store idr_Prelude.Strings.trim8_val_1032
                          idr_Prelude.Strings.trim9_val_1040 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_1041 <- store idr_Prelude.Strings.trim9_val_1040
                          idr_Prelude.Strings.trim9_val_1039 <- idris_str_tail $ idr_Prelude.Strings.trim9_1041
                          idr_Prelude.Strings.trim9_1042 <- store idr_Prelude.Strings.trim9_val_1039
                          idr_Prelude.Strings.trim9_val_1038 <- idris_str_tail $ idr_Prelude.Strings.trim9_1042
                          idr_Prelude.Strings.trim9_1043 <- store idr_Prelude.Strings.trim9_val_1038
                          idr_Prelude.Strings.trim10_val_1044 <- pure (CGrString #"")
                          idr_Prelude.Strings.trim10_1045 <- store idr_Prelude.Strings.trim10_val_1044
                          idr_Prelude.Strings.trim9_val_1037 <- idris_str_eq $ idr_Prelude.Strings.trim9_1043 idr_Prelude.Strings.trim10_1045
                          idr_Prelude.Strings.trim9_1046 <- store idr_Prelude.Strings.trim9_val_1037
                          idr_Prelude.Strings.trim9_val_1047 <- fetch idr_Prelude.Strings.trim9_1046
                          idr_Prelude.Strings.trim9_val_1036 <- case idr_Prelude.Strings.trim9_val_1047 of
                            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1048) ->
                              case idr_Prelude.Strings.trim_cpat_LInt64_0_1048 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                          idr_Prelude.Strings.trim9_1049 <- store idr_Prelude.Strings.trim9_val_1036
                          idr_Prelude.Strings.trim10_val_1050 <- pure (Cidr_Prelude.Bool.True)
                          idr_Prelude.Strings.trim10_1051 <- store idr_Prelude.Strings.trim10_val_1050
                          idr_Prelude.Strings.trim9_val_1035 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim9_1049 idr_Prelude.Strings.trim10_1051
                          idr_Prelude.Strings.trim9_1052 <- store idr_Prelude.Strings.trim9_val_1035
                          idr_Prelude.Strings.trim9_val_1053 <- fetch idr_Prelude.Strings.trim9_1052
                          idr_Prelude.Strings.trim9_val_1034 <- case idr_Prelude.Strings.trim9_val_1053 of
                            (Cidr_Prelude.Basics.No) ->
                              pure (Cidr_Prelude.Strings.StrNil)
                            (Cidr_Prelude.Basics.Yes) ->
                              idr_Prelude.Strings.trim10_val_1057 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_1058 <- store idr_Prelude.Strings.trim10_val_1057
                              idr_Prelude.Strings.trim10_val_1056 <- idris_str_tail $ idr_Prelude.Strings.trim10_1058
                              idr_Prelude.Strings.trim10_1059 <- store idr_Prelude.Strings.trim10_val_1056
                              idr_Prelude.Strings.trim10_val_1055 <- idris_str_tail $ idr_Prelude.Strings.trim10_1059
                              idr_Prelude.Strings.trim10_1060 <- store idr_Prelude.Strings.trim10_val_1055
                              idr_Prelude.Strings.trim10_val_1054 <- idris_str_head $ idr_Prelude.Strings.trim10_1060
                              idr_Prelude.Strings.trim10_1061 <- store idr_Prelude.Strings.trim10_val_1054
                              idr_Prelude.Strings.trim11_val_1065 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim11_1066 <- store idr_Prelude.Strings.trim11_val_1065
                              idr_Prelude.Strings.trim11_val_1064 <- idris_str_tail $ idr_Prelude.Strings.trim11_1066
                              idr_Prelude.Strings.trim11_1067 <- store idr_Prelude.Strings.trim11_val_1064
                              idr_Prelude.Strings.trim11_val_1063 <- idris_str_tail $ idr_Prelude.Strings.trim11_1067
                              idr_Prelude.Strings.trim11_1068 <- store idr_Prelude.Strings.trim11_val_1063
                              idr_Prelude.Strings.trim11_val_1062 <- idris_str_tail $ idr_Prelude.Strings.trim11_1068
                              idr_Prelude.Strings.trim11_1069 <- store idr_Prelude.Strings.trim11_val_1062
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1061 idr_Prelude.Strings.trim11_1069)
                          idr_Prelude.Strings.trim9_1070 <- store idr_Prelude.Strings.trim9_val_1034
                          idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim8_1033 idr_Prelude.Strings.trim9_1070
          idr_Prelude.Strings.trim4_1071 <- store idr_Prelude.Strings.trim4_val_963
          idr_Prelude.Strings.trim4_val_962 <- idris_str_rev $ idr_Prelude.Strings.trim4_1071
          idr_Prelude.Strings.trim4_1072 <- store idr_Prelude.Strings.trim4_val_962
          idr_Prelude.Strings.trim4_val_961 <- idris_str_tail $ idr_Prelude.Strings.trim4_1072
          idr_Prelude.Strings.trim4_1073 <- store idr_Prelude.Strings.trim4_val_961
          idris_str_cons $ idr_Prelude.Strings.trim3_960 idr_Prelude.Strings.trim4_1073
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Strings.trim3_val_1074 <- pure (CErased)
          idr_Prelude.Strings.trim3_1075 <- store idr_Prelude.Strings.trim3_val_1074
          idr_Prelude.Strings.trim4_val_1086 <- idris_str_rev $ idr_Prelude.Strings.trim0
          idr_Prelude.Strings.trim4_1087 <- store idr_Prelude.Strings.trim4_val_1086
          idr_Prelude.Strings.trim5_val_1088 <- pure (CGrString #"")
          idr_Prelude.Strings.trim5_1089 <- store idr_Prelude.Strings.trim5_val_1088
          idr_Prelude.Strings.trim4_val_1085 <- idris_str_eq $ idr_Prelude.Strings.trim4_1087 idr_Prelude.Strings.trim5_1089
          idr_Prelude.Strings.trim4_1090 <- store idr_Prelude.Strings.trim4_val_1085
          idr_Prelude.Strings.trim4_val_1091 <- fetch idr_Prelude.Strings.trim4_1090
          idr_Prelude.Strings.trim4_val_1084 <- case idr_Prelude.Strings.trim4_val_1091 of
            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1092) ->
              case idr_Prelude.Strings.trim_cpat_LInt64_0_1092 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr_Prelude.Strings.trim4_1093 <- store idr_Prelude.Strings.trim4_val_1084
          idr_Prelude.Strings.trim5_val_1094 <- pure (Cidr_Prelude.Bool.True)
          idr_Prelude.Strings.trim5_1095 <- store idr_Prelude.Strings.trim5_val_1094
          idr_Prelude.Strings.trim4_val_1083 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim4_1093 idr_Prelude.Strings.trim5_1095
          idr_Prelude.Strings.trim4_1096 <- store idr_Prelude.Strings.trim4_val_1083
          idr_Prelude.Strings.trim4_val_1097 <- fetch idr_Prelude.Strings.trim4_1096
          idr_Prelude.Strings.trim4_val_1082 <- case idr_Prelude.Strings.trim4_val_1097 of
            (Cidr_Prelude.Basics.No) ->
              pure (CGrString #"")
            (Cidr_Prelude.Basics.Yes) ->
              idr_Prelude.Strings.trim5_val_1100 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim5_1101 <- store idr_Prelude.Strings.trim5_val_1100
              idr_Prelude.Strings.trim5_val_1099 <- idris_str_head $ idr_Prelude.Strings.trim5_1101
              idr_Prelude.Strings.trim5_1102 <- store idr_Prelude.Strings.trim5_val_1099
              idr_Prelude.Strings.trim5_val_1098 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim5_1102
              idr_Prelude.Strings.trim5_1103 <- store idr_Prelude.Strings.trim5_val_1098
              idr_Prelude.Strings.trim5_val_1104 <- fetch idr_Prelude.Strings.trim5_1103
              case idr_Prelude.Strings.trim5_val_1104 of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Strings.trim6_val_1106 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_1107 <- store idr_Prelude.Strings.trim6_val_1106
                  idr_Prelude.Strings.trim6_val_1105 <- idris_str_head $ idr_Prelude.Strings.trim6_1107
                  idr_Prelude.Strings.trim6_1108 <- store idr_Prelude.Strings.trim6_val_1105
                  idr_Prelude.Strings.trim7_val_1110 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim7_1111 <- store idr_Prelude.Strings.trim7_val_1110
                  idr_Prelude.Strings.trim7_val_1109 <- idris_str_tail $ idr_Prelude.Strings.trim7_1111
                  idr_Prelude.Strings.trim7_1112 <- store idr_Prelude.Strings.trim7_val_1109
                  idris_str_cons $ idr_Prelude.Strings.trim6_1108 idr_Prelude.Strings.trim7_1112
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Strings.trim6_val_1117 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_1118 <- store idr_Prelude.Strings.trim6_val_1117
                  idr_Prelude.Strings.trim6_val_1116 <- idris_str_tail $ idr_Prelude.Strings.trim6_1118
                  idr_Prelude.Strings.trim6_1119 <- store idr_Prelude.Strings.trim6_val_1116
                  idr_Prelude.Strings.trim7_val_1120 <- pure (CGrString #"")
                  idr_Prelude.Strings.trim7_1121 <- store idr_Prelude.Strings.trim7_val_1120
                  idr_Prelude.Strings.trim6_val_1115 <- idris_str_eq $ idr_Prelude.Strings.trim6_1119 idr_Prelude.Strings.trim7_1121
                  idr_Prelude.Strings.trim6_1122 <- store idr_Prelude.Strings.trim6_val_1115
                  idr_Prelude.Strings.trim6_val_1123 <- fetch idr_Prelude.Strings.trim6_1122
                  idr_Prelude.Strings.trim6_val_1114 <- case idr_Prelude.Strings.trim6_val_1123 of
                    (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1124) ->
                      case idr_Prelude.Strings.trim_cpat_LInt64_0_1124 of
                        0 ->
                          pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                  idr_Prelude.Strings.trim6_1125 <- store idr_Prelude.Strings.trim6_val_1114
                  idr_Prelude.Strings.trim7_val_1126 <- pure (Cidr_Prelude.Bool.True)
                  idr_Prelude.Strings.trim7_1127 <- store idr_Prelude.Strings.trim7_val_1126
                  idr_Prelude.Strings.trim6_val_1113 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim6_1125 idr_Prelude.Strings.trim7_1127
                  idr_Prelude.Strings.trim6_1128 <- store idr_Prelude.Strings.trim6_val_1113
                  idr_Prelude.Strings.trim6_val_1129 <- fetch idr_Prelude.Strings.trim6_1128
                  case idr_Prelude.Strings.trim6_val_1129 of
                    (Cidr_Prelude.Basics.No) ->
                      pure (CGrString #"")
                    (Cidr_Prelude.Basics.Yes) ->
                      idr_Prelude.Strings.trim7_val_1133 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_1134 <- store idr_Prelude.Strings.trim7_val_1133
                      idr_Prelude.Strings.trim7_val_1132 <- idris_str_tail $ idr_Prelude.Strings.trim7_1134
                      idr_Prelude.Strings.trim7_1135 <- store idr_Prelude.Strings.trim7_val_1132
                      idr_Prelude.Strings.trim7_val_1131 <- idris_str_head $ idr_Prelude.Strings.trim7_1135
                      idr_Prelude.Strings.trim7_1136 <- store idr_Prelude.Strings.trim7_val_1131
                      idr_Prelude.Strings.trim7_val_1130 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim7_1136
                      idr_Prelude.Strings.trim7_1137 <- store idr_Prelude.Strings.trim7_val_1130
                      idr_Prelude.Strings.trim7_val_1138 <- fetch idr_Prelude.Strings.trim7_1137
                      case idr_Prelude.Strings.trim7_val_1138 of
                        (Cidr_Prelude.Bool.False) ->
                          idr_Prelude.Strings.trim8_val_1141 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_1142 <- store idr_Prelude.Strings.trim8_val_1141
                          idr_Prelude.Strings.trim8_val_1140 <- idris_str_tail $ idr_Prelude.Strings.trim8_1142
                          idr_Prelude.Strings.trim8_1143 <- store idr_Prelude.Strings.trim8_val_1140
                          idr_Prelude.Strings.trim8_val_1139 <- idris_str_head $ idr_Prelude.Strings.trim8_1143
                          idr_Prelude.Strings.trim8_1144 <- store idr_Prelude.Strings.trim8_val_1139
                          idr_Prelude.Strings.trim9_val_1147 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_1148 <- store idr_Prelude.Strings.trim9_val_1147
                          idr_Prelude.Strings.trim9_val_1146 <- idris_str_tail $ idr_Prelude.Strings.trim9_1148
                          idr_Prelude.Strings.trim9_1149 <- store idr_Prelude.Strings.trim9_val_1146
                          idr_Prelude.Strings.trim9_val_1145 <- idris_str_tail $ idr_Prelude.Strings.trim9_1149
                          idr_Prelude.Strings.trim9_1150 <- store idr_Prelude.Strings.trim9_val_1145
                          idris_str_cons $ idr_Prelude.Strings.trim8_1144 idr_Prelude.Strings.trim9_1150
                        (Cidr_Prelude.Bool.True) ->
                          idr_Prelude.Strings.trim8_val_1151 <- pure (CErased)
                          idr_Prelude.Strings.trim8_1152 <- store idr_Prelude.Strings.trim8_val_1151
                          idr_Prelude.Strings.trim9_val_1159 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_1160 <- store idr_Prelude.Strings.trim9_val_1159
                          idr_Prelude.Strings.trim9_val_1158 <- idris_str_tail $ idr_Prelude.Strings.trim9_1160
                          idr_Prelude.Strings.trim9_1161 <- store idr_Prelude.Strings.trim9_val_1158
                          idr_Prelude.Strings.trim9_val_1157 <- idris_str_tail $ idr_Prelude.Strings.trim9_1161
                          idr_Prelude.Strings.trim9_1162 <- store idr_Prelude.Strings.trim9_val_1157
                          idr_Prelude.Strings.trim10_val_1163 <- pure (CGrString #"")
                          idr_Prelude.Strings.trim10_1164 <- store idr_Prelude.Strings.trim10_val_1163
                          idr_Prelude.Strings.trim9_val_1156 <- idris_str_eq $ idr_Prelude.Strings.trim9_1162 idr_Prelude.Strings.trim10_1164
                          idr_Prelude.Strings.trim9_1165 <- store idr_Prelude.Strings.trim9_val_1156
                          idr_Prelude.Strings.trim9_val_1166 <- fetch idr_Prelude.Strings.trim9_1165
                          idr_Prelude.Strings.trim9_val_1155 <- case idr_Prelude.Strings.trim9_val_1166 of
                            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1167) ->
                              case idr_Prelude.Strings.trim_cpat_LInt64_0_1167 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                          idr_Prelude.Strings.trim9_1168 <- store idr_Prelude.Strings.trim9_val_1155
                          idr_Prelude.Strings.trim10_val_1169 <- pure (Cidr_Prelude.Bool.True)
                          idr_Prelude.Strings.trim10_1170 <- store idr_Prelude.Strings.trim10_val_1169
                          idr_Prelude.Strings.trim9_val_1154 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim9_1168 idr_Prelude.Strings.trim10_1170
                          idr_Prelude.Strings.trim9_1171 <- store idr_Prelude.Strings.trim9_val_1154
                          idr_Prelude.Strings.trim9_val_1172 <- fetch idr_Prelude.Strings.trim9_1171
                          idr_Prelude.Strings.trim9_val_1153 <- case idr_Prelude.Strings.trim9_val_1172 of
                            (Cidr_Prelude.Basics.No) ->
                              pure (Cidr_Prelude.Strings.StrNil)
                            (Cidr_Prelude.Basics.Yes) ->
                              idr_Prelude.Strings.trim10_val_1176 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_1177 <- store idr_Prelude.Strings.trim10_val_1176
                              idr_Prelude.Strings.trim10_val_1175 <- idris_str_tail $ idr_Prelude.Strings.trim10_1177
                              idr_Prelude.Strings.trim10_1178 <- store idr_Prelude.Strings.trim10_val_1175
                              idr_Prelude.Strings.trim10_val_1174 <- idris_str_tail $ idr_Prelude.Strings.trim10_1178
                              idr_Prelude.Strings.trim10_1179 <- store idr_Prelude.Strings.trim10_val_1174
                              idr_Prelude.Strings.trim10_val_1173 <- idris_str_head $ idr_Prelude.Strings.trim10_1179
                              idr_Prelude.Strings.trim10_1180 <- store idr_Prelude.Strings.trim10_val_1173
                              idr_Prelude.Strings.trim11_val_1184 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim11_1185 <- store idr_Prelude.Strings.trim11_val_1184
                              idr_Prelude.Strings.trim11_val_1183 <- idris_str_tail $ idr_Prelude.Strings.trim11_1185
                              idr_Prelude.Strings.trim11_1186 <- store idr_Prelude.Strings.trim11_val_1183
                              idr_Prelude.Strings.trim11_val_1182 <- idris_str_tail $ idr_Prelude.Strings.trim11_1186
                              idr_Prelude.Strings.trim11_1187 <- store idr_Prelude.Strings.trim11_val_1182
                              idr_Prelude.Strings.trim11_val_1181 <- idris_str_tail $ idr_Prelude.Strings.trim11_1187
                              idr_Prelude.Strings.trim11_1188 <- store idr_Prelude.Strings.trim11_val_1181
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1180 idr_Prelude.Strings.trim11_1188)
                          idr_Prelude.Strings.trim9_1189 <- store idr_Prelude.Strings.trim9_val_1153
                          idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim8_1152 idr_Prelude.Strings.trim9_1189
          idr_Prelude.Strings.trim4_1190 <- store idr_Prelude.Strings.trim4_val_1082
          idr_Prelude.Strings.trim4_val_1081 <- idris_str_rev $ idr_Prelude.Strings.trim4_1190
          idr_Prelude.Strings.trim4_1191 <- store idr_Prelude.Strings.trim4_val_1081
          idr_Prelude.Strings.trim4_val_1080 <- idris_str_tail $ idr_Prelude.Strings.trim4_1191
          idr_Prelude.Strings.trim4_1192 <- store idr_Prelude.Strings.trim4_val_1080
          idr_Prelude.Strings.trim5_val_1193 <- pure (CGrString #"")
          idr_Prelude.Strings.trim5_1194 <- store idr_Prelude.Strings.trim5_val_1193
          idr_Prelude.Strings.trim4_val_1079 <- idris_str_eq $ idr_Prelude.Strings.trim4_1192 idr_Prelude.Strings.trim5_1194
          idr_Prelude.Strings.trim4_1195 <- store idr_Prelude.Strings.trim4_val_1079
          idr_Prelude.Strings.trim4_val_1196 <- fetch idr_Prelude.Strings.trim4_1195
          idr_Prelude.Strings.trim4_val_1078 <- case idr_Prelude.Strings.trim4_val_1196 of
            (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1197) ->
              case idr_Prelude.Strings.trim_cpat_LInt64_0_1197 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr_Prelude.Strings.trim4_1198 <- store idr_Prelude.Strings.trim4_val_1078
          idr_Prelude.Strings.trim5_val_1199 <- pure (Cidr_Prelude.Bool.True)
          idr_Prelude.Strings.trim5_1200 <- store idr_Prelude.Strings.trim5_val_1199
          idr_Prelude.Strings.trim4_val_1077 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim4_1198 idr_Prelude.Strings.trim5_1200
          idr_Prelude.Strings.trim4_1201 <- store idr_Prelude.Strings.trim4_val_1077
          idr_Prelude.Strings.trim4_val_1202 <- fetch idr_Prelude.Strings.trim4_1201
          idr_Prelude.Strings.trim4_val_1076 <- case idr_Prelude.Strings.trim4_val_1202 of
            (Cidr_Prelude.Basics.No) ->
              pure (Cidr_Prelude.Strings.StrNil)
            (Cidr_Prelude.Basics.Yes) ->
              idr_Prelude.Strings.trim5_val_1210 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim5_1211 <- store idr_Prelude.Strings.trim5_val_1210
              idr_Prelude.Strings.trim6_val_1212 <- pure (CGrString #"")
              idr_Prelude.Strings.trim6_1213 <- store idr_Prelude.Strings.trim6_val_1212
              idr_Prelude.Strings.trim5_val_1209 <- idris_str_eq $ idr_Prelude.Strings.trim5_1211 idr_Prelude.Strings.trim6_1213
              idr_Prelude.Strings.trim5_1214 <- store idr_Prelude.Strings.trim5_val_1209
              idr_Prelude.Strings.trim5_val_1215 <- fetch idr_Prelude.Strings.trim5_1214
              idr_Prelude.Strings.trim5_val_1208 <- case idr_Prelude.Strings.trim5_val_1215 of
                (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1216) ->
                  case idr_Prelude.Strings.trim_cpat_LInt64_0_1216 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
              idr_Prelude.Strings.trim5_1217 <- store idr_Prelude.Strings.trim5_val_1208
              idr_Prelude.Strings.trim6_val_1218 <- pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Strings.trim6_1219 <- store idr_Prelude.Strings.trim6_val_1218
              idr_Prelude.Strings.trim5_val_1207 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim5_1217 idr_Prelude.Strings.trim6_1219
              idr_Prelude.Strings.trim5_1220 <- store idr_Prelude.Strings.trim5_val_1207
              idr_Prelude.Strings.trim5_val_1221 <- fetch idr_Prelude.Strings.trim5_1220
              idr_Prelude.Strings.trim5_val_1206 <- case idr_Prelude.Strings.trim5_val_1221 of
                (Cidr_Prelude.Basics.No) ->
                  pure (CGrString #"")
                (Cidr_Prelude.Basics.Yes) ->
                  idr_Prelude.Strings.trim6_val_1224 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim6_1225 <- store idr_Prelude.Strings.trim6_val_1224
                  idr_Prelude.Strings.trim6_val_1223 <- idris_str_head $ idr_Prelude.Strings.trim6_1225
                  idr_Prelude.Strings.trim6_1226 <- store idr_Prelude.Strings.trim6_val_1223
                  idr_Prelude.Strings.trim6_val_1222 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim6_1226
                  idr_Prelude.Strings.trim6_1227 <- store idr_Prelude.Strings.trim6_val_1222
                  idr_Prelude.Strings.trim6_val_1228 <- fetch idr_Prelude.Strings.trim6_1227
                  case idr_Prelude.Strings.trim6_val_1228 of
                    (Cidr_Prelude.Bool.False) ->
                      idr_Prelude.Strings.trim7_val_1230 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_1231 <- store idr_Prelude.Strings.trim7_val_1230
                      idr_Prelude.Strings.trim7_val_1229 <- idris_str_head $ idr_Prelude.Strings.trim7_1231
                      idr_Prelude.Strings.trim7_1232 <- store idr_Prelude.Strings.trim7_val_1229
                      idr_Prelude.Strings.trim8_val_1234 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim8_1235 <- store idr_Prelude.Strings.trim8_val_1234
                      idr_Prelude.Strings.trim8_val_1233 <- idris_str_tail $ idr_Prelude.Strings.trim8_1235
                      idr_Prelude.Strings.trim8_1236 <- store idr_Prelude.Strings.trim8_val_1233
                      idris_str_cons $ idr_Prelude.Strings.trim7_1232 idr_Prelude.Strings.trim8_1236
                    (Cidr_Prelude.Bool.True) ->
                      idr_Prelude.Strings.trim7_val_1241 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim7_1242 <- store idr_Prelude.Strings.trim7_val_1241
                      idr_Prelude.Strings.trim7_val_1240 <- idris_str_tail $ idr_Prelude.Strings.trim7_1242
                      idr_Prelude.Strings.trim7_1243 <- store idr_Prelude.Strings.trim7_val_1240
                      idr_Prelude.Strings.trim8_val_1244 <- pure (CGrString #"")
                      idr_Prelude.Strings.trim8_1245 <- store idr_Prelude.Strings.trim8_val_1244
                      idr_Prelude.Strings.trim7_val_1239 <- idris_str_eq $ idr_Prelude.Strings.trim7_1243 idr_Prelude.Strings.trim8_1245
                      idr_Prelude.Strings.trim7_1246 <- store idr_Prelude.Strings.trim7_val_1239
                      idr_Prelude.Strings.trim7_val_1247 <- fetch idr_Prelude.Strings.trim7_1246
                      idr_Prelude.Strings.trim7_val_1238 <- case idr_Prelude.Strings.trim7_val_1247 of
                        (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1248) ->
                          case idr_Prelude.Strings.trim_cpat_LInt64_0_1248 of
                            0 ->
                              pure (Cidr_Prelude.Bool.True)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                      idr_Prelude.Strings.trim7_1249 <- store idr_Prelude.Strings.trim7_val_1238
                      idr_Prelude.Strings.trim8_val_1250 <- pure (Cidr_Prelude.Bool.True)
                      idr_Prelude.Strings.trim8_1251 <- store idr_Prelude.Strings.trim8_val_1250
                      idr_Prelude.Strings.trim7_val_1237 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim7_1249 idr_Prelude.Strings.trim8_1251
                      idr_Prelude.Strings.trim7_1252 <- store idr_Prelude.Strings.trim7_val_1237
                      idr_Prelude.Strings.trim7_val_1253 <- fetch idr_Prelude.Strings.trim7_1252
                      case idr_Prelude.Strings.trim7_val_1253 of
                        (Cidr_Prelude.Basics.No) ->
                          pure (CGrString #"")
                        (Cidr_Prelude.Basics.Yes) ->
                          idr_Prelude.Strings.trim8_val_1257 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim8_1258 <- store idr_Prelude.Strings.trim8_val_1257
                          idr_Prelude.Strings.trim8_val_1256 <- idris_str_tail $ idr_Prelude.Strings.trim8_1258
                          idr_Prelude.Strings.trim8_1259 <- store idr_Prelude.Strings.trim8_val_1256
                          idr_Prelude.Strings.trim8_val_1255 <- idris_str_head $ idr_Prelude.Strings.trim8_1259
                          idr_Prelude.Strings.trim8_1260 <- store idr_Prelude.Strings.trim8_val_1255
                          idr_Prelude.Strings.trim8_val_1254 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim8_1260
                          idr_Prelude.Strings.trim8_1261 <- store idr_Prelude.Strings.trim8_val_1254
                          idr_Prelude.Strings.trim8_val_1262 <- fetch idr_Prelude.Strings.trim8_1261
                          case idr_Prelude.Strings.trim8_val_1262 of
                            (Cidr_Prelude.Bool.False) ->
                              idr_Prelude.Strings.trim9_val_1265 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim9_1266 <- store idr_Prelude.Strings.trim9_val_1265
                              idr_Prelude.Strings.trim9_val_1264 <- idris_str_tail $ idr_Prelude.Strings.trim9_1266
                              idr_Prelude.Strings.trim9_1267 <- store idr_Prelude.Strings.trim9_val_1264
                              idr_Prelude.Strings.trim9_val_1263 <- idris_str_head $ idr_Prelude.Strings.trim9_1267
                              idr_Prelude.Strings.trim9_1268 <- store idr_Prelude.Strings.trim9_val_1263
                              idr_Prelude.Strings.trim10_val_1271 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_1272 <- store idr_Prelude.Strings.trim10_val_1271
                              idr_Prelude.Strings.trim10_val_1270 <- idris_str_tail $ idr_Prelude.Strings.trim10_1272
                              idr_Prelude.Strings.trim10_1273 <- store idr_Prelude.Strings.trim10_val_1270
                              idr_Prelude.Strings.trim10_val_1269 <- idris_str_tail $ idr_Prelude.Strings.trim10_1273
                              idr_Prelude.Strings.trim10_1274 <- store idr_Prelude.Strings.trim10_val_1269
                              idris_str_cons $ idr_Prelude.Strings.trim9_1268 idr_Prelude.Strings.trim10_1274
                            (Cidr_Prelude.Bool.True) ->
                              idr_Prelude.Strings.trim9_val_1275 <- pure (CErased)
                              idr_Prelude.Strings.trim9_1276 <- store idr_Prelude.Strings.trim9_val_1275
                              idr_Prelude.Strings.trim10_val_1283 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_1284 <- store idr_Prelude.Strings.trim10_val_1283
                              idr_Prelude.Strings.trim10_val_1282 <- idris_str_tail $ idr_Prelude.Strings.trim10_1284
                              idr_Prelude.Strings.trim10_1285 <- store idr_Prelude.Strings.trim10_val_1282
                              idr_Prelude.Strings.trim10_val_1281 <- idris_str_tail $ idr_Prelude.Strings.trim10_1285
                              idr_Prelude.Strings.trim10_1286 <- store idr_Prelude.Strings.trim10_val_1281
                              idr_Prelude.Strings.trim11_val_1287 <- pure (CGrString #"")
                              idr_Prelude.Strings.trim11_1288 <- store idr_Prelude.Strings.trim11_val_1287
                              idr_Prelude.Strings.trim10_val_1280 <- idris_str_eq $ idr_Prelude.Strings.trim10_1286 idr_Prelude.Strings.trim11_1288
                              idr_Prelude.Strings.trim10_1289 <- store idr_Prelude.Strings.trim10_val_1280
                              idr_Prelude.Strings.trim10_val_1290 <- fetch idr_Prelude.Strings.trim10_1289
                              idr_Prelude.Strings.trim10_val_1279 <- case idr_Prelude.Strings.trim10_val_1290 of
                                (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1291) ->
                                  case idr_Prelude.Strings.trim_cpat_LInt64_0_1291 of
                                    0 ->
                                      pure (Cidr_Prelude.Bool.True)
                                    #default ->
                                      pure (Cidr_Prelude.Bool.False)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                              idr_Prelude.Strings.trim10_1292 <- store idr_Prelude.Strings.trim10_val_1279
                              idr_Prelude.Strings.trim11_val_1293 <- pure (Cidr_Prelude.Bool.True)
                              idr_Prelude.Strings.trim11_1294 <- store idr_Prelude.Strings.trim11_val_1293
                              idr_Prelude.Strings.trim10_val_1278 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim10_1292 idr_Prelude.Strings.trim11_1294
                              idr_Prelude.Strings.trim10_1295 <- store idr_Prelude.Strings.trim10_val_1278
                              idr_Prelude.Strings.trim10_val_1296 <- fetch idr_Prelude.Strings.trim10_1295
                              idr_Prelude.Strings.trim10_val_1277 <- case idr_Prelude.Strings.trim10_val_1296 of
                                (Cidr_Prelude.Basics.No) ->
                                  pure (Cidr_Prelude.Strings.StrNil)
                                (Cidr_Prelude.Basics.Yes) ->
                                  idr_Prelude.Strings.trim11_val_1300 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim11_1301 <- store idr_Prelude.Strings.trim11_val_1300
                                  idr_Prelude.Strings.trim11_val_1299 <- idris_str_tail $ idr_Prelude.Strings.trim11_1301
                                  idr_Prelude.Strings.trim11_1302 <- store idr_Prelude.Strings.trim11_val_1299
                                  idr_Prelude.Strings.trim11_val_1298 <- idris_str_tail $ idr_Prelude.Strings.trim11_1302
                                  idr_Prelude.Strings.trim11_1303 <- store idr_Prelude.Strings.trim11_val_1298
                                  idr_Prelude.Strings.trim11_val_1297 <- idris_str_head $ idr_Prelude.Strings.trim11_1303
                                  idr_Prelude.Strings.trim11_1304 <- store idr_Prelude.Strings.trim11_val_1297
                                  idr_Prelude.Strings.trim12_val_1308 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim12_1309 <- store idr_Prelude.Strings.trim12_val_1308
                                  idr_Prelude.Strings.trim12_val_1307 <- idris_str_tail $ idr_Prelude.Strings.trim12_1309
                                  idr_Prelude.Strings.trim12_1310 <- store idr_Prelude.Strings.trim12_val_1307
                                  idr_Prelude.Strings.trim12_val_1306 <- idris_str_tail $ idr_Prelude.Strings.trim12_1310
                                  idr_Prelude.Strings.trim12_1311 <- store idr_Prelude.Strings.trim12_val_1306
                                  idr_Prelude.Strings.trim12_val_1305 <- idris_str_tail $ idr_Prelude.Strings.trim12_1311
                                  idr_Prelude.Strings.trim12_1312 <- store idr_Prelude.Strings.trim12_val_1305
                                  pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_1304 idr_Prelude.Strings.trim12_1312)
                              idr_Prelude.Strings.trim10_1313 <- store idr_Prelude.Strings.trim10_val_1277
                              idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim9_1276 idr_Prelude.Strings.trim10_1313
              idr_Prelude.Strings.trim5_1314 <- store idr_Prelude.Strings.trim5_val_1206
              idr_Prelude.Strings.trim5_val_1205 <- idris_str_rev $ idr_Prelude.Strings.trim5_1314
              idr_Prelude.Strings.trim5_1315 <- store idr_Prelude.Strings.trim5_val_1205
              idr_Prelude.Strings.trim5_val_1204 <- idris_str_tail $ idr_Prelude.Strings.trim5_1315
              idr_Prelude.Strings.trim5_1316 <- store idr_Prelude.Strings.trim5_val_1204
              idr_Prelude.Strings.trim5_val_1203 <- idris_str_head $ idr_Prelude.Strings.trim5_1316
              idr_Prelude.Strings.trim5_1317 <- store idr_Prelude.Strings.trim5_val_1203
              idr_Prelude.Strings.trim6_val_1325 <- idris_str_rev $ idr_Prelude.Strings.trim0
              idr_Prelude.Strings.trim6_1326 <- store idr_Prelude.Strings.trim6_val_1325
              idr_Prelude.Strings.trim7_val_1327 <- pure (CGrString #"")
              idr_Prelude.Strings.trim7_1328 <- store idr_Prelude.Strings.trim7_val_1327
              idr_Prelude.Strings.trim6_val_1324 <- idris_str_eq $ idr_Prelude.Strings.trim6_1326 idr_Prelude.Strings.trim7_1328
              idr_Prelude.Strings.trim6_1329 <- store idr_Prelude.Strings.trim6_val_1324
              idr_Prelude.Strings.trim6_val_1330 <- fetch idr_Prelude.Strings.trim6_1329
              idr_Prelude.Strings.trim6_val_1323 <- case idr_Prelude.Strings.trim6_val_1330 of
                (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1331) ->
                  case idr_Prelude.Strings.trim_cpat_LInt64_0_1331 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
              idr_Prelude.Strings.trim6_1332 <- store idr_Prelude.Strings.trim6_val_1323
              idr_Prelude.Strings.trim7_val_1333 <- pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Strings.trim7_1334 <- store idr_Prelude.Strings.trim7_val_1333
              idr_Prelude.Strings.trim6_val_1322 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim6_1332 idr_Prelude.Strings.trim7_1334
              idr_Prelude.Strings.trim6_1335 <- store idr_Prelude.Strings.trim6_val_1322
              idr_Prelude.Strings.trim6_val_1336 <- fetch idr_Prelude.Strings.trim6_1335
              idr_Prelude.Strings.trim6_val_1321 <- case idr_Prelude.Strings.trim6_val_1336 of
                (Cidr_Prelude.Basics.No) ->
                  pure (CGrString #"")
                (Cidr_Prelude.Basics.Yes) ->
                  idr_Prelude.Strings.trim7_val_1339 <- idris_str_rev $ idr_Prelude.Strings.trim0
                  idr_Prelude.Strings.trim7_1340 <- store idr_Prelude.Strings.trim7_val_1339
                  idr_Prelude.Strings.trim7_val_1338 <- idris_str_head $ idr_Prelude.Strings.trim7_1340
                  idr_Prelude.Strings.trim7_1341 <- store idr_Prelude.Strings.trim7_val_1338
                  idr_Prelude.Strings.trim7_val_1337 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim7_1341
                  idr_Prelude.Strings.trim7_1342 <- store idr_Prelude.Strings.trim7_val_1337
                  idr_Prelude.Strings.trim7_val_1343 <- fetch idr_Prelude.Strings.trim7_1342
                  case idr_Prelude.Strings.trim7_val_1343 of
                    (Cidr_Prelude.Bool.False) ->
                      idr_Prelude.Strings.trim8_val_1345 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim8_1346 <- store idr_Prelude.Strings.trim8_val_1345
                      idr_Prelude.Strings.trim8_val_1344 <- idris_str_head $ idr_Prelude.Strings.trim8_1346
                      idr_Prelude.Strings.trim8_1347 <- store idr_Prelude.Strings.trim8_val_1344
                      idr_Prelude.Strings.trim9_val_1349 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim9_1350 <- store idr_Prelude.Strings.trim9_val_1349
                      idr_Prelude.Strings.trim9_val_1348 <- idris_str_tail $ idr_Prelude.Strings.trim9_1350
                      idr_Prelude.Strings.trim9_1351 <- store idr_Prelude.Strings.trim9_val_1348
                      idris_str_cons $ idr_Prelude.Strings.trim8_1347 idr_Prelude.Strings.trim9_1351
                    (Cidr_Prelude.Bool.True) ->
                      idr_Prelude.Strings.trim8_val_1356 <- idris_str_rev $ idr_Prelude.Strings.trim0
                      idr_Prelude.Strings.trim8_1357 <- store idr_Prelude.Strings.trim8_val_1356
                      idr_Prelude.Strings.trim8_val_1355 <- idris_str_tail $ idr_Prelude.Strings.trim8_1357
                      idr_Prelude.Strings.trim8_1358 <- store idr_Prelude.Strings.trim8_val_1355
                      idr_Prelude.Strings.trim9_val_1359 <- pure (CGrString #"")
                      idr_Prelude.Strings.trim9_1360 <- store idr_Prelude.Strings.trim9_val_1359
                      idr_Prelude.Strings.trim8_val_1354 <- idris_str_eq $ idr_Prelude.Strings.trim8_1358 idr_Prelude.Strings.trim9_1360
                      idr_Prelude.Strings.trim8_1361 <- store idr_Prelude.Strings.trim8_val_1354
                      idr_Prelude.Strings.trim8_val_1362 <- fetch idr_Prelude.Strings.trim8_1361
                      idr_Prelude.Strings.trim8_val_1353 <- case idr_Prelude.Strings.trim8_val_1362 of
                        (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1363) ->
                          case idr_Prelude.Strings.trim_cpat_LInt64_0_1363 of
                            0 ->
                              pure (Cidr_Prelude.Bool.True)
                            #default ->
                              pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure (Cidr_Prelude.Bool.False)
                      idr_Prelude.Strings.trim8_1364 <- store idr_Prelude.Strings.trim8_val_1353
                      idr_Prelude.Strings.trim9_val_1365 <- pure (Cidr_Prelude.Bool.True)
                      idr_Prelude.Strings.trim9_1366 <- store idr_Prelude.Strings.trim9_val_1365
                      idr_Prelude.Strings.trim8_val_1352 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim8_1364 idr_Prelude.Strings.trim9_1366
                      idr_Prelude.Strings.trim8_1367 <- store idr_Prelude.Strings.trim8_val_1352
                      idr_Prelude.Strings.trim8_val_1368 <- fetch idr_Prelude.Strings.trim8_1367
                      case idr_Prelude.Strings.trim8_val_1368 of
                        (Cidr_Prelude.Basics.No) ->
                          pure (CGrString #"")
                        (Cidr_Prelude.Basics.Yes) ->
                          idr_Prelude.Strings.trim9_val_1372 <- idris_str_rev $ idr_Prelude.Strings.trim0
                          idr_Prelude.Strings.trim9_1373 <- store idr_Prelude.Strings.trim9_val_1372
                          idr_Prelude.Strings.trim9_val_1371 <- idris_str_tail $ idr_Prelude.Strings.trim9_1373
                          idr_Prelude.Strings.trim9_1374 <- store idr_Prelude.Strings.trim9_val_1371
                          idr_Prelude.Strings.trim9_val_1370 <- idris_str_head $ idr_Prelude.Strings.trim9_1374
                          idr_Prelude.Strings.trim9_1375 <- store idr_Prelude.Strings.trim9_val_1370
                          idr_Prelude.Strings.trim9_val_1369 <- idr_Prelude.Chars.isSpace $ idr_Prelude.Strings.trim9_1375
                          idr_Prelude.Strings.trim9_1376 <- store idr_Prelude.Strings.trim9_val_1369
                          idr_Prelude.Strings.trim9_val_1377 <- fetch idr_Prelude.Strings.trim9_1376
                          case idr_Prelude.Strings.trim9_val_1377 of
                            (Cidr_Prelude.Bool.False) ->
                              idr_Prelude.Strings.trim10_val_1380 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim10_1381 <- store idr_Prelude.Strings.trim10_val_1380
                              idr_Prelude.Strings.trim10_val_1379 <- idris_str_tail $ idr_Prelude.Strings.trim10_1381
                              idr_Prelude.Strings.trim10_1382 <- store idr_Prelude.Strings.trim10_val_1379
                              idr_Prelude.Strings.trim10_val_1378 <- idris_str_head $ idr_Prelude.Strings.trim10_1382
                              idr_Prelude.Strings.trim10_1383 <- store idr_Prelude.Strings.trim10_val_1378
                              idr_Prelude.Strings.trim11_val_1386 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim11_1387 <- store idr_Prelude.Strings.trim11_val_1386
                              idr_Prelude.Strings.trim11_val_1385 <- idris_str_tail $ idr_Prelude.Strings.trim11_1387
                              idr_Prelude.Strings.trim11_1388 <- store idr_Prelude.Strings.trim11_val_1385
                              idr_Prelude.Strings.trim11_val_1384 <- idris_str_tail $ idr_Prelude.Strings.trim11_1388
                              idr_Prelude.Strings.trim11_1389 <- store idr_Prelude.Strings.trim11_val_1384
                              idris_str_cons $ idr_Prelude.Strings.trim10_1383 idr_Prelude.Strings.trim11_1389
                            (Cidr_Prelude.Bool.True) ->
                              idr_Prelude.Strings.trim10_val_1390 <- pure (CErased)
                              idr_Prelude.Strings.trim10_1391 <- store idr_Prelude.Strings.trim10_val_1390
                              idr_Prelude.Strings.trim11_val_1398 <- idris_str_rev $ idr_Prelude.Strings.trim0
                              idr_Prelude.Strings.trim11_1399 <- store idr_Prelude.Strings.trim11_val_1398
                              idr_Prelude.Strings.trim11_val_1397 <- idris_str_tail $ idr_Prelude.Strings.trim11_1399
                              idr_Prelude.Strings.trim11_1400 <- store idr_Prelude.Strings.trim11_val_1397
                              idr_Prelude.Strings.trim11_val_1396 <- idris_str_tail $ idr_Prelude.Strings.trim11_1400
                              idr_Prelude.Strings.trim11_1401 <- store idr_Prelude.Strings.trim11_val_1396
                              idr_Prelude.Strings.trim12_val_1402 <- pure (CGrString #"")
                              idr_Prelude.Strings.trim12_1403 <- store idr_Prelude.Strings.trim12_val_1402
                              idr_Prelude.Strings.trim11_val_1395 <- idris_str_eq $ idr_Prelude.Strings.trim11_1401 idr_Prelude.Strings.trim12_1403
                              idr_Prelude.Strings.trim11_1404 <- store idr_Prelude.Strings.trim11_val_1395
                              idr_Prelude.Strings.trim11_val_1405 <- fetch idr_Prelude.Strings.trim11_1404
                              idr_Prelude.Strings.trim11_val_1394 <- case idr_Prelude.Strings.trim11_val_1405 of
                                (CGrInt idr_Prelude.Strings.trim_cpat_LInt64_0_1406) ->
                                  case idr_Prelude.Strings.trim_cpat_LInt64_0_1406 of
                                    0 ->
                                      pure (Cidr_Prelude.Bool.True)
                                    #default ->
                                      pure (Cidr_Prelude.Bool.False)
                                #default ->
                                  pure (Cidr_Prelude.Bool.False)
                              idr_Prelude.Strings.trim11_1407 <- store idr_Prelude.Strings.trim11_val_1394
                              idr_Prelude.Strings.trim12_val_1408 <- pure (Cidr_Prelude.Bool.True)
                              idr_Prelude.Strings.trim12_1409 <- store idr_Prelude.Strings.trim12_val_1408
                              idr_Prelude.Strings.trim11_val_1393 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.trim11_1407 idr_Prelude.Strings.trim12_1409
                              idr_Prelude.Strings.trim11_1410 <- store idr_Prelude.Strings.trim11_val_1393
                              idr_Prelude.Strings.trim11_val_1411 <- fetch idr_Prelude.Strings.trim11_1410
                              idr_Prelude.Strings.trim11_val_1392 <- case idr_Prelude.Strings.trim11_val_1411 of
                                (Cidr_Prelude.Basics.No) ->
                                  pure (Cidr_Prelude.Strings.StrNil)
                                (Cidr_Prelude.Basics.Yes) ->
                                  idr_Prelude.Strings.trim12_val_1415 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim12_1416 <- store idr_Prelude.Strings.trim12_val_1415
                                  idr_Prelude.Strings.trim12_val_1414 <- idris_str_tail $ idr_Prelude.Strings.trim12_1416
                                  idr_Prelude.Strings.trim12_1417 <- store idr_Prelude.Strings.trim12_val_1414
                                  idr_Prelude.Strings.trim12_val_1413 <- idris_str_tail $ idr_Prelude.Strings.trim12_1417
                                  idr_Prelude.Strings.trim12_1418 <- store idr_Prelude.Strings.trim12_val_1413
                                  idr_Prelude.Strings.trim12_val_1412 <- idris_str_head $ idr_Prelude.Strings.trim12_1418
                                  idr_Prelude.Strings.trim12_1419 <- store idr_Prelude.Strings.trim12_val_1412
                                  idr_Prelude.Strings.trim13_val_1422 <- idris_str_rev $ idr_Prelude.Strings.trim0
                                  idr_Prelude.Strings.trim13 <- store idr_Prelude.Strings.trim13_val_1422
                                  idr_Prelude.Strings.trim13_val_1421 <- idris_str_tail $ idr_Prelude.Strings.trim13
                                  idr_Prelude.Strings.trim13_1423 <- store idr_Prelude.Strings.trim13_val_1421
                                  idr_Prelude.Strings.trim13_val_1420 <- idris_str_tail $ idr_Prelude.Strings.trim13_1423
                                  idr_Prelude.Strings.trim13_1424 <- store idr_Prelude.Strings.trim13_val_1420
                                  idr_Prelude.Strings.trim13_val <- idris_str_tail $ idr_Prelude.Strings.trim13_1424
                                  idr_Prelude.Strings.trim13_1425 <- store idr_Prelude.Strings.trim13_val
                                  pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim12_1419 idr_Prelude.Strings.trim13_1425)
                              idr_Prelude.Strings.trim11_1426 <- store idr_Prelude.Strings.trim11_val_1392
                              idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim10_1391 idr_Prelude.Strings.trim11_1426
              idr_Prelude.Strings.trim6_1427 <- store idr_Prelude.Strings.trim6_val_1321
              idr_Prelude.Strings.trim6_val_1320 <- idris_str_rev $ idr_Prelude.Strings.trim6_1427
              idr_Prelude.Strings.trim6_1428 <- store idr_Prelude.Strings.trim6_val_1320
              idr_Prelude.Strings.trim6_val_1319 <- idris_str_tail $ idr_Prelude.Strings.trim6_1428
              idr_Prelude.Strings.trim6_1429 <- store idr_Prelude.Strings.trim6_val_1319
              idr_Prelude.Strings.trim6_val_1318 <- idris_str_tail $ idr_Prelude.Strings.trim6_1429
              idr_Prelude.Strings.trim6_1430 <- store idr_Prelude.Strings.trim6_val_1318
              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim5_1317 idr_Prelude.Strings.trim6_1430)
          idr_Prelude.Strings.trim4_1431 <- store idr_Prelude.Strings.trim4_val_1076
          idr__Prelude.Strings.ltrim_with_55 $ idr_Prelude.Strings.trim3_1075 idr_Prelude.Strings.trim4_1431

idr_Prelude.Strings.unpack idr_Prelude.Strings.unpack0 =
  idr_Prelude.Strings.unpack1_val_1434 <- pure (CGrString #"")
  idr_Prelude.Strings.unpack1 <- store idr_Prelude.Strings.unpack1_val_1434
  idr_Prelude.Strings.unpack1_val_1433 <- idris_str_eq $ idr_Prelude.Strings.unpack0 idr_Prelude.Strings.unpack1
  idr_Prelude.Strings.unpack1_1435 <- store idr_Prelude.Strings.unpack1_val_1433
  idr_Prelude.Strings.unpack1_val_1436 <- fetch idr_Prelude.Strings.unpack1_1435
  idr_Prelude.Strings.unpack1_val_1432 <- case idr_Prelude.Strings.unpack1_val_1436 of
    (CGrInt idr_Prelude.Strings.unpack_cpat_LInt64_0) ->
      case idr_Prelude.Strings.unpack_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Strings.unpack1_1437 <- store idr_Prelude.Strings.unpack1_val_1432
  idr_Prelude.Strings.unpack2_val <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.unpack2 <- store idr_Prelude.Strings.unpack2_val
  idr_Prelude.Strings.unpack1_val <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.unpack1_1437 idr_Prelude.Strings.unpack2
  idr_Prelude.Strings.unpack1_1438 <- store idr_Prelude.Strings.unpack1_val
  idr_Prelude.Strings.unpack1_val_1439 <- fetch idr_Prelude.Strings.unpack1_1438
  case idr_Prelude.Strings.unpack1_val_1439 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      idr_Prelude.Strings.unpack2_val_1440 <- idris_str_head $ idr_Prelude.Strings.unpack0
      idr_Prelude.Strings.unpack2_1441 <- store idr_Prelude.Strings.unpack2_val_1440
      idr_Prelude.Strings.unpack3_val_1442 <- idris_str_tail $ idr_Prelude.Strings.unpack0
      idr_Prelude.Strings.unpack3 <- store idr_Prelude.Strings.unpack3_val_1442
      idr_Prelude.Strings.unpack3_val <- idr_Prelude.Strings.unpack $ idr_Prelude.Strings.unpack3
      idr_Prelude.Strings.unpack3_1443 <- store idr_Prelude.Strings.unpack3_val
      pure (Cidr_Prelude.List.:: idr_Prelude.Strings.unpack2_1441 idr_Prelude.Strings.unpack3_1443)

idr_unsafePerformPrimIO =
  pure (CErased)

idr_world idr_world0 =
  fetch idr_world0

"idr_Prelude.Bool.||" "idr_Prelude.Bool.||0" "idr_Prelude.Bool.||1" =
  "idr_Prelude.Bool.||0_val" <- fetch "idr_Prelude.Bool.||0"
  case "idr_Prelude.Bool.||0_val" of
    (Cidr_Prelude.Bool.False) ->
      "idr_{EVAL_0}" $ "idr_Prelude.Bool.||1"
    (Cidr_Prelude.Bool.True) ->
      fetch "idr_Prelude.Bool.||0"

"idr_{APPLY_0}" "idr_{APPLY_0}0" "idr_{APPLY_0}1" =
  "idr_{APPLY_0}0_val" <- fetch "idr_{APPLY_0}0"
  case "idr_{APPLY_0}0_val" of
    (C"idr_{U_Data.Vect.{foldrImpl_1}_1}" "idr_{APPLY_0}2" "idr_{APPLY_0}3" "idr_{APPLY_0}4") ->
      "idr_Data.Vect.{foldrImpl_1}" $ "idr_{APPLY_0}2" "idr_{APPLY_0}3" "idr_{APPLY_0}4" "idr_{APPLY_0}1"
    (C"idr_{U_Main.{adder_0}_1}" "idr_{APPLY_0}2_1444" "idr_{APPLY_0}3_1445" "idr_{APPLY_0}4_1446") ->
      "idr_Main.{adder_0}" $ "idr_{APPLY_0}2_1444" "idr_{APPLY_0}3_1445" "idr_{APPLY_0}4_1446" "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_2}_1}") ->
      "idr_Main.{main_2}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_3}_1}") ->
      "idr_Main.{main_3}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_4}_1}") ->
      "idr_Main.{main_4}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_6}_1}") ->
      "idr_Main.{main_6}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_8}_1}") ->
      "idr_Main.{main_8}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_9}_1}" "idr_{APPLY_0}2_1447") ->
      "idr_Main.{main_9}" $ "idr_{APPLY_0}2_1447" "idr_{APPLY_0}1"
    (C"idr_{U_Main.{printFmt_14}_1}" "idr_{APPLY_0}2_1448" "idr_{APPLY_0}3_1449") ->
      "idr_Main.{printFmt_14}" $ "idr_{APPLY_0}2_1448" "idr_{APPLY_0}3_1449" "idr_{APPLY_0}1"
    (C"idr_{U_Main.{printFmt_15}_1}" "idr_{APPLY_0}2_1450" "idr_{APPLY_0}3_1451") ->
      "idr_Main.{printFmt_15}" $ "idr_{APPLY_0}2_1450" "idr_{APPLY_0}3_1451" "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Chars.isDigit_1}") ->
      idr_Prelude.Chars.isDigit $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.protectEsc_1}" "idr_{APPLY_0}2_1452" "idr_{APPLY_0}3_1453") ->
      idr_Prelude.Show.protectEsc $ "idr_{APPLY_0}2_1452" "idr_{APPLY_0}3_1453" "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}" "idr_{APPLY_0}2_1454") ->
      "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}" $ "idr_{APPLY_0}2_1454" "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}") ->
      "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_16}_1}") ->
      "idr_Prelude.Show.{showLitChar_16}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_17}_1}") ->
      "idr_Prelude.Show.{showLitChar_17}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_18}_1}") ->
      "idr_Prelude.Show.{showLitChar_18}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_19}_1}") ->
      "idr_Prelude.Show.{showLitChar_19}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_20}_1}") ->
      "idr_Prelude.Show.{showLitChar_20}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_21}_1}") ->
      "idr_Prelude.Show.{showLitChar_21}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_22}_1}") ->
      "idr_Prelude.Show.{showLitChar_22}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_23}_1}") ->
      "idr_Prelude.Show.{showLitChar_23}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_24}_1}") ->
      "idr_Prelude.Show.{showLitChar_24}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_25}_1}") ->
      "idr_Prelude.Show.{showLitChar_25}" $ "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" "idr_{APPLY_0}2_1455") ->
      "idr_Prelude.Show.{showLitChar_26}" $ "idr_{APPLY_0}2_1455" "idr_{APPLY_0}1"
    (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" "idr_{APPLY_0}2_1456") ->
      "idr_Prelude.Show.{showLitChar_27}" $ "idr_{APPLY_0}2_1456" "idr_{APPLY_0}1"
    (C"idr_{U_prim__floatToStr_1}") ->
      idr_prim__floatToStr $ "idr_{APPLY_0}1"
    (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_1457") ->
      idr_prim__strCons $ "idr_{APPLY_0}2_1457" "idr_{APPLY_0}1"
    (C"idr_{U_prim__toStrInt_1}") ->
      idr_prim__toStrInt $ "idr_{APPLY_0}1"
    (C"idr_{U_Main.{main_9}_2}") ->
      pure (C"idr_{U_Main.{main_9}_1}" "idr_{APPLY_0}1")
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}") ->
      pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}" "idr_{APPLY_0}1")
    #default ->
      pure (CErased)

"idr_{APPLY2_0}" "idr_{APPLY2_0}0" "idr_{APPLY2_0}1" "idr_{APPLY2_0}2" =
  "idr_{APPLY2_0}0_val" <- fetch "idr_{APPLY2_0}0"
  case "idr_{APPLY2_0}0_val" of
    (C"idr_{U_Main.{main_9}_2}") ->
      "idr_Main.{main_9}" $ "idr_{APPLY2_0}1" "idr_{APPLY2_0}2"
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}") ->
      "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}" $ "idr_{APPLY2_0}1" "idr_{APPLY2_0}2"
    #default ->
      "idr_{APPLY2_0}3_val" <- "idr_{APPLY_0}" $ "idr_{APPLY2_0}0" "idr_{APPLY2_0}1"
      "idr_{APPLY2_0}3" <- store "idr_{APPLY2_0}3_val"
      "idr_{APPLY_0}" $ "idr_{APPLY2_0}3" "idr_{APPLY2_0}2"

"idr_{EVAL_0}" "idr_{EVAL_0}0" =
  "idr_{EVAL_0}0_val" <- fetch "idr_{EVAL_0}0"
  case "idr_{EVAL_0}0_val" of
    #default ->
      fetch "idr_{EVAL_0}0"

"idr_Main.{adder_0}" "idr_Main.{adder_0}0" "idr_Main.{adder_0}1" "idr_Main.{adder_0}2" "idr_Main.{adder_0}3" =
  "idr_Main.{adder_0}4_val" <- pure (CErased)
  "idr_Main.{adder_0}4" <- store "idr_Main.{adder_0}4_val"
  "idr_Main.{adder_0}5_val_1458" <- "idr_{APPLY_0}" $ "idr_Main.{adder_0}0" "idr_Main.{adder_0}3"
  "idr_Main.{adder_0}5" <- store "idr_Main.{adder_0}5_val_1458"
  "idr_Main.{adder_0}5_val" <- "idr_{APPLY_0}" $ "idr_Main.{adder_0}5" "idr_Main.{adder_0}2"
  "idr_Main.{adder_0}5_1459" <- store "idr_Main.{adder_0}5_val"
  idr_Main.adder $ "idr_Main.{adder_0}4" "idr_Main.{adder_0}0" "idr_Main.{adder_0}1" "idr_Main.{adder_0}5_1459"

"idr_{runMain_0}" =
  "idr_{runMain_0}0_val_1460" <- pure (CErased)
  "idr_{runMain_0}0" <- store "idr_{runMain_0}0_val_1460"
  "idr_{runMain_0}0_val" <- idr_Main.main $ "idr_{runMain_0}0"
  "idr_{runMain_0}0_1461" <- store "idr_{runMain_0}0_val"
  "idr_{EVAL_0}" $ "idr_{runMain_0}0_1461"

"idr_Data.Vect.{foldrImpl_1}" "idr_Data.Vect.{foldrImpl_1}0" "idr_Data.Vect.{foldrImpl_1}1" "idr_Data.Vect.{foldrImpl_1}2" "idr_Data.Vect.{foldrImpl_1}3" =
  "idr_Data.Vect.{foldrImpl_1}4_val_1462" <- "idr_{APPLY_0}" $ "idr_Data.Vect.{foldrImpl_1}1" "idr_Data.Vect.{foldrImpl_1}2"
  "idr_Data.Vect.{foldrImpl_1}4" <- store "idr_Data.Vect.{foldrImpl_1}4_val_1462"
  "idr_Data.Vect.{foldrImpl_1}4_val" <- "idr_{APPLY_0}" $ "idr_Data.Vect.{foldrImpl_1}4" "idr_Data.Vect.{foldrImpl_1}3"
  "idr_Data.Vect.{foldrImpl_1}4_1463" <- store "idr_Data.Vect.{foldrImpl_1}4_val"
  "idr_{APPLY_0}" $ "idr_Data.Vect.{foldrImpl_1}0" "idr_Data.Vect.{foldrImpl_1}4_1463"

"idr_Main.{main_2}" "idr_Main.{main_2}0" =
  "idr_Main.{main_2}0_val" <- fetch "idr_Main.{main_2}0"
  case "idr_Main.{main_2}0_val" of
    (Cidr_Builtins.MkPair "idr_Main.{main_2}1" "idr_Main.{main_2}2") ->
      "idr_Main.{main_2}3_val" <- pure (CGrString #"(")
      "idr_Main.{main_2}3" <- store "idr_Main.{main_2}3_val"
      "idr_Main.{main_2}4_val_1465" <- pure (CErased)
      "idr_Main.{main_2}4" <- store "idr_Main.{main_2}4_val_1465"
      "idr_Main.{main_2}5_val" <- pure (C"idr_{U_prim__floatToStr_1}")
      "idr_Main.{main_2}5" <- store "idr_Main.{main_2}5_val"
      "idr_Main.{main_2}6_val" <- pure (Cidr_Prelude.Show.Open)
      "idr_Main.{main_2}6" <- store "idr_Main.{main_2}6_val"
      "idr_Main.{main_2}4_val_1464" <- idr_Prelude.Show.primNumShow $ "idr_Main.{main_2}4" "idr_Main.{main_2}5" "idr_Main.{main_2}6" "idr_Main.{main_2}1"
      "idr_Main.{main_2}4_1466" <- store "idr_Main.{main_2}4_val_1464"
      "idr_Main.{main_2}5_val_1468" <- pure (CGrString #", ")
      "idr_Main.{main_2}5_1469" <- store "idr_Main.{main_2}5_val_1468"
      "idr_Main.{main_2}6_val_1472" <- pure (CErased)
      "idr_Main.{main_2}6_1473" <- store "idr_Main.{main_2}6_val_1472"
      "idr_Main.{main_2}7_val" <- pure (C"idr_{U_prim__floatToStr_1}")
      "idr_Main.{main_2}7" <- store "idr_Main.{main_2}7_val"
      "idr_Main.{main_2}8_val" <- pure (Cidr_Prelude.Show.Open)
      "idr_Main.{main_2}8" <- store "idr_Main.{main_2}8_val"
      "idr_Main.{main_2}6_val_1471" <- idr_Prelude.Show.primNumShow $ "idr_Main.{main_2}6_1473" "idr_Main.{main_2}7" "idr_Main.{main_2}8" "idr_Main.{main_2}2"
      "idr_Main.{main_2}6_1474" <- store "idr_Main.{main_2}6_val_1471"
      "idr_Main.{main_2}7_val_1475" <- pure (CGrString #")")
      "idr_Main.{main_2}7_1476" <- store "idr_Main.{main_2}7_val_1475"
      "idr_Main.{main_2}6_val_1470" <- idris_str_concat $ "idr_Main.{main_2}6_1474" "idr_Main.{main_2}7_1476"
      "idr_Main.{main_2}6_1477" <- store "idr_Main.{main_2}6_val_1470"
      "idr_Main.{main_2}5_val_1467" <- idris_str_concat $ "idr_Main.{main_2}5_1469" "idr_Main.{main_2}6_1477"
      "idr_Main.{main_2}5_1478" <- store "idr_Main.{main_2}5_val_1467"
      "idr_Main.{main_2}4_val" <- idris_str_concat $ "idr_Main.{main_2}4_1466" "idr_Main.{main_2}5_1478"
      "idr_Main.{main_2}4_1479" <- store "idr_Main.{main_2}4_val"
      idris_str_concat $ "idr_Main.{main_2}3" "idr_Main.{main_2}4_1479"

"idr_Main.{main_3}" "idr_Main.{main_3}0" =
  "idr_Main.{main_3}1_val" <- pure (CErased)
  "idr_Main.{main_3}1" <- store "idr_Main.{main_3}1_val"
  "idr_Main.{main_3}2_val" <- pure (CErased)
  "idr_Main.{main_3}2" <- store "idr_Main.{main_3}2_val"
  "idr_Main.{main_3}3_val" <- pure (C"idr_{U_Main.{main_2}_1}")
  "idr_Main.{main_3}3" <- store "idr_Main.{main_3}3_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0" $ "idr_Main.{main_3}1" "idr_Main.{main_3}2" "idr_Main.{main_3}3" "idr_Main.{main_3}0"

"idr_Main.{main_4}" "idr_Main.{main_4}0" =
  "idr_Main.{main_4}0_val" <- fetch "idr_Main.{main_4}0"
  case "idr_Main.{main_4}0_val" of
    (Cidr_Builtins.MkPair "idr_Main.{main_4}1" "idr_Main.{main_4}2") ->
      "idr_Main.{main_4}3_val" <- pure (CGrString #"(")
      "idr_Main.{main_4}3" <- store "idr_Main.{main_4}3_val"
      "idr_Main.{main_4}4_val_1481" <- pure (CErased)
      "idr_Main.{main_4}4" <- store "idr_Main.{main_4}4_val_1481"
      "idr_Main.{main_4}5_val" <- pure (C"idr_{U_prim__floatToStr_1}")
      "idr_Main.{main_4}5" <- store "idr_Main.{main_4}5_val"
      "idr_Main.{main_4}6_val" <- pure (Cidr_Prelude.Show.Open)
      "idr_Main.{main_4}6" <- store "idr_Main.{main_4}6_val"
      "idr_Main.{main_4}4_val_1480" <- idr_Prelude.Show.primNumShow $ "idr_Main.{main_4}4" "idr_Main.{main_4}5" "idr_Main.{main_4}6" "idr_Main.{main_4}1"
      "idr_Main.{main_4}4_1482" <- store "idr_Main.{main_4}4_val_1480"
      "idr_Main.{main_4}5_val_1484" <- pure (CGrString #", ")
      "idr_Main.{main_4}5_1485" <- store "idr_Main.{main_4}5_val_1484"
      "idr_Main.{main_4}6_val_1488" <- pure (CErased)
      "idr_Main.{main_4}6_1489" <- store "idr_Main.{main_4}6_val_1488"
      "idr_Main.{main_4}7_val" <- pure (C"idr_{U_prim__floatToStr_1}")
      "idr_Main.{main_4}7" <- store "idr_Main.{main_4}7_val"
      "idr_Main.{main_4}8_val" <- pure (Cidr_Prelude.Show.Open)
      "idr_Main.{main_4}8" <- store "idr_Main.{main_4}8_val"
      "idr_Main.{main_4}6_val_1487" <- idr_Prelude.Show.primNumShow $ "idr_Main.{main_4}6_1489" "idr_Main.{main_4}7" "idr_Main.{main_4}8" "idr_Main.{main_4}2"
      "idr_Main.{main_4}6_1490" <- store "idr_Main.{main_4}6_val_1487"
      "idr_Main.{main_4}7_val_1491" <- pure (CGrString #")")
      "idr_Main.{main_4}7_1492" <- store "idr_Main.{main_4}7_val_1491"
      "idr_Main.{main_4}6_val_1486" <- idris_str_concat $ "idr_Main.{main_4}6_1490" "idr_Main.{main_4}7_1492"
      "idr_Main.{main_4}6_1493" <- store "idr_Main.{main_4}6_val_1486"
      "idr_Main.{main_4}5_val_1483" <- idris_str_concat $ "idr_Main.{main_4}5_1485" "idr_Main.{main_4}6_1493"
      "idr_Main.{main_4}5_1494" <- store "idr_Main.{main_4}5_val_1483"
      "idr_Main.{main_4}4_val" <- idris_str_concat $ "idr_Main.{main_4}4_1482" "idr_Main.{main_4}5_1494"
      "idr_Main.{main_4}4_1495" <- store "idr_Main.{main_4}4_val"
      idris_str_concat $ "idr_Main.{main_4}3" "idr_Main.{main_4}4_1495"

"idr_Main.{main_5}" "idr_Main.{main_5}0" =
  "idr_Main.{main_5}1_val" <- pure (CErased)
  "idr_Main.{main_5}1" <- store "idr_Main.{main_5}1_val"
  "idr_Main.{main_5}2_val" <- pure (CErased)
  "idr_Main.{main_5}2" <- store "idr_Main.{main_5}2_val"
  "idr_Main.{main_5}3_val" <- pure (C"idr_{U_Main.{main_4}_1}")
  "idr_Main.{main_5}3" <- store "idr_Main.{main_5}3_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0" $ "idr_Main.{main_5}1" "idr_Main.{main_5}2" "idr_Main.{main_5}3" "idr_Main.{main_5}0"

"idr_Main.{main_6}" "idr_Main.{main_6}0" =
  "idr_Main.{main_6}1_val" <- pure (CGrInt 34)
  "idr_Main.{main_6}1" <- store "idr_Main.{main_6}1_val"
  "idr_Main.{main_6}2_val_1500" <- pure (CGrString #"")
  "idr_Main.{main_6}2" <- store "idr_Main.{main_6}2_val_1500"
  "idr_Main.{main_6}2_val_1499" <- idris_str_eq $ "idr_Main.{main_6}0" "idr_Main.{main_6}2"
  "idr_Main.{main_6}2_1501" <- store "idr_Main.{main_6}2_val_1499"
  "idr_Main.{main_6}2_val_1502" <- fetch "idr_Main.{main_6}2_1501"
  "idr_Main.{main_6}2_val_1498" <- case "idr_Main.{main_6}2_val_1502" of
    (CGrInt "idr_Main.{main_6}_cpat_LInt64_0") ->
      case "idr_Main.{main_6}_cpat_LInt64_0" of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
    #default ->
      pure (Cidr_Prelude.Bool.False)
  "idr_Main.{main_6}2_1503" <- store "idr_Main.{main_6}2_val_1498"
  "idr_Main.{main_6}3_val" <- pure (Cidr_Prelude.Bool.True)
  "idr_Main.{main_6}3" <- store "idr_Main.{main_6}3_val"
  "idr_Main.{main_6}2_val_1497" <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ "idr_Main.{main_6}2_1503" "idr_Main.{main_6}3"
  "idr_Main.{main_6}2_1504" <- store "idr_Main.{main_6}2_val_1497"
  "idr_Main.{main_6}2_val_1505" <- fetch "idr_Main.{main_6}2_1504"
  "idr_Main.{main_6}2_val_1496" <- case "idr_Main.{main_6}2_val_1505" of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      "idr_Main.{main_6}3_val_1506" <- idris_str_head $ "idr_Main.{main_6}0"
      "idr_Main.{main_6}3_1507" <- store "idr_Main.{main_6}3_val_1506"
      "idr_Main.{main_6}4_val_1508" <- pure (CErased)
      "idr_Main.{main_6}4" <- store "idr_Main.{main_6}4_val_1508"
      "idr_Main.{main_6}5_val_1512" <- idris_str_tail $ "idr_Main.{main_6}0"
      "idr_Main.{main_6}5" <- store "idr_Main.{main_6}5_val_1512"
      "idr_Main.{main_6}6_val" <- pure (CGrString #"")
      "idr_Main.{main_6}6" <- store "idr_Main.{main_6}6_val"
      "idr_Main.{main_6}5_val_1511" <- idris_str_eq $ "idr_Main.{main_6}5" "idr_Main.{main_6}6"
      "idr_Main.{main_6}5_1513" <- store "idr_Main.{main_6}5_val_1511"
      "idr_Main.{main_6}5_val_1514" <- fetch "idr_Main.{main_6}5_1513"
      "idr_Main.{main_6}5_val_1510" <- case "idr_Main.{main_6}5_val_1514" of
        (CGrInt "idr_Main.{main_6}_cpat_LInt64_0_1515") ->
          case "idr_Main.{main_6}_cpat_LInt64_0_1515" of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      "idr_Main.{main_6}5_1516" <- store "idr_Main.{main_6}5_val_1510"
      "idr_Main.{main_6}6_val_1517" <- pure (Cidr_Prelude.Bool.True)
      "idr_Main.{main_6}6_1518" <- store "idr_Main.{main_6}6_val_1517"
      "idr_Main.{main_6}5_val_1509" <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ "idr_Main.{main_6}5_1516" "idr_Main.{main_6}6_1518"
      "idr_Main.{main_6}5_1519" <- store "idr_Main.{main_6}5_val_1509"
      "idr_Main.{main_6}5_val_1520" <- fetch "idr_Main.{main_6}5_1519"
      "idr_Main.{main_6}5_val" <- case "idr_Main.{main_6}5_val_1520" of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          "idr_Main.{main_6}6_val_1522" <- idris_str_tail $ "idr_Main.{main_6}0"
          "idr_Main.{main_6}6_1523" <- store "idr_Main.{main_6}6_val_1522"
          "idr_Main.{main_6}6_val_1521" <- idris_str_head $ "idr_Main.{main_6}6_1523"
          "idr_Main.{main_6}6_1524" <- store "idr_Main.{main_6}6_val_1521"
          "idr_Main.{main_6}7_val_1525" <- idris_str_tail $ "idr_Main.{main_6}0"
          "idr_Main.{main_6}7" <- store "idr_Main.{main_6}7_val_1525"
          "idr_Main.{main_6}7_val" <- idris_str_tail $ "idr_Main.{main_6}7"
          "idr_Main.{main_6}7_1526" <- store "idr_Main.{main_6}7_val"
          pure (Cidr_Prelude.Strings.StrCons "idr_Main.{main_6}6_1524" "idr_Main.{main_6}7_1526")
      "idr_Main.{main_6}5_1527" <- store "idr_Main.{main_6}5_val"
      "idr_Main.{main_6}4_val" <- idr__Prelude.Strings.unpack_with_36 $ "idr_Main.{main_6}4" "idr_Main.{main_6}5_1527"
      "idr_Main.{main_6}4_1528" <- store "idr_Main.{main_6}4_val"
      pure (Cidr_Prelude.List.:: "idr_Main.{main_6}3_1507" "idr_Main.{main_6}4_1528")
  "idr_Main.{main_6}2_1529" <- store "idr_Main.{main_6}2_val_1496"
  "idr_Main.{main_6}3_val_1530" <- pure (CGrString #"\"")
  "idr_Main.{main_6}3_1531" <- store "idr_Main.{main_6}3_val_1530"
  "idr_Main.{main_6}2_val" <- idr_Prelude.Show.showLitString $ "idr_Main.{main_6}2_1529" "idr_Main.{main_6}3_1531"
  "idr_Main.{main_6}2_1532" <- store "idr_Main.{main_6}2_val"
  idris_str_cons $ "idr_Main.{main_6}1" "idr_Main.{main_6}2_1532"

"idr_Main.{main_8}" "idr_Main.{main_8}0" =
  "idr_Main.{main_8}1_val" <- pure (CErased)
  "idr_Main.{main_8}1" <- store "idr_Main.{main_8}1_val"
  "idr_Main.{main_8}2_val" <- pure (C"idr_{U_prim__toStrInt_1}")
  "idr_Main.{main_8}2" <- store "idr_Main.{main_8}2_val"
  "idr_Main.{main_8}3_val" <- pure (Cidr_Prelude.Show.Open)
  "idr_Main.{main_8}3" <- store "idr_Main.{main_8}3_val"
  idr_Prelude.Show.primNumShow $ "idr_Main.{main_8}1" "idr_Main.{main_8}2" "idr_Main.{main_8}3" "idr_Main.{main_8}0"

"idr_Main.{main_9}" "idr_Main.{main_9}0" "idr_Main.{main_9}1" =
  idris_int_add $ "idr_Main.{main_9}0" "idr_Main.{main_9}1"

"idr_Main.{printFmt_14}" "idr_Main.{printFmt_14}0" "idr_Main.{printFmt_14}1" "idr_Main.{printFmt_14}2" =
  "idr_Main.{printFmt_14}3_val_1534" <- pure (CErased)
  "idr_Main.{printFmt_14}3" <- store "idr_Main.{printFmt_14}3_val_1534"
  "idr_Main.{printFmt_14}4_val" <- pure (C"idr_{U_prim__toStrInt_1}")
  "idr_Main.{printFmt_14}4" <- store "idr_Main.{printFmt_14}4_val"
  "idr_Main.{printFmt_14}5_val" <- pure (Cidr_Prelude.Show.Open)
  "idr_Main.{printFmt_14}5" <- store "idr_Main.{printFmt_14}5_val"
  "idr_Main.{printFmt_14}3_val_1533" <- idr_Prelude.Show.primNumShow $ "idr_Main.{printFmt_14}3" "idr_Main.{printFmt_14}4" "idr_Main.{printFmt_14}5" "idr_Main.{printFmt_14}2"
  "idr_Main.{printFmt_14}3_1535" <- store "idr_Main.{printFmt_14}3_val_1533"
  "idr_Main.{printFmt_14}3_val" <- idris_str_concat $ "idr_Main.{printFmt_14}1" "idr_Main.{printFmt_14}3_1535"
  "idr_Main.{printFmt_14}3_1536" <- store "idr_Main.{printFmt_14}3_val"
  idr_Main.printFmt $ "idr_Main.{printFmt_14}0" "idr_Main.{printFmt_14}3_1536"

"idr_Main.{printFmt_15}" "idr_Main.{printFmt_15}0" "idr_Main.{printFmt_15}1" "idr_Main.{printFmt_15}2" =
  "idr_Main.{printFmt_15}3_val" <- idris_str_concat $ "idr_Main.{printFmt_15}1" "idr_Main.{printFmt_15}2"
  "idr_Main.{printFmt_15}3" <- store "idr_Main.{printFmt_15}3_val"
  idr_Main.printFmt $ "idr_Main.{printFmt_15}0" "idr_Main.{printFmt_15}3"

"idr_Prelude.Show.{showLitChar_16}" "idr_Prelude.Show.{showLitChar_16}0" =
  "idr_Prelude.Show.{showLitChar_16}1_val" <- pure (CGrString #"\\a")
  "idr_Prelude.Show.{showLitChar_16}1" <- store "idr_Prelude.Show.{showLitChar_16}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_16}1" "idr_Prelude.Show.{showLitChar_16}0"

"idr_Prelude.Show.{showLitChar_17}" "idr_Prelude.Show.{showLitChar_17}0" =
  "idr_Prelude.Show.{showLitChar_17}1_val" <- pure (CGrString #"\\b")
  "idr_Prelude.Show.{showLitChar_17}1" <- store "idr_Prelude.Show.{showLitChar_17}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_17}1" "idr_Prelude.Show.{showLitChar_17}0"

"idr_Prelude.Show.{showLitChar_18}" "idr_Prelude.Show.{showLitChar_18}0" =
  "idr_Prelude.Show.{showLitChar_18}1_val" <- pure (CGrString #"\\t")
  "idr_Prelude.Show.{showLitChar_18}1" <- store "idr_Prelude.Show.{showLitChar_18}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_18}1" "idr_Prelude.Show.{showLitChar_18}0"

"idr_Prelude.Show.{showLitChar_19}" "idr_Prelude.Show.{showLitChar_19}0" =
  "idr_Prelude.Show.{showLitChar_19}1_val" <- pure (CGrString #"\\n")
  "idr_Prelude.Show.{showLitChar_19}1" <- store "idr_Prelude.Show.{showLitChar_19}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_19}1" "idr_Prelude.Show.{showLitChar_19}0"

"idr_Prelude.Show.{showLitChar_20}" "idr_Prelude.Show.{showLitChar_20}0" =
  "idr_Prelude.Show.{showLitChar_20}1_val" <- pure (CGrString #"\\v")
  "idr_Prelude.Show.{showLitChar_20}1" <- store "idr_Prelude.Show.{showLitChar_20}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_20}1" "idr_Prelude.Show.{showLitChar_20}0"

"idr_Prelude.Show.{showLitChar_21}" "idr_Prelude.Show.{showLitChar_21}0" =
  "idr_Prelude.Show.{showLitChar_21}1_val" <- pure (CGrString #"\\f")
  "idr_Prelude.Show.{showLitChar_21}1" <- store "idr_Prelude.Show.{showLitChar_21}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_21}1" "idr_Prelude.Show.{showLitChar_21}0"

"idr_Prelude.Show.{showLitChar_22}" "idr_Prelude.Show.{showLitChar_22}0" =
  "idr_Prelude.Show.{showLitChar_22}1_val" <- pure (CGrString #"\\r")
  "idr_Prelude.Show.{showLitChar_22}1" <- store "idr_Prelude.Show.{showLitChar_22}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_22}1" "idr_Prelude.Show.{showLitChar_22}0"

"idr_Prelude.Show.{showLitChar_23}" "idr_Prelude.Show.{showLitChar_23}0" =
  "idr_Prelude.Show.{showLitChar_23}1_val_1537" <- pure (CGrInt 72)
  "idr_Prelude.Show.{showLitChar_23}1" <- store "idr_Prelude.Show.{showLitChar_23}1_val_1537"
  "idr_Prelude.Show.{showLitChar_23}1_val" <- idris_int_eq $ "idr_Prelude.Show.{showLitChar_23}0" "idr_Prelude.Show.{showLitChar_23}1"
  "idr_Prelude.Show.{showLitChar_23}1_1538" <- store "idr_Prelude.Show.{showLitChar_23}1_val"
  "idr_Prelude.Show.{showLitChar_23}1_val_1539" <- fetch "idr_Prelude.Show.{showLitChar_23}1_1538"
  case "idr_Prelude.Show.{showLitChar_23}1_val_1539" of
    (CGrInt "idr_Prelude.Show.{showLitChar_23}_cpat_LInt64_0") ->
      case "idr_Prelude.Show.{showLitChar_23}_cpat_LInt64_0" of
        0 ->
          pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.True)

"idr_Prelude.Show.{showLitChar_24}" "idr_Prelude.Show.{showLitChar_24}0" =
  "idr_Prelude.Show.{showLitChar_24}1_val" <- pure (CGrString #"\\\\")
  "idr_Prelude.Show.{showLitChar_24}1" <- store "idr_Prelude.Show.{showLitChar_24}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_24}1" "idr_Prelude.Show.{showLitChar_24}0"

"idr_Prelude.Show.{showLitChar_25}" "idr_Prelude.Show.{showLitChar_25}0" =
  "idr_Prelude.Show.{showLitChar_25}1_val" <- pure (CGrString #"\\DEL")
  "idr_Prelude.Show.{showLitChar_25}1" <- store "idr_Prelude.Show.{showLitChar_25}1_val"
  idris_str_concat $ "idr_Prelude.Show.{showLitChar_25}1" "idr_Prelude.Show.{showLitChar_25}0"

"idr_Prelude.Show.{showLitChar_26}" "idr_Prelude.Show.{showLitChar_26}0" "idr_Prelude.Show.{showLitChar_26}1" =
  "idr_Prelude.Show.{showLitChar_26}2_val" <- pure (CGrInt 92)
  "idr_Prelude.Show.{showLitChar_26}2" <- store "idr_Prelude.Show.{showLitChar_26}2_val"
  "idr_Prelude.Show.{showLitChar_26}3_val" <- idris_str_concat $ "idr_Prelude.Show.{showLitChar_26}0" "idr_Prelude.Show.{showLitChar_26}1"
  "idr_Prelude.Show.{showLitChar_26}3" <- store "idr_Prelude.Show.{showLitChar_26}3_val"
  idr_prim__strCons $ "idr_Prelude.Show.{showLitChar_26}2" "idr_Prelude.Show.{showLitChar_26}3"

"idr_Prelude.Show.{showLitChar_27}" "idr_Prelude.Show.{showLitChar_27}0" "idr_Prelude.Show.{showLitChar_27}1" =
  "idr_Prelude.Show.{showLitChar_27}2_val" <- pure (CGrInt 92)
  "idr_Prelude.Show.{showLitChar_27}2" <- store "idr_Prelude.Show.{showLitChar_27}2_val"
  "idr_Prelude.Show.{showLitChar_27}3_val_1540" <- pure (C"idr_{U_Prelude.Chars.isDigit_1}")
  "idr_Prelude.Show.{showLitChar_27}3" <- store "idr_Prelude.Show.{showLitChar_27}3_val_1540"
  "idr_Prelude.Show.{showLitChar_27}4_val_1541" <- pure (CErased)
  "idr_Prelude.Show.{showLitChar_27}4" <- store "idr_Prelude.Show.{showLitChar_27}4_val_1541"
  "idr_Prelude.Show.{showLitChar_27}5_val" <- pure (C"idr_{U_prim__toStrInt_1}")
  "idr_Prelude.Show.{showLitChar_27}5" <- store "idr_Prelude.Show.{showLitChar_27}5_val"
  "idr_Prelude.Show.{showLitChar_27}6_val" <- pure (Cidr_Prelude.Show.Open)
  "idr_Prelude.Show.{showLitChar_27}6" <- store "idr_Prelude.Show.{showLitChar_27}6_val"
  "idr_Prelude.Show.{showLitChar_27}7_val" <- idris_ch_int $ "idr_Prelude.Show.{showLitChar_27}0"
  "idr_Prelude.Show.{showLitChar_27}7" <- store "idr_Prelude.Show.{showLitChar_27}7_val"
  "idr_Prelude.Show.{showLitChar_27}4_val" <- idr_Prelude.Show.primNumShow $ "idr_Prelude.Show.{showLitChar_27}4" "idr_Prelude.Show.{showLitChar_27}5" "idr_Prelude.Show.{showLitChar_27}6" "idr_Prelude.Show.{showLitChar_27}7"
  "idr_Prelude.Show.{showLitChar_27}4_1542" <- store "idr_Prelude.Show.{showLitChar_27}4_val"
  "idr_Prelude.Show.{showLitChar_27}3_val" <- idr_Prelude.Show.protectEsc $ "idr_Prelude.Show.{showLitChar_27}3" "idr_Prelude.Show.{showLitChar_27}4_1542" "idr_Prelude.Show.{showLitChar_27}1"
  "idr_Prelude.Show.{showLitChar_27}3_1543" <- store "idr_Prelude.Show.{showLitChar_27}3_val"
  idr_prim__strCons $ "idr_Prelude.Show.{showLitChar_27}2" "idr_Prelude.Show.{showLitChar_27}3_1543"

"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}" "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}0" "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}1" =
  pure (Cidr_Prelude.List.:: "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}0" "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}1")

"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}" "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" =
  fetch "idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0"

"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':00" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':01" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" =
  "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04"
  case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06") ->
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
      case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" of
        (Cidr_Prelude.List.Nil) ->
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val" <- "idr_{APPLY_0}" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val"
          idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07"
        #default ->
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val_1544" <- pure (CErased)
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_1545" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val_1544"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':08_val" <- pure (CErased)
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':08" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':08_val"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547" <- "idr_{APPLY_0}" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010_val" <- pure (CGrString #", ")
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010_val"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1546" <- idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_1548" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1546"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val" <- idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_1548"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_1549" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_1545" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':08" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_1549" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03"

"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00" "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01" =
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" <- fetch "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01"
  case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" of
    (Cidr_Prelude.Bool.False) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val" <- fetch "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00"
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val" of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Basics.Yes)
        (Cidr_Prelude.Bool.True) ->
          pure (Cidr_Prelude.Basics.No)
    (Cidr_Prelude.Bool.True) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_1550" <- fetch "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00"
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_1550" of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Basics.No)
        (Cidr_Prelude.Bool.True) ->
          pure (Cidr_Prelude.Basics.Yes)

"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01" =
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val" <- idris_int_eq $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val_1551" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02"
  case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val_1551" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val" <- idris_int_lt $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val_1552" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03"
          case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val_1552" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0_1553") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0_1553" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.GT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.LT)
            #default ->
              pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)

"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01" =
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val" <- idris_int_eq $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_1554" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02"
  case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_1554" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val" <- idris_int_lt $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_1555" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03"
          case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_1555" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_1556") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_1556" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.GT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.LT)
            #default ->
              pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)

"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:0" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:00" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:01" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:03" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:04" =
  "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:04_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:04"
  case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:04_val" of
    (Cidr_Builtins.MkPair "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:05" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:06") ->
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:07_val" <- pure (CGrString #"(")
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:07" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:07_val"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_val_1557" <- "idr_{APPLY_0}" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:05"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_val_1557"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_val_1558" <- pure (CGrString #", ")
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_val_1558"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_val_1559" <- "idr_{APPLY_0}" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:03" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:06"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_val_1559"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:011_val" <- pure (CGrString #")")
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:011" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:011_val"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_val" <- idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:011"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_1560" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_val"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_val" <- idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:010_1560"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_1561" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_val"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_val" <- idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:09_1561"
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_1562" <- store "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_val"
      idris_str_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:07" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$(a, b):!show:08_1562"

"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:00" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:01" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03" =
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04_val" <- pure (CGrString #"[")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1564" <- pure (CErased)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1564"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_val" <- pure (CErased)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07_val" <- pure (CGrString #"")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val_1565" <- pure (CErased)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val_1565"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:09_val" <- pure (CErased)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:09" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:09_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:010_val" <- pure (CErased)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:010" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:010_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val" <- pure (Cidr_Prelude.List.Nil)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val" <- idr_Data.Vect.foldrImpl $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:09" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:010" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_1566" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1563" <- "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0" $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_1566"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_1567" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1563"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_val_1568" <- pure (CGrString #"]")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_1569" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_val_1568"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val" <- idris_str_concat $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_1567" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_1569"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_1570" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val"
  idris_str_concat $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_1570"

idr_Prelude.Show.showLitChar:asciiTab:10 idr_Prelude.Show.showLitChar:asciiTab:100 =
  idr_Prelude.Show.showLitChar:asciiTab:101_val <- pure (CGrString #"NUL")
  idr_Prelude.Show.showLitChar:asciiTab:101 <- store idr_Prelude.Show.showLitChar:asciiTab:101_val
  idr_Prelude.Show.showLitChar:asciiTab:102_val_1571 <- pure (CGrString #"SOH")
  idr_Prelude.Show.showLitChar:asciiTab:102 <- store idr_Prelude.Show.showLitChar:asciiTab:102_val_1571
  idr_Prelude.Show.showLitChar:asciiTab:103_val_1572 <- pure (CGrString #"STX")
  idr_Prelude.Show.showLitChar:asciiTab:103 <- store idr_Prelude.Show.showLitChar:asciiTab:103_val_1572
  idr_Prelude.Show.showLitChar:asciiTab:104_val_1573 <- pure (CGrString #"ETX")
  idr_Prelude.Show.showLitChar:asciiTab:104 <- store idr_Prelude.Show.showLitChar:asciiTab:104_val_1573
  idr_Prelude.Show.showLitChar:asciiTab:105_val_1574 <- pure (CGrString #"EOT")
  idr_Prelude.Show.showLitChar:asciiTab:105 <- store idr_Prelude.Show.showLitChar:asciiTab:105_val_1574
  idr_Prelude.Show.showLitChar:asciiTab:106_val_1575 <- pure (CGrString #"ENQ")
  idr_Prelude.Show.showLitChar:asciiTab:106 <- store idr_Prelude.Show.showLitChar:asciiTab:106_val_1575
  idr_Prelude.Show.showLitChar:asciiTab:107_val_1576 <- pure (CGrString #"ACK")
  idr_Prelude.Show.showLitChar:asciiTab:107 <- store idr_Prelude.Show.showLitChar:asciiTab:107_val_1576
  idr_Prelude.Show.showLitChar:asciiTab:108_val_1577 <- pure (CGrString #"BEL")
  idr_Prelude.Show.showLitChar:asciiTab:108 <- store idr_Prelude.Show.showLitChar:asciiTab:108_val_1577
  idr_Prelude.Show.showLitChar:asciiTab:109_val_1578 <- pure (CGrString #"BS")
  idr_Prelude.Show.showLitChar:asciiTab:109 <- store idr_Prelude.Show.showLitChar:asciiTab:109_val_1578
  idr_Prelude.Show.showLitChar:asciiTab:1010_val_1579 <- pure (CGrString #"HT")
  idr_Prelude.Show.showLitChar:asciiTab:1010 <- store idr_Prelude.Show.showLitChar:asciiTab:1010_val_1579
  idr_Prelude.Show.showLitChar:asciiTab:1011_val_1580 <- pure (CGrString #"LF")
  idr_Prelude.Show.showLitChar:asciiTab:1011 <- store idr_Prelude.Show.showLitChar:asciiTab:1011_val_1580
  idr_Prelude.Show.showLitChar:asciiTab:1012_val_1581 <- pure (CGrString #"VT")
  idr_Prelude.Show.showLitChar:asciiTab:1012 <- store idr_Prelude.Show.showLitChar:asciiTab:1012_val_1581
  idr_Prelude.Show.showLitChar:asciiTab:1013_val_1582 <- pure (CGrString #"FF")
  idr_Prelude.Show.showLitChar:asciiTab:1013 <- store idr_Prelude.Show.showLitChar:asciiTab:1013_val_1582
  idr_Prelude.Show.showLitChar:asciiTab:1014_val_1583 <- pure (CGrString #"CR")
  idr_Prelude.Show.showLitChar:asciiTab:1014 <- store idr_Prelude.Show.showLitChar:asciiTab:1014_val_1583
  idr_Prelude.Show.showLitChar:asciiTab:1015_val_1584 <- pure (CGrString #"SO")
  idr_Prelude.Show.showLitChar:asciiTab:1015 <- store idr_Prelude.Show.showLitChar:asciiTab:1015_val_1584
  idr_Prelude.Show.showLitChar:asciiTab:1016_val_1585 <- pure (CGrString #"SI")
  idr_Prelude.Show.showLitChar:asciiTab:1016 <- store idr_Prelude.Show.showLitChar:asciiTab:1016_val_1585
  idr_Prelude.Show.showLitChar:asciiTab:1017_val_1586 <- pure (CGrString #"DLE")
  idr_Prelude.Show.showLitChar:asciiTab:1017 <- store idr_Prelude.Show.showLitChar:asciiTab:1017_val_1586
  idr_Prelude.Show.showLitChar:asciiTab:1018_val_1587 <- pure (CGrString #"DC1")
  idr_Prelude.Show.showLitChar:asciiTab:1018 <- store idr_Prelude.Show.showLitChar:asciiTab:1018_val_1587
  idr_Prelude.Show.showLitChar:asciiTab:1019_val_1588 <- pure (CGrString #"DC2")
  idr_Prelude.Show.showLitChar:asciiTab:1019 <- store idr_Prelude.Show.showLitChar:asciiTab:1019_val_1588
  idr_Prelude.Show.showLitChar:asciiTab:1020_val_1589 <- pure (CGrString #"DC3")
  idr_Prelude.Show.showLitChar:asciiTab:1020 <- store idr_Prelude.Show.showLitChar:asciiTab:1020_val_1589
  idr_Prelude.Show.showLitChar:asciiTab:1021_val_1590 <- pure (CGrString #"DC4")
  idr_Prelude.Show.showLitChar:asciiTab:1021 <- store idr_Prelude.Show.showLitChar:asciiTab:1021_val_1590
  idr_Prelude.Show.showLitChar:asciiTab:1022_val_1591 <- pure (CGrString #"NAK")
  idr_Prelude.Show.showLitChar:asciiTab:1022 <- store idr_Prelude.Show.showLitChar:asciiTab:1022_val_1591
  idr_Prelude.Show.showLitChar:asciiTab:1023_val_1592 <- pure (CGrString #"SYN")
  idr_Prelude.Show.showLitChar:asciiTab:1023 <- store idr_Prelude.Show.showLitChar:asciiTab:1023_val_1592
  idr_Prelude.Show.showLitChar:asciiTab:1024_val_1593 <- pure (CGrString #"ETB")
  idr_Prelude.Show.showLitChar:asciiTab:1024 <- store idr_Prelude.Show.showLitChar:asciiTab:1024_val_1593
  idr_Prelude.Show.showLitChar:asciiTab:1025_val_1594 <- pure (CGrString #"CAN")
  idr_Prelude.Show.showLitChar:asciiTab:1025 <- store idr_Prelude.Show.showLitChar:asciiTab:1025_val_1594
  idr_Prelude.Show.showLitChar:asciiTab:1026_val_1595 <- pure (CGrString #"EM")
  idr_Prelude.Show.showLitChar:asciiTab:1026 <- store idr_Prelude.Show.showLitChar:asciiTab:1026_val_1595
  idr_Prelude.Show.showLitChar:asciiTab:1027_val_1596 <- pure (CGrString #"SUB")
  idr_Prelude.Show.showLitChar:asciiTab:1027 <- store idr_Prelude.Show.showLitChar:asciiTab:1027_val_1596
  idr_Prelude.Show.showLitChar:asciiTab:1028_val_1597 <- pure (CGrString #"ESC")
  idr_Prelude.Show.showLitChar:asciiTab:1028 <- store idr_Prelude.Show.showLitChar:asciiTab:1028_val_1597
  idr_Prelude.Show.showLitChar:asciiTab:1029_val_1598 <- pure (CGrString #"FS")
  idr_Prelude.Show.showLitChar:asciiTab:1029 <- store idr_Prelude.Show.showLitChar:asciiTab:1029_val_1598
  idr_Prelude.Show.showLitChar:asciiTab:1030_val_1599 <- pure (CGrString #"GS")
  idr_Prelude.Show.showLitChar:asciiTab:1030 <- store idr_Prelude.Show.showLitChar:asciiTab:1030_val_1599
  idr_Prelude.Show.showLitChar:asciiTab:1031_val_1600 <- pure (CGrString #"RS")
  idr_Prelude.Show.showLitChar:asciiTab:1031 <- store idr_Prelude.Show.showLitChar:asciiTab:1031_val_1600
  idr_Prelude.Show.showLitChar:asciiTab:1032_val_1601 <- pure (CGrString #"US")
  idr_Prelude.Show.showLitChar:asciiTab:1032 <- store idr_Prelude.Show.showLitChar:asciiTab:1032_val_1601
  idr_Prelude.Show.showLitChar:asciiTab:1033_val <- pure (Cidr_Prelude.List.Nil)
  idr_Prelude.Show.showLitChar:asciiTab:1033 <- store idr_Prelude.Show.showLitChar:asciiTab:1033_val
  idr_Prelude.Show.showLitChar:asciiTab:1032_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1032 idr_Prelude.Show.showLitChar:asciiTab:1033)
  idr_Prelude.Show.showLitChar:asciiTab:1032_1602 <- store idr_Prelude.Show.showLitChar:asciiTab:1032_val
  idr_Prelude.Show.showLitChar:asciiTab:1031_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1031 idr_Prelude.Show.showLitChar:asciiTab:1032_1602)
  idr_Prelude.Show.showLitChar:asciiTab:1031_1603 <- store idr_Prelude.Show.showLitChar:asciiTab:1031_val
  idr_Prelude.Show.showLitChar:asciiTab:1030_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1030 idr_Prelude.Show.showLitChar:asciiTab:1031_1603)
  idr_Prelude.Show.showLitChar:asciiTab:1030_1604 <- store idr_Prelude.Show.showLitChar:asciiTab:1030_val
  idr_Prelude.Show.showLitChar:asciiTab:1029_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1029 idr_Prelude.Show.showLitChar:asciiTab:1030_1604)
  idr_Prelude.Show.showLitChar:asciiTab:1029_1605 <- store idr_Prelude.Show.showLitChar:asciiTab:1029_val
  idr_Prelude.Show.showLitChar:asciiTab:1028_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1028 idr_Prelude.Show.showLitChar:asciiTab:1029_1605)
  idr_Prelude.Show.showLitChar:asciiTab:1028_1606 <- store idr_Prelude.Show.showLitChar:asciiTab:1028_val
  idr_Prelude.Show.showLitChar:asciiTab:1027_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1027 idr_Prelude.Show.showLitChar:asciiTab:1028_1606)
  idr_Prelude.Show.showLitChar:asciiTab:1027_1607 <- store idr_Prelude.Show.showLitChar:asciiTab:1027_val
  idr_Prelude.Show.showLitChar:asciiTab:1026_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1026 idr_Prelude.Show.showLitChar:asciiTab:1027_1607)
  idr_Prelude.Show.showLitChar:asciiTab:1026_1608 <- store idr_Prelude.Show.showLitChar:asciiTab:1026_val
  idr_Prelude.Show.showLitChar:asciiTab:1025_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1025 idr_Prelude.Show.showLitChar:asciiTab:1026_1608)
  idr_Prelude.Show.showLitChar:asciiTab:1025_1609 <- store idr_Prelude.Show.showLitChar:asciiTab:1025_val
  idr_Prelude.Show.showLitChar:asciiTab:1024_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1024 idr_Prelude.Show.showLitChar:asciiTab:1025_1609)
  idr_Prelude.Show.showLitChar:asciiTab:1024_1610 <- store idr_Prelude.Show.showLitChar:asciiTab:1024_val
  idr_Prelude.Show.showLitChar:asciiTab:1023_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1023 idr_Prelude.Show.showLitChar:asciiTab:1024_1610)
  idr_Prelude.Show.showLitChar:asciiTab:1023_1611 <- store idr_Prelude.Show.showLitChar:asciiTab:1023_val
  idr_Prelude.Show.showLitChar:asciiTab:1022_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1022 idr_Prelude.Show.showLitChar:asciiTab:1023_1611)
  idr_Prelude.Show.showLitChar:asciiTab:1022_1612 <- store idr_Prelude.Show.showLitChar:asciiTab:1022_val
  idr_Prelude.Show.showLitChar:asciiTab:1021_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1021 idr_Prelude.Show.showLitChar:asciiTab:1022_1612)
  idr_Prelude.Show.showLitChar:asciiTab:1021_1613 <- store idr_Prelude.Show.showLitChar:asciiTab:1021_val
  idr_Prelude.Show.showLitChar:asciiTab:1020_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1020 idr_Prelude.Show.showLitChar:asciiTab:1021_1613)
  idr_Prelude.Show.showLitChar:asciiTab:1020_1614 <- store idr_Prelude.Show.showLitChar:asciiTab:1020_val
  idr_Prelude.Show.showLitChar:asciiTab:1019_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1019 idr_Prelude.Show.showLitChar:asciiTab:1020_1614)
  idr_Prelude.Show.showLitChar:asciiTab:1019_1615 <- store idr_Prelude.Show.showLitChar:asciiTab:1019_val
  idr_Prelude.Show.showLitChar:asciiTab:1018_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1018 idr_Prelude.Show.showLitChar:asciiTab:1019_1615)
  idr_Prelude.Show.showLitChar:asciiTab:1018_1616 <- store idr_Prelude.Show.showLitChar:asciiTab:1018_val
  idr_Prelude.Show.showLitChar:asciiTab:1017_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1017 idr_Prelude.Show.showLitChar:asciiTab:1018_1616)
  idr_Prelude.Show.showLitChar:asciiTab:1017_1617 <- store idr_Prelude.Show.showLitChar:asciiTab:1017_val
  idr_Prelude.Show.showLitChar:asciiTab:1016_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1016 idr_Prelude.Show.showLitChar:asciiTab:1017_1617)
  idr_Prelude.Show.showLitChar:asciiTab:1016_1618 <- store idr_Prelude.Show.showLitChar:asciiTab:1016_val
  idr_Prelude.Show.showLitChar:asciiTab:1015_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1015 idr_Prelude.Show.showLitChar:asciiTab:1016_1618)
  idr_Prelude.Show.showLitChar:asciiTab:1015_1619 <- store idr_Prelude.Show.showLitChar:asciiTab:1015_val
  idr_Prelude.Show.showLitChar:asciiTab:1014_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1014 idr_Prelude.Show.showLitChar:asciiTab:1015_1619)
  idr_Prelude.Show.showLitChar:asciiTab:1014_1620 <- store idr_Prelude.Show.showLitChar:asciiTab:1014_val
  idr_Prelude.Show.showLitChar:asciiTab:1013_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1013 idr_Prelude.Show.showLitChar:asciiTab:1014_1620)
  idr_Prelude.Show.showLitChar:asciiTab:1013_1621 <- store idr_Prelude.Show.showLitChar:asciiTab:1013_val
  idr_Prelude.Show.showLitChar:asciiTab:1012_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1012 idr_Prelude.Show.showLitChar:asciiTab:1013_1621)
  idr_Prelude.Show.showLitChar:asciiTab:1012_1622 <- store idr_Prelude.Show.showLitChar:asciiTab:1012_val
  idr_Prelude.Show.showLitChar:asciiTab:1011_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1011 idr_Prelude.Show.showLitChar:asciiTab:1012_1622)
  idr_Prelude.Show.showLitChar:asciiTab:1011_1623 <- store idr_Prelude.Show.showLitChar:asciiTab:1011_val
  idr_Prelude.Show.showLitChar:asciiTab:1010_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1010 idr_Prelude.Show.showLitChar:asciiTab:1011_1623)
  idr_Prelude.Show.showLitChar:asciiTab:1010_1624 <- store idr_Prelude.Show.showLitChar:asciiTab:1010_val
  idr_Prelude.Show.showLitChar:asciiTab:109_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:109 idr_Prelude.Show.showLitChar:asciiTab:1010_1624)
  idr_Prelude.Show.showLitChar:asciiTab:109_1625 <- store idr_Prelude.Show.showLitChar:asciiTab:109_val
  idr_Prelude.Show.showLitChar:asciiTab:108_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:108 idr_Prelude.Show.showLitChar:asciiTab:109_1625)
  idr_Prelude.Show.showLitChar:asciiTab:108_1626 <- store idr_Prelude.Show.showLitChar:asciiTab:108_val
  idr_Prelude.Show.showLitChar:asciiTab:107_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:107 idr_Prelude.Show.showLitChar:asciiTab:108_1626)
  idr_Prelude.Show.showLitChar:asciiTab:107_1627 <- store idr_Prelude.Show.showLitChar:asciiTab:107_val
  idr_Prelude.Show.showLitChar:asciiTab:106_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:106 idr_Prelude.Show.showLitChar:asciiTab:107_1627)
  idr_Prelude.Show.showLitChar:asciiTab:106_1628 <- store idr_Prelude.Show.showLitChar:asciiTab:106_val
  idr_Prelude.Show.showLitChar:asciiTab:105_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:105 idr_Prelude.Show.showLitChar:asciiTab:106_1628)
  idr_Prelude.Show.showLitChar:asciiTab:105_1629 <- store idr_Prelude.Show.showLitChar:asciiTab:105_val
  idr_Prelude.Show.showLitChar:asciiTab:104_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:104 idr_Prelude.Show.showLitChar:asciiTab:105_1629)
  idr_Prelude.Show.showLitChar:asciiTab:104_1630 <- store idr_Prelude.Show.showLitChar:asciiTab:104_val
  idr_Prelude.Show.showLitChar:asciiTab:103_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:103 idr_Prelude.Show.showLitChar:asciiTab:104_1630)
  idr_Prelude.Show.showLitChar:asciiTab:103_1631 <- store idr_Prelude.Show.showLitChar:asciiTab:103_val
  idr_Prelude.Show.showLitChar:asciiTab:102_val <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:102 idr_Prelude.Show.showLitChar:asciiTab:103_1631)
  idr_Prelude.Show.showLitChar:asciiTab:102_1632 <- store idr_Prelude.Show.showLitChar:asciiTab:102_val
  pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:101 idr_Prelude.Show.showLitChar:asciiTab:102_1632)

idr_Prelude.Show.showLitChar:getAt:10 idr_Prelude.Show.showLitChar:getAt:100 idr_Prelude.Show.showLitChar:getAt:101 idr_Prelude.Show.showLitChar:getAt:102 =
  idr_Prelude.Show.showLitChar:getAt:102_val <- fetch idr_Prelude.Show.showLitChar:getAt:102
  case idr_Prelude.Show.showLitChar:getAt:102_val of
    (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:getAt:103 idr_Prelude.Show.showLitChar:getAt:104) ->
      idr_Prelude.Show.showLitChar:getAt:101_val <- fetch idr_Prelude.Show.showLitChar:getAt:101
      case idr_Prelude.Show.showLitChar:getAt:101_val of
        (CGrInt idr_Prelude.Show.showLitChar:getAt:10_cpat_LInt64_0) ->
          case idr_Prelude.Show.showLitChar:getAt:10_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar:getAt:103)
            #default ->
              idr_Prelude.Show.showLitChar:getAt:105_val_1633 <- pure (CGrInt 1)
              idr_Prelude.Show.showLitChar:getAt:105 <- store idr_Prelude.Show.showLitChar:getAt:105_val_1633
              idr_Prelude.Show.showLitChar:getAt:105_val <- idris_int_sub $ idr_Prelude.Show.showLitChar:getAt:101 idr_Prelude.Show.showLitChar:getAt:105
              idr_Prelude.Show.showLitChar:getAt:105_1634 <- store idr_Prelude.Show.showLitChar:getAt:105_val
              idr_Prelude.Show.showLitChar:getAt:106_val <- pure (CErased)
              idr_Prelude.Show.showLitChar:getAt:106 <- store idr_Prelude.Show.showLitChar:getAt:106_val
              idr_Prelude.Show.showLitChar:getAt:10 $ idr_Prelude.Show.showLitChar:getAt:106 idr_Prelude.Show.showLitChar:getAt:105_1634 idr_Prelude.Show.showLitChar:getAt:104
        #default ->
          idr_Prelude.Show.showLitChar:getAt:105_val_1636 <- pure (CGrInt 1)
          idr_Prelude.Show.showLitChar:getAt:105_1637 <- store idr_Prelude.Show.showLitChar:getAt:105_val_1636
          idr_Prelude.Show.showLitChar:getAt:105_val_1635 <- idris_int_sub $ idr_Prelude.Show.showLitChar:getAt:101 idr_Prelude.Show.showLitChar:getAt:105_1637
          idr_Prelude.Show.showLitChar:getAt:105_1638 <- store idr_Prelude.Show.showLitChar:getAt:105_val_1635
          idr_Prelude.Show.showLitChar:getAt:106_val_1639 <- pure (CErased)
          idr_Prelude.Show.showLitChar:getAt:106_1640 <- store idr_Prelude.Show.showLitChar:getAt:106_val_1639
          idr_Prelude.Show.showLitChar:getAt:10 $ idr_Prelude.Show.showLitChar:getAt:106_1640 idr_Prelude.Show.showLitChar:getAt:105_1638 idr_Prelude.Show.showLitChar:getAt:104
    (Cidr_Prelude.List.Nil) ->
      pure (Cidr_Prelude.Maybe.Nothing)

"idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_27" "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_270" "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_271" "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_272" =
  "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_270_val" <- fetch "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_270"
  case "idr__Prelude.Interfaces.Prelude.Show.@Prelude.Interfaces.Ord$Prec:!>:0_with_270_val" of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.False)

idr__Prelude.Strings.strM_with_33 idr__Prelude.Strings.strM_with_330 idr__Prelude.Strings.strM_with_331 =
  idr__Prelude.Strings.strM_with_331_val <- fetch idr__Prelude.Strings.strM_with_331
  case idr__Prelude.Strings.strM_with_331_val of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.Strings.StrNil)
    (Cidr_Prelude.Basics.Yes) ->
      idr__Prelude.Strings.strM_with_332_val <- idris_str_head $ idr__Prelude.Strings.strM_with_330
      idr__Prelude.Strings.strM_with_332 <- store idr__Prelude.Strings.strM_with_332_val
      idr__Prelude.Strings.strM_with_333_val <- idris_str_tail $ idr__Prelude.Strings.strM_with_330
      idr__Prelude.Strings.strM_with_333 <- store idr__Prelude.Strings.strM_with_333_val
      pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.strM_with_332 idr__Prelude.Strings.strM_with_333)

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_360 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_364_val_1641 <- pure (CErased)
      idr__Prelude.Strings.unpack_with_364 <- store idr__Prelude.Strings.unpack_with_364_val_1641
      idr__Prelude.Strings.unpack_with_365_val_1645 <- pure (CGrString #"")
      idr__Prelude.Strings.unpack_with_365 <- store idr__Prelude.Strings.unpack_with_365_val_1645
      idr__Prelude.Strings.unpack_with_365_val_1644 <- idris_str_eq $ idr__Prelude.Strings.unpack_with_363 idr__Prelude.Strings.unpack_with_365
      idr__Prelude.Strings.unpack_with_365_1646 <- store idr__Prelude.Strings.unpack_with_365_val_1644
      idr__Prelude.Strings.unpack_with_365_val_1647 <- fetch idr__Prelude.Strings.unpack_with_365_1646
      idr__Prelude.Strings.unpack_with_365_val_1643 <- case idr__Prelude.Strings.unpack_with_365_val_1647 of
        (CGrInt idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0) ->
          case idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      idr__Prelude.Strings.unpack_with_365_1648 <- store idr__Prelude.Strings.unpack_with_365_val_1643
      idr__Prelude.Strings.unpack_with_366_val <- pure (Cidr_Prelude.Bool.True)
      idr__Prelude.Strings.unpack_with_366 <- store idr__Prelude.Strings.unpack_with_366_val
      idr__Prelude.Strings.unpack_with_365_val_1642 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr__Prelude.Strings.unpack_with_365_1648 idr__Prelude.Strings.unpack_with_366
      idr__Prelude.Strings.unpack_with_365_1649 <- store idr__Prelude.Strings.unpack_with_365_val_1642
      idr__Prelude.Strings.unpack_with_365_val_1650 <- fetch idr__Prelude.Strings.unpack_with_365_1649
      idr__Prelude.Strings.unpack_with_365_val <- case idr__Prelude.Strings.unpack_with_365_val_1650 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          idr__Prelude.Strings.unpack_with_366_val_1651 <- idris_str_head $ idr__Prelude.Strings.unpack_with_363
          idr__Prelude.Strings.unpack_with_366_1652 <- store idr__Prelude.Strings.unpack_with_366_val_1651
          idr__Prelude.Strings.unpack_with_367_val <- idris_str_tail $ idr__Prelude.Strings.unpack_with_363
          idr__Prelude.Strings.unpack_with_367 <- store idr__Prelude.Strings.unpack_with_367_val
          pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_1652 idr__Prelude.Strings.unpack_with_367)
      idr__Prelude.Strings.unpack_with_365_1653 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_364 idr__Prelude.Strings.unpack_with_365_1653
      idr__Prelude.Strings.unpack_with_364_1654 <- store idr__Prelude.Strings.unpack_with_364_val
      pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_1654)
    (Cidr_Prelude.Strings.StrNil) ->
      pure (Cidr_Prelude.List.Nil)

idr__Prelude.Show.firstCharIs_with_45 idr__Prelude.Show.firstCharIs_with_450 idr__Prelude.Show.firstCharIs_with_451 idr__Prelude.Show.firstCharIs_with_452 =
  idr__Prelude.Show.firstCharIs_with_452_val <- fetch idr__Prelude.Show.firstCharIs_with_452
  case idr__Prelude.Show.firstCharIs_with_452_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Show.firstCharIs_with_453 idr__Prelude.Show.firstCharIs_with_454) ->
      "idr_{APPLY_0}" $ idr__Prelude.Show.firstCharIs_with_450 idr__Prelude.Show.firstCharIs_with_453
    (Cidr_Prelude.Strings.StrNil) ->
      pure (Cidr_Prelude.Bool.False)

idr__Prelude.Strings.ltrim_with_55 idr__Prelude.Strings.ltrim_with_550 idr__Prelude.Strings.ltrim_with_551 =
  idr__Prelude.Strings.ltrim_with_551_val <- fetch idr__Prelude.Strings.ltrim_with_551
  case idr__Prelude.Strings.ltrim_with_551_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.ltrim_with_552 idr__Prelude.Strings.ltrim_with_553) ->
      idr__Prelude.Strings.ltrim_with_554_val <- idr_Prelude.Chars.isSpace $ idr__Prelude.Strings.ltrim_with_552
      idr__Prelude.Strings.ltrim_with_554 <- store idr__Prelude.Strings.ltrim_with_554_val
      idr__Prelude.Strings.ltrim_with_554_val_1655 <- fetch idr__Prelude.Strings.ltrim_with_554
      case idr__Prelude.Strings.ltrim_with_554_val_1655 of
        (Cidr_Prelude.Bool.False) ->
          idris_str_cons $ idr__Prelude.Strings.ltrim_with_552 idr__Prelude.Strings.ltrim_with_553
        (Cidr_Prelude.Bool.True) ->
          idr__Prelude.Strings.ltrim_with_555_val <- pure (CErased)
          idr__Prelude.Strings.ltrim_with_555 <- store idr__Prelude.Strings.ltrim_with_555_val
          idr__Prelude.Strings.ltrim_with_556_val_1659 <- pure (CGrString #"")
          idr__Prelude.Strings.ltrim_with_556 <- store idr__Prelude.Strings.ltrim_with_556_val_1659
          idr__Prelude.Strings.ltrim_with_556_val_1658 <- idris_str_eq $ idr__Prelude.Strings.ltrim_with_553 idr__Prelude.Strings.ltrim_with_556
          idr__Prelude.Strings.ltrim_with_556_1660 <- store idr__Prelude.Strings.ltrim_with_556_val_1658
          idr__Prelude.Strings.ltrim_with_556_val_1661 <- fetch idr__Prelude.Strings.ltrim_with_556_1660
          idr__Prelude.Strings.ltrim_with_556_val_1657 <- case idr__Prelude.Strings.ltrim_with_556_val_1661 of
            (CGrInt idr__Prelude.Strings.ltrim_with_55_cpat_LInt64_0) ->
              case idr__Prelude.Strings.ltrim_with_55_cpat_LInt64_0 of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          idr__Prelude.Strings.ltrim_with_556_1662 <- store idr__Prelude.Strings.ltrim_with_556_val_1657
          idr__Prelude.Strings.ltrim_with_557_val <- pure (Cidr_Prelude.Bool.True)
          idr__Prelude.Strings.ltrim_with_557 <- store idr__Prelude.Strings.ltrim_with_557_val
          idr__Prelude.Strings.ltrim_with_556_val_1656 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr__Prelude.Strings.ltrim_with_556_1662 idr__Prelude.Strings.ltrim_with_557
          idr__Prelude.Strings.ltrim_with_556_1663 <- store idr__Prelude.Strings.ltrim_with_556_val_1656
          idr__Prelude.Strings.ltrim_with_556_val_1664 <- fetch idr__Prelude.Strings.ltrim_with_556_1663
          idr__Prelude.Strings.ltrim_with_556_val <- case idr__Prelude.Strings.ltrim_with_556_val_1664 of
            (Cidr_Prelude.Basics.No) ->
              pure (Cidr_Prelude.Strings.StrNil)
            (Cidr_Prelude.Basics.Yes) ->
              idr__Prelude.Strings.ltrim_with_557_val_1665 <- idris_str_head $ idr__Prelude.Strings.ltrim_with_553
              idr__Prelude.Strings.ltrim_with_557_1666 <- store idr__Prelude.Strings.ltrim_with_557_val_1665
              idr__Prelude.Strings.ltrim_with_558_val <- idris_str_tail $ idr__Prelude.Strings.ltrim_with_553
              idr__Prelude.Strings.ltrim_with_558 <- store idr__Prelude.Strings.ltrim_with_558_val
              pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.ltrim_with_557_1666 idr__Prelude.Strings.ltrim_with_558)
          idr__Prelude.Strings.ltrim_with_556_1667 <- store idr__Prelude.Strings.ltrim_with_556_val
          idr__Prelude.Strings.ltrim_with_55 $ idr__Prelude.Strings.ltrim_with_555 idr__Prelude.Strings.ltrim_with_556_1667
    (Cidr_Prelude.Strings.StrNil) ->
      pure (CGrString #"")

"idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_140" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1400" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1401" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1402" =
  "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1400_val" <- fetch "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1400"
  case "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!<:0_with_1400_val" of
    (Cidr_Prelude.Interfaces.LT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.False)

"idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_143" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1430" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1431" "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1432" =
  "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1430_val" <- fetch "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1430"
  case "idr__Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!>:0_with_1430_val" of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.False)

idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case0 idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case1 =
  idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case1_val <- fetch idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case1
  case idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case1_val of
    (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2) ->
      pure (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2)
    (Cidr_Prelude.Maybe.Nothing) ->
      idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val_1668 <- pure (CGrInt 127)
      idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_1669 <- store idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val_1668
      idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0" $ idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case0 idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_1669
      idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_1670 <- store idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val
      idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val_1671 <- fetch idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_1670
      case idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case2_val_1671 of
        (Cidr_Prelude.Interfaces.GT) ->
          pure (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case0)
        #default ->
          pure (C"idr_{U_prim__strCons_1}" idr_Prelude.Show.showLitChar_____Prelude__Show__idr_128_27_128_65_case0)

idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case0 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case1 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case2 =
  idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case2_val <- fetch idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case2
  case idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case2_val of
    (Cidr_Main.Lit idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case4) ->
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case5_val <- idris_str_cons $ idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case0 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case5 <- store idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case5_val
      pure (Cidr_Main.Lit idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case5 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case4)
    #default ->
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_val_1672 <- pure (CGrString #"")
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_1673 <- store idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_val_1672
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_val <- idris_str_cons $ idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case0 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_1673
      idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_1674 <- store idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_val
      pure (Cidr_Main.Lit idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case3_1674 idr_Main.toFormat_____test__tdd__chapter06__01TypeLevelFuns__idr_74_30_74_43_case2)

idr_io_bind_IO__idr_108_34_108_36_case idr_io_bind_IO__idr_108_34_108_36_case0 idr_io_bind_IO__idr_108_34_108_36_case1 idr_io_bind_IO__idr_108_34_108_36_case2 idr_io_bind_IO__idr_108_34_108_36_case3 idr_io_bind_IO__idr_108_34_108_36_case4 idr_io_bind_IO__idr_108_34_108_36_case5 idr_io_bind_IO__idr_108_34_108_36_case6 idr_io_bind_IO__idr_108_34_108_36_case7 =
  "idr_{APPLY_0}" $ idr_io_bind_IO__idr_108_34_108_36_case7 idr_io_bind_IO__idr_108_34_108_36_case5
