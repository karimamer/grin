right p =
  t' <- fetch p [0]
  a1 <- fetch p [1]
  a2 <- fetch p [2]
  case t' of
   CNil -> pure (CInt 0)
   CCons -> update a1 (CInt 1)
            update a2 (CInt 2)
            rx <- fetch a2
            ry <- fetch a1
            update a1 (CInt 3)
            rz <- _prim_int_add rx ry
            pure (CInt rz)

right1 rp =
  rt' <- fetch rp [0]
  ra1 <- fetch rp [1]
  ra2 <- fetch rp [2]
  case rt' of
   CNil -> pure (CInt 0)
   CCons -> update ra1 (CInt 1)
            update ra2 (CInt 2)
            rrx <- fetch ra2
            rry <- fetch ra1
            rrz <- _prim_int_add rrx rry
            update ra1 (CInt rrz)
            rt1 <- fetch rp [0]
            ra3 <- fetch rp [1]
            ra4 <- fetch rp [2]
            case rt1 of
                  CNil -> pure (CInt 0)
                  CCons -> rx1 <- fetch ra3
                           ry1 <- fetch ra4
                           rz <- _prim_int_add rx1 ry1
                           pure (CInt rz)

right2 r2p r2h1 r2h2 =
  rx2 <- fetch r2p
  case r2h1 of
    CNil -> pure (CInt 0)
    (CCons rx2h rx2t) -> rx3 <- fetch rx2
                         case r2h2 of
                           CNil -> pure (CInt 1)
                           (CCons rx2h rx3t) -> rx4 <- fetch rx3
                                                pure (CInt rx4)

grinMain = t1 <- store (CInt 1)
           t2 <- store (CInt 10000)
           t3 <- store (Fupto t1 t2)
           t4 <- store (Fsum t3)
           (CInt r') <- eval t4
           _prim_int_print r'

upto m n = (CInt m') <- eval m
           (CInt n') <- eval n
           b' <- _prim_int_gt m' n'
           if b' then
            pure (CNil)
           else
            m1' <- _prim_int_add m' 1
            m1 <- store (CInt m1')
            p <- store (Fupto m1 n)
            pure (CCons m p)

sum l = l2 <- eval l
        case l2 of
          (CNil)       -> pure (CInt 0)
          (CCons x xs) -> (CInt x') <- eval x
                          (CInt s') <- sum xs
                          ax' <- _prim_int_add x' s'
                          pure (CInt ax')

eval q = v <- fetch q
         e1 <- fetch q
         case v of
          (CInt x'1)    -> pure v
          (CNil)        -> pure v
          (CCons y ys)  -> pure v
          (Fupto a b)   -> w <- upto a b
                           update q w
                           update e1 3
                           pure w
          (Fsum c)      -> z <- sum c
                           update q z
                           pure e1
